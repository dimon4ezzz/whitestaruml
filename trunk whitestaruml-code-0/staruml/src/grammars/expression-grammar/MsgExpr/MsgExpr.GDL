/*
{******************************************************************************}
{                                                                              }
{                StarUML - The Open Source UML/MDA Platform.                   }
{                                                                              }
{              Copyright (C) 2002-2005 - Plastic Software, Inc.                }
{                                                                              }
{                                                                              }
{ This program is free software; you can redistribute it and/or modify it      }
{ under the terms of the GNU General Public License as published by the Free   }
{ Software Foundation; either version 2 of the License, or (at your option)    }
{ any later version.                                                           }
{                                                                              }
{ This program is distributed in the hope that it will be useful, but WITHOUT  }
{ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or        }
{ FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for     }
{ more details.                                                                }
{                                                                              }
{ You should have received a copy of the GNU General Public License along with }
{ this program; if not, write to the Free Software Foundation, Inc., 51        }
{ Franklin St, Fifth Floor, Boston, MA 02110-1301 USA                          }
{                                                                              }
{ Linking StarUML statically or dynamically with other modules is making a     }
{ combined work based on StarUML. Thus, the terms and conditions of the GNU    }
{ General Public License cover the whole combination.                          }
{                                                                              }
{ In addition, as a special exception, Plastic Software give you permission to }
{ combine StarUML program with free software programs or libraries that are    }
{ released under the GNU LGPL/Mozilla/Apache/BSD and with code included in the }
{ standard release of ExpressBar, ExpressNavBar, ExpressInspector,             }
{ ExpressPageControl, ProGrammar, NextGrid under the commercial license (or    }
{ modified versions of such code, with unchanged license). You may copy and    }
{ distribute such a system following the terms of the GNU GPL for StarUML and  }
{ the licenses of the other code concerned, provided that you include the      }
{ source code of that other code when and as the GNU GPL requires distribution }
{ of source code. Plastic Software also give you permission to combine StarUML }
{ program with dynamically linking plug-in (or add-in) programs that are       }
{ released under the GPL-incompatible and proprietary license.                 }
{                                                                              }
{ Note that people who make modified versions of StarUML are not obligated to  }
{ grant this special exception for their modified versions; it is their choice }
{ whether to do so. The GNU General Public License gives permission to release }
{ a modified version without this exception; this exception also makes it      }
{ possible to release a modified version which carries forward this exception. }
{******************************************************************************}
*/

grammar message <IGNORECASE> {

	message_expression ::=
		[ stereotype_part ] [ recurrence_part ] [ return_part ] [ message_name ] [ argument_part ];
	
	stereotype_part ::=
		"<<" stereotype ">>";
	
	stereotype ::=
		id
		| error_stereotype;

	recurrence_part ::=
		iteration_clause_part [ branch_clause_part ]
		| branch_clause_part [ iteration_clause_part ];

	iteration_clause_part ::=
		"*" "[" iteration_clause "]";
	
	iteration_clause<TERMINAL> ::=
		'[^\93]*';

	branch_clause_part ::=
		"[" branch_clause "]";

	branch_clause<TERMINAL> ::=
		'[^\93]*';

	return_part ::=
		return_id ":=";

	return_id ::=
		id
		| error_return_id;

	message_name ::=
		id
		| error_message_name;

	argument_part ::=
		"(" argument_string ")";

	argument_string<TERMINAL> ::=
		'[^)]*';

	id<TERMINAL> ::=
		'[0-9a-zA-Z" `!@$%^&*_|{};.?"\34\39\92\128-\255]*';	
		// original (replaced)
		//'[0-9a-zA-Z" `!@$%^_."\39\46 \128-\255]*';
		//'[a-zA-Z_\128-\255][0-9a-zA-Z_\32\128-\255]*';


	// for error recover
	error_stereotype <ERROR = "INVALID_STEREOTYPE"> ::=
		* ( ">>" | "[" | "*" | id | ":=" | "(" | "\r" );

	error_return_id <ERROR = "INVALID_RETURN_ID"> ::=
		* ( id | "(" | "\r" );

	error_message_name <ERROR = "INVALID_NAME"> ::=
		* ( "(" | "\r");
	
	error_argument_string <ERROR = "INVALID_ARGUMENT_STRING"> ::=
		* ( "\r" );

};
