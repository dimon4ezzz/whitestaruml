unit WhiteStarUML_TLB;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 52393 $
// File generated on 12/26/2014 11:06:16 PM from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\JS\Delphi\WhiteStarDevInstall64\WhiteStarUML.exe (1)
// LIBID: {4D5F69B3-73FC-4C09-A1CE-73D1A677A0E7}
// LCID: 0
// Helpfile: 
// HelpString: WhiteStarUML Library
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// Parent TypeLibrary:
//   (0) v1.2 ParserCore, (C:\JS\Delphi\WhiteStarSourceforgeTrunkXE5\staruml\components\parser-core\ParserCore\bin\Release\ParserCore.tlb)
// SYS_KIND: SYS_WIN64
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
{$ALIGN 4}

interface

uses Winapi.Windows, System.Classes, System.Variants, System.Win.StdVCL, Vcl.Graphics, Vcl.OleServer, Winapi.ActiveX;
  

// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  WhiteStarUMLMajorVersion = 1;
  WhiteStarUMLMinorVersion = 0;

  LIBID_WhiteStarUML: TGUID = '{4D5F69B3-73FC-4C09-A1CE-73D1A677A0E7}';

  IID_IStarUMLApplication: TGUID = '{366A8FBC-259E-4228-AC6D-293D15041864}';
  CLASS_WhiteStarUMLApplication: TGUID = '{E155F938-9A1D-4555-9831-7E3C18B27F83}';
  IID_IUMLFactory: TGUID = '{93B49661-E40C-4B36-A385-E937DF875AB4}';
  IID_IElement: TGUID = '{6BF1C43B-C90E-4E10-AEA9-AAE19D4FA5AF}';
  IID_IModel: TGUID = '{37CE5188-CEB9-4F67-8A49-46BC11667706}';
  IID_IExtensibleModel: TGUID = '{4831D6FB-B090-4B50-B803-8B4F57957334}';
  IID_IUMLElement: TGUID = '{05BD8496-1B1E-4D2F-9E9C-24353BB64582}';
  IID_IUMLModelElement: TGUID = '{41725B53-1917-4D3B-A1A8-F8FCCF22D89E}';
  IID_IUMLGeneralizableElement: TGUID = '{8DA1D40F-BB4E-401F-B913-031E4DAD36D6}';
  IID_IUMLNamespace: TGUID = '{4C6D06BF-7840-4A1B-B7E7-08999E484E24}';
  IID_IMetaElement: TGUID = '{9111F106-C415-4CE2-AEF8-E006339FA974}';
  IID_IMetaClassifier: TGUID = '{0A3688E8-E3CD-4D28-B2EA-32955136A0BD}';
  IID_IMetaClass: TGUID = '{679B395E-CC22-4BC1-814E-C31B78147AFA}';
  IID_IMetaSlot: TGUID = '{15A5CBED-5B23-4385-9B18-9D81B12A9155}';
  IID_IMetaAttribute: TGUID = '{16D4B5AD-2817-4079-9E9B-303EC5CFDC98}';
  IID_IMetaAssociationEnd: TGUID = '{E0274973-68A6-4516-91A6-44BB0D5E1BF0}';
  IID_IMetaReference: TGUID = '{13B577DE-AD9F-435B-90CC-C1F65EC28A42}';
  IID_IMetaCollection: TGUID = '{6FDEEA70-02EC-43CD-900A-24DAEDF81D9D}';
  IID_IDocument: TGUID = '{87207805-69A8-4731-92BD-970B6011D4CC}';
  IID_IView: TGUID = '{68B7FB9E-F929-4DF2-9019-8793E5A8E5FC}';
  IID_IDiagramView: TGUID = '{0AEF079C-3C25-42B4-B2D0-C2EC1103C4C4}';
  IID_IDiagram: TGUID = '{F8B7B84A-5C66-4B73-B590-5E76606B809E}';
  IID_IConstraint: TGUID = '{EDAE6431-EB72-4E17-8B49-FC733DF4669E}';
  IID_ITaggedValue: TGUID = '{43568451-DDBD-428B-B7BB-A835DE365741}';
  IID_ITagDefinition: TGUID = '{CBD9F79B-38E9-410A-B488-38A2238A8501}';
  IID_ITagDefinitionSet: TGUID = '{D0E49916-5F6C-4F53-B622-A7FE92A241A8}';
  IID_IProfile: TGUID = '{8C2E2832-490B-4B5E-8EF3-5EE2D65FB361}';
  IID_IDataType: TGUID = '{BF34F178-5016-4407-B74A-CF4312BE6F50}';
  IID_IStereotype: TGUID = '{571A16C6-388B-4F53-A546-D9CC713502E7}';
  IID_IUMLElementImport: TGUID = '{93427E16-2E5A-450E-BAAB-2BBA07108F67}';
  IID_IUMLClassifier: TGUID = '{CC46D9E3-CA2E-4F42-86FE-4F8C12EAA83D}';
  IID_IUMLPackage: TGUID = '{F923C143-ECBB-4A42-8D3E-DEEF4329E5AD}';
  IID_IUMLFeature: TGUID = '{1CDA6EA7-49F0-44AE-8BD1-E2FEFCBFFDAC}';
  IID_IUMLBehavioralFeature: TGUID = '{C5E85290-40B3-4A32-B1B8-532D770704BE}';
  IID_IUMLOperation: TGUID = '{C508DC95-1024-4CEA-B323-361B9E312BE3}';
  IID_IUMLConnectorEnd: TGUID = '{51938E6A-A23A-42E5-AA6E-32C2EDAC8F0A}';
  IID_IUMLConnector: TGUID = '{799E6EAD-6DF3-4EE1-A92F-0B28B552EB41}';
  IID_IUMLClassifierRole: TGUID = '{B1A4605A-72AF-4CBB-A5DD-B8517FA42560}';
  IID_IUMLMessage: TGUID = '{14DE8C71-8C26-4529-8A8B-A73C739EB17A}';
  IID_IUMLInteraction: TGUID = '{E4ADFE54-34DF-493A-BC01-4F1E231102E5}';
  IID_IUMLCollaboration: TGUID = '{C0C21B09-C5CB-4458-AD3C-F02A374885AC}';
  IID_IUMLCollaborationInstanceSet: TGUID = '{7674CA41-A8C2-4E4D-A8F8-3020BE68ACAC}';
  IID_IUMLInteractionInstanceSet: TGUID = '{EE60A99D-8959-404E-8DB2-C36F2995BF7D}';
  IID_IUMLStimulus: TGUID = '{65D8CC5D-74F5-48AD-86C3-B637DA8957A8}';
  IID_IUMLInstance: TGUID = '{1580EAFB-7216-4225-850F-4D541E26E51E}';
  IID_IUMLAttributeLink: TGUID = '{D9A0B25A-8AFC-4859-886A-49E13A141A7D}';
  IID_IUMLStructuralFeature: TGUID = '{7B1583DC-5828-478E-B858-C29B8C757C73}';
  IID_IUMLAttribute: TGUID = '{643383DF-A403-4302-9E25-7C87345BFC15}';
  IID_IUMLAssociationEnd: TGUID = '{4E8DD247-A056-4E45-93DD-A7C6B690FDDE}';
  IID_IUMLRelationship: TGUID = '{773D89C5-95B9-462F-90AF-664034D5FE6B}';
  IID_IUMLAssociation: TGUID = '{C03687D2-3FAA-410A-BD9D-9EB885B27DC3}';
  IID_IUMLAssociationClass: TGUID = '{DB772E46-B35C-4DAA-B63D-FD941ED2A45A}';
  IID_IUMLClass: TGUID = '{431370B2-5084-4DF9-A195-A45B140CA708}';
  IID_IUMLLink: TGUID = '{9136547D-454B-4D41-9C19-EDBC5EB125B9}';
  IID_IUMLLinkEnd: TGUID = '{BCC69267-5D2C-4D7D-8179-C7836838B9F4}';
  IID_IUMLLinkObject: TGUID = '{51AE8518-0614-4110-9642-0A37B514A033}';
  IID_IUMLObject: TGUID = '{7CB0F94B-B944-4E35-85EF-AFDD1EB501D2}';
  IID_IUMLAssociationRole: TGUID = '{A832AAB4-48F6-4FC8-965C-9919092F14AB}';
  IID_IUMLAssociationEndRole: TGUID = '{46C497C3-8F19-4DEB-8EBA-45E6A6BAF521}';
  IID_IUMLComponentInstance: TGUID = '{A7F78782-5579-496A-8024-97F3F7958176}';
  IID_IUMLNodeInstance: TGUID = '{B3CF8528-8D11-4099-818C-7C40B71F96B2}';
  IID_IUMLAction: TGUID = '{0C6181AF-6079-4AFB-B615-2E46F95BA12D}';
  IID_IUMLArgument: TGUID = '{77275B26-6D9A-4CAD-839F-77F9AF3687BE}';
  IID_IUMLActionSequence: TGUID = '{ABECC17C-64A1-435D-BB5C-7928B9D1CB27}';
  IID_IUMLStateVertex: TGUID = '{20599819-F8BA-4B33-B730-2FDA7C90BA82}';
  IID_IUMLState: TGUID = '{70E2E0F6-6213-4B92-8403-85C2B42D2A71}';
  IID_IUMLCompositeState: TGUID = '{82AE9960-8719-4D2D-97FA-974A2AE989D4}';
  IID_IUMLTransition: TGUID = '{1501F2CE-B231-4FE8-938A-A976E9D35930}';
  IID_IUMLEvent: TGUID = '{1380ED56-E228-4758-BC25-4660679BBE38}';
  IID_IUMLParameter: TGUID = '{85014DB9-4743-4407-87C8-89A56D8E7950}';
  IID_IUMLSimpleState: TGUID = '{255FA2B2-F808-4DE1-9315-A36DBD85B44F}';
  IID_IUMLObjectFlowState: TGUID = '{4D77BEAB-BB54-4261-8FEE-E2386AC4E40B}';
  IID_IUMLStateMachine: TGUID = '{A87F363C-03E7-4BCC-B9B5-596CA4A69732}';
  IID_IUMLSubmachineState: TGUID = '{EB1395AA-ED84-43B2-A19E-4DA00A7B4EAA}';
  IID_IUMLClassifierInState: TGUID = '{BC44B44D-8F14-402C-80DD-0F936DC60BC1}';
  IID_IUMLInteractionFragment: TGUID = '{7D010090-0FAA-40CF-8395-839767834C77}';
  IID_IUMLInteractionOperand: TGUID = '{257B3B46-B74E-4316-8298-5902B9181EB5}';
  IID_IUMLCombinedFragment: TGUID = '{F61418C9-FED0-4485-9FC6-B312532EA26F}';
  IID_IUMLSignal: TGUID = '{BD4E6A26-3410-46B4-A606-B53F2A0F2AB5}';
  IID_IUMLReception: TGUID = '{FD66F18E-C5A3-4138-9D82-4A3B4A8E696F}';
  IID_IUMLSendAction: TGUID = '{0B98EDFA-BB54-42F2-A011-0E8E99AE0ACA}';
  IID_IUMLSignalEvent: TGUID = '{9C3362FD-01D3-457D-968A-C31F12877E62}';
  IID_IUMLMethod: TGUID = '{E95BC808-931D-40E1-ABBE-C812E22D3897}';
  IID_IUMLCallAction: TGUID = '{7664ACBF-A8E1-4992-BC19-5C05CF5046DE}';
  IID_IUMLCallEvent: TGUID = '{7FBCE306-35A0-432A-BB7D-BEAD89D15D77}';
  IID_IUMLGeneralization: TGUID = '{460F9540-6624-4834-92CF-A12ACF76043D}';
  IID_IUMLPort: TGUID = '{41CA8B62-459D-4A72-AE2E-0E504A01A721}';
  IID_IUMLCreateAction: TGUID = '{0D648A4D-9E11-4379-B2B7-A8B1B2C59414}';
  IID_IUMLDependency: TGUID = '{5E22F30D-0FAC-4833-9A90-6CAEEAD115B1}';
  IID_IUMLTemplateParameter: TGUID = '{C3278B29-50AF-412A-8F1F-3B3B153BB29E}';
  IID_IUMLComment: TGUID = '{2374D4CA-67EF-409E-A922-47391351B911}';
  IID_IUMLComponent: TGUID = '{A7DC0875-B168-4737-926B-2189774996FF}';
  IID_IUMLNode: TGUID = '{C95EE915-2020-4A2E-A64C-3864047582E0}';
  IID_IUMLArtifact: TGUID = '{99725A79-45E9-4FE9-BC4E-32007154B941}';
  IID_IUMLTemplateArgument: TGUID = '{982CA266-1790-4411-8385-3F90F4E544A4}';
  IID_IUMLPartition: TGUID = '{97EB99FD-8F4D-4028-806E-75393ED3B924}';
  IID_IUMLActivityGraph: TGUID = '{B75D3480-F635-4BBE-B9C9-D603A3E52217}';
  IID_IUMLModel: TGUID = '{D6FDDD80-92BF-4258-843E-BCEB8E459C7C}';
  IID_IUMLSubsystem: TGUID = '{32C56643-6609-4CD4-A5BC-33EEC84E85A7}';
  IID_IUMLInterface: TGUID = '{C5E4E1BA-DB5E-4D44-8A0F-A8DDF9FA3E31}';
  IID_IUMLDataType: TGUID = '{C970F1CD-49A0-407E-B678-C9B9FDE7B261}';
  IID_IUMLEnumeration: TGUID = '{321B7E63-FD4A-4828-A5D6-9B986240E129}';
  IID_IUMLEnumerationLiteral: TGUID = '{8CA5B43A-F0A7-479F-8E96-606FAA493380}';
  IID_IUMLException: TGUID = '{592D17B9-9EC3-48C3-A604-1C91B55FA12F}';
  IID_IUMLUseCase: TGUID = '{CD897DE7-61AC-4495-800F-85171E320D82}';
  IID_IUMLExtend: TGUID = '{605077AF-BB57-4058-B09A-C9620AD24D10}';
  IID_IUMLExtensionPoint: TGUID = '{DCD8C3D7-F2E9-4A96-A6BA-D350882E52FC}';
  IID_IUMLInclude: TGUID = '{C67F41D0-7FDE-4738-AB7C-128C6D13B19D}';
  IID_IUMLActor: TGUID = '{C1A691C9-C5DA-465E-A1B7-1FBBF93429A4}';
  IID_IUMLActionState: TGUID = '{8B779E95-4691-43E3-AB1B-75D3E50B6194}';
  IID_IUMLSubactivityState: TGUID = '{4ACA0449-1731-46B5-9DD5-D743E45C08D9}';
  IID_IUMLPseudostate: TGUID = '{7DDE6B0B-E3F2-48DC-ADD4-365AB0B1F146}';
  IID_IUMLFinalState: TGUID = '{186475B9-E2BE-46C7-ABD9-3ED471C6064B}';
  IID_IUMLUninterpretedAction: TGUID = '{855F3EA4-2D64-4E0E-8D72-01B67A6BA420}';
  IID_IUMLTimeEvent: TGUID = '{70EE6C02-8633-4CC8-899C-6AC330A961AC}';
  IID_IUMLChangeEvent: TGUID = '{E46AAB05-6C9F-4A6B-A30F-6D268FAC76B5}';
  IID_IUMLRealization: TGUID = '{9876358A-5057-463F-BA20-77281F5545A7}';
  IID_IUMLDiagram: TGUID = '{2B9CC497-A44C-426F-A77D-4FE7D6BCCB08}';
  IID_IUMLClassDiagram: TGUID = '{CA77C1FD-15FE-42E4-966E-3FCE78BA107A}';
  IID_IUMLUseCaseDiagram: TGUID = '{B07A1760-517B-4598-A671-4595C89DFB28}';
  IID_IUMLSequenceDiagram: TGUID = '{502A2C70-D1AF-41D0-8BAA-6C112C3AD713}';
  IID_IUMLSequenceRoleDiagram: TGUID = '{6D037C80-5266-45DC-905E-12F977CAFE9C}';
  IID_IUMLCollaborationDiagram: TGUID = '{49455F9C-24E3-4F57-88F1-9BBB513F48E0}';
  IID_IUMLCollaborationRoleDiagram: TGUID = '{933DEAAB-41B8-4878-BD29-F7AFCDBE3FF4}';
  IID_IUMLStatechartDiagram: TGUID = '{398285B1-8C5B-4299-8F50-961C3CDC6B03}';
  IID_IUMLActivityDiagram: TGUID = '{311DD0BA-9DEB-458E-970D-C14B32A8DAB1}';
  IID_IUMLComponentDiagram: TGUID = '{F1AA36CE-52E6-4609-8140-10A2B8726B88}';
  IID_IUMLDeploymentDiagram: TGUID = '{53C5CBBF-7B1F-4E1E-8C47-996A37DFE8DB}';
  IID_INodeView: TGUID = '{C7D78E4E-C16C-4AB4-B104-63749FA618C0}';
  IID_IUMLCustomTextView: TGUID = '{486A14B6-0BD2-4A0D-B9B7-F3E348D76E80}';
  IID_IUMLNoteView: TGUID = '{68D058A9-4660-4760-AF61-0490301FD435}';
  IID_IEdgeView: TGUID = '{52A711DA-D714-48FB-AD09-FCB30BE90397}';
  IID_IUMLNoteLinkView: TGUID = '{950FAFA7-3426-4E19-9CB4-2B835B0A61F2}';
  IID_IPoints: TGUID = '{126FD957-69D8-4491-845E-E4D11827A788}';
  IID_IUMLTextView: TGUID = '{DDA85E7E-50DD-4DB4-97C2-637BCBF83A1C}';
  IID_IUMLGeneralNodeView: TGUID = '{B045C105-4F8A-4787-828E-784BFAF03ACC}';
  IID_IUMLPackageView: TGUID = '{57051984-95C5-4B2E-B496-78CB438F0AB3}';
  IID_IUMLModelView: TGUID = '{F0DFD223-DFD3-49DE-918B-06C6A75891C0}';
  IID_IUMLNameCompartmentView: TGUID = '{9D391A60-F42E-4DF3-AD9C-C6FE6245935F}';
  IID_ILabelView: TGUID = '{0C755D7C-0C48-4E55-835D-304103090950}';
  IID_IUMLSubsystemView: TGUID = '{C5FCC824-AFF3-4039-A903-3D90D67A70ED}';
  IID_IUMLListCompartmentView: TGUID = '{D02D2EB5-5F1B-4222-BF9F-4AF710E6FC61}';
  IID_IUMLOperationCompartmentView: TGUID = '{BCD28A7F-3FBD-4597-BF81-789E7A300832}';
  IID_IUMLClassifierView: TGUID = '{2F620BE5-CD08-454E-8894-263827DF5A07}';
  IID_IUMLClassView: TGUID = '{6FE2F2EC-12DE-4DAA-AE4F-AA8D26BFE805}';
  IID_IUMLAttributeCompartmentView: TGUID = '{64705E84-9117-4CB6-AE1D-60A7A6FB19F5}';
  IID_IUMLTemplateParameterCompartmentView: TGUID = '{4DF037E5-ECD5-4BEA-9E13-0094C44AF164}';
  IID_IUMLInterfaceView: TGUID = '{FB3A0DB3-4A94-4CE1-BDA6-D4D11A68723A}';
  IID_IUMLEnumerationView: TGUID = '{DD624304-76F9-46DF-A34F-4C5418A1F7D5}';
  IID_IUMLEnumerationLiteralCompartmentView: TGUID = '{D2CFC5BD-F486-4426-9FB4-A42BD9B55693}';
  IID_IUMLSignalView: TGUID = '{0C873801-92C7-41EA-B028-9F77673124C0}';
  IID_IUMLExceptionView: TGUID = '{E3671CB0-A740-4F7C-85C3-8FDCA2A259CE}';
  IID_IUMLCustomComponentView: TGUID = '{DABA74F5-B17F-493E-A026-C910C6D03D9B}';
  IID_IUMLComponentView: TGUID = '{FE3A8A08-3DBE-4398-BFD4-B1DAEA732A2F}';
  IID_IUMLComponentInstanceView: TGUID = '{3836CB6B-38F9-4D61-90C5-5CD633892B85}';
  IID_IUMLCustomNodeView: TGUID = '{22684659-3327-491F-837C-D0F85E81948B}';
  IID_IUMLNodeView: TGUID = '{5308B1D8-2616-439F-93D3-1F02A60CB9B7}';
  IID_IUMLNodeInstanceView: TGUID = '{A5B6B755-FF51-4C43-B3BB-84598426E15C}';
  IID_IUMLActorView: TGUID = '{2109A6D0-4843-4D1B-B0FE-275A1B138FCE}';
  IID_IUMLUseCaseView: TGUID = '{CB2CF2ED-865A-4D83-9ED1-450D754549F5}';
  IID_IUMLCollaborationView: TGUID = '{C363EF95-BFC7-48A7-99F1-24330608B536}';
  IID_IUMLCollaborationInstanceSetView: TGUID = '{6569588B-FEC5-4A19-A461-E67C81D39EEC}';
  IID_IUMLGeneralEdgeView: TGUID = '{1AAC9637-3A63-4371-AD7B-D405E4573F5E}';
  IID_IUMLGeneralizationView: TGUID = '{10E06392-85C9-47FC-8966-FCE94CE5C121}';
  IID_IParasiticView: TGUID = '{06218FE6-D40E-4460-A3A5-CF8C33D591F1}';
  IID_IEdgeParasiticView: TGUID = '{FE4C988B-5A54-449C-A1F7-32A39FDBBC63}';
  IID_IEdgeLabelView: TGUID = '{5278941B-618A-4A6B-9FA1-1845D9F99EB9}';
  IID_IUMLAssociationView: TGUID = '{F00A2103-3EAA-432A-8383-D09243F47D81}';
  IID_IUMLQualifierCompartmentView: TGUID = '{F52E5AED-6522-4583-8C25-185C57532C9A}';
  IID_IUMLAssociationClassView: TGUID = '{A37D798D-99F1-4CF3-A5EF-22183097EF8F}';
  IID_IUMLDependencyView: TGUID = '{CB2BF5BD-91A5-4D61-B84A-1C6C6B0E9558}';
  IID_IUMLRealizationView: TGUID = '{B05D874C-CEA9-496D-9356-69461615E86C}';
  IID_IUMLIncludeView: TGUID = '{0C1C5A82-D0BD-4328-90C5-AA8B1A221923}';
  IID_IUMLExtendView: TGUID = '{38A73FC4-9B35-40F6-B475-E228C7B10436}';
  IID_IUMLCustomColObjectView: TGUID = '{B22E45C0-E802-4D21-89D8-760FE1FBFD9E}';
  IID_IUMLColObjectView: TGUID = '{31F026B0-8BB5-4E95-A1CA-ADD9C25C2872}';
  IID_IUMLDiagramView: TGUID = '{07D46F21-08E3-485D-B596-FA796510FC36}';
  IID_IUMLSequenceDiagramView: TGUID = '{A219F10C-EA93-447F-B3D1-86B93E27C610}';
  IID_IUMLCustomSeqObjectView: TGUID = '{B86953E2-93B7-45D3-88C8-9FCB12187ADC}';
  IID_IUMLSeqObjectView: TGUID = '{DBF0967F-1906-49A3-9480-6E9DB49F127A}';
  IID_IUMLLifeLineView: TGUID = '{0E0C7F21-D022-4EA7-BABE-27E389BE38E9}';
  IID_IUMLColClassifierRoleView: TGUID = '{E01827D5-F0A3-4683-8990-840E984A2673}';
  IID_IUMLSequenceRoleDiagramView: TGUID = '{0A033957-D701-49A6-86DC-875AE7FF5B90}';
  IID_IUMLSeqClassifierRoleView: TGUID = '{22EC10E5-34DF-4AA4-AECB-F6E1BCF82F25}';
  IID_IUMLLinkView: TGUID = '{971EBD61-0B8C-48A0-8C85-F08B63FD31E7}';
  IID_IUMLAssociationRoleView: TGUID = '{A7CD8BF8-B276-4649-BCFA-3387F16FA00E}';
  IID_IUMLCollaborationDiagramView: TGUID = '{93FC66C7-3238-480A-B10D-8B0818B2A8C2}';
  IID_IEdgeNodeView: TGUID = '{7E85AB07-F320-4598-8215-D2B816B4AC6E}';
  IID_IUMLCustomColMessageView: TGUID = '{518798B6-F785-42E5-AB6C-AE0957B2BBB7}';
  IID_IUMLColStimulusView: TGUID = '{B90CFBFC-9B75-4A88-9E42-D7D2BF9D88F2}';
  IID_INodeParasiticView: TGUID = '{95D114FC-57F9-41AA-9483-8ABF4A795A51}';
  IID_INodeLabelView: TGUID = '{52B76932-06A2-4BE4-9180-BE77B02B3710}';
  IID_IUMLCustomSeqMessageView: TGUID = '{A3A848D6-36BC-4120-A8C5-C3E0F514010A}';
  IID_IUMLSeqStimulusView: TGUID = '{5665D900-DB3D-4A22-99ED-B2F731555DCE}';
  IID_IUMLActivationView: TGUID = '{C72B6CBF-199E-49D0-B06C-63BD2062C21D}';
  IID_IUMLCollaborationRoleDiagramView: TGUID = '{A30AE46D-0AFE-4AD8-967C-F7DA4D509C31}';
  IID_IUMLColMessageView: TGUID = '{C5617B4B-56B5-42D7-AD89-037DB39579F8}';
  IID_IUMLSeqMessageView: TGUID = '{95830989-53EC-42C6-83E8-7A130904D171}';
  IID_IUMLStatechartDiagramView: TGUID = '{BEBE4753-AD9B-4C1D-B82D-DE94BA3C9D5B}';
  IID_IUMLCustomStateView: TGUID = '{0BE1FC45-BA96-4F0C-8DE5-8E842D7F29EE}';
  IID_IUMLStateView: TGUID = '{F0601041-17EC-450C-BD2D-229DEE32FEAC}';
  IID_IUMLInternalTransitionCompartmentView: TGUID = '{4D2E49F0-AF47-4EE0-A7E2-BBAA0CED0376}';
  IID_IUMLSubmachineStateView: TGUID = '{1411A64F-8CE3-41AA-B2C8-E2CA0CD75953}';
  IID_IUMLPseudostateView: TGUID = '{152D3A04-2300-4AC5-9C95-307B2841FB71}';
  IID_IUMLFinalStateView: TGUID = '{0D795CEF-FC50-4156-AC44-8892B32F9E92}';
  IID_IUMLActivityDiagramView: TGUID = '{1F98E949-33CC-4810-A15F-F16247B67946}';
  IID_IUMLActionStateView: TGUID = '{C55A4A15-5AAE-460C-95F9-BA08D2EECDD0}';
  IID_IUMLSubactivityStateView: TGUID = '{CBD743CB-8318-4358-8869-0E6A4606E46E}';
  IID_IUMLSwimlaneView: TGUID = '{404051FB-AAC3-46A5-A783-9DF40E848DCD}';
  IID_IUMLTransitionView: TGUID = '{EF173B12-C59D-4CDA-858B-A7A7CC4BFDC9}';
  IID_IProjectManager: TGUID = '{51D0E4E0-68D9-4982-B8A4-72BD97FBAC3A}';
  IID_IUMLProject: TGUID = '{67DB81F5-D533-440B-AB73-90B5016771A3}';
  IID_IUMLDocument: TGUID = '{032B5C5C-7DBC-4D79-9824-F7964993B2E8}';
  IID_IUMLUnitDocument: TGUID = '{B152C58C-9891-4482-BA45-4C68AADD3CEE}';
  IID_IUMLProjectDocument: TGUID = '{A46A8EA6-B4A0-47EC-9600-AA3B04287026}';
  IID_ISelectionManager: TGUID = '{06AA1D89-25DC-4C70-B35D-507ABDF79CB5}';
  IID_IElementSelector: TGUID = '{02133590-EBC6-4DD0-87F6-0D3236B1CDE0}';
  IID_IMetaModel: TGUID = '{23E67360-A1DB-42B6-8DB1-37544A49700D}';
  IID_IMetaEnumeration: TGUID = '{F1C9F998-AEF2-41C1-B8F9-DD0D062D3D9F}';
  IID_IMetaLiteral: TGUID = '{874A5952-FC22-40EF-AE15-716B721ACFDC}';
  IID_IMetaDataType: TGUID = '{AAFA9E9F-B4E6-432A-9AEB-A4940C8C9170}';
  IID_IMetaPrimitiveType: TGUID = '{BABD74BD-8212-4EFD-AEC1-C7AB42247416}';
  IID_IExtensionManager: TGUID = '{71FA146F-DE8F-433E-B613-351E958BC4BF}';
  IID_IElementListSelector: TGUID = '{A8C4080F-1731-4F02-81AC-B3DCA65C46C3}';
  IID_IEventPublisher: TGUID = '{DBD4FF57-4477-41F6-9046-77C1F3643A8A}';
  IID_IEventSubscriber: TGUID = '{CF0852B3-22FF-4EE9-A3E0-8FA299C689DA}';
  IID_IUMLClassDiagramView: TGUID = '{30DFD772-7B09-4EEE-9705-C13EE93D2A44}';
  IID_IUMLDeploymentDiagramView: TGUID = '{64FD0840-68E0-4ADF-A30A-F9D62E2DFC4C}';
  IID_IUMLComponentDiagramView: TGUID = '{A6101CC7-50F0-490A-B18F-6F21C30EFA85}';
  IID_IUMLUseCaseDiagramView: TGUID = '{8BAD4803-8AA1-49E4-9F0F-36CC2EF617F1}';
  IID_INodeNodeView: TGUID = '{22CCD7E9-C8AE-41C9-B7E0-00E42DE57D31}';
  IID_IUMLDataValue: TGUID = '{73E2074C-E519-4598-BD8C-DFFD53EFE5AB}';
  IID_IUMLSubsystemInstance: TGUID = '{3A87707E-9080-47EA-9E96-2D75A9D153BA}';
  IID_IUMLUseCaseInstance: TGUID = '{0BAC9770-BD34-49C9-89F9-F58DFFBAF1B4}';
  IID_IUMLSynchState: TGUID = '{ABACE03E-25C3-471D-99AF-0DDE0FD9F733}';
  IID_IUMLStubState: TGUID = '{D2341FB1-F55B-4043-A524-D219430DA27D}';
  IID_IUMLSignalAcceptState: TGUID = '{70F0A224-BE87-4D4B-8C53-1F17E79EAC1C}';
  IID_IUMLCallState: TGUID = '{564C7539-033C-4D11-BD1F-E984A320785B}';
  IID_IUMLSignalSendState: TGUID = '{EAD0853A-1746-453C-9B64-11AC3586ACD6}';
  IID_IUMLFlowFinalState: TGUID = '{48BA99AC-0B8B-47AA-8C9E-0E3BE932E7F8}';
  IID_IUMLProgrammingLanguageDataType: TGUID = '{D5EB8A2E-7154-40F9-A33E-E83B940807F8}';
  IID_IUMLPrimitive: TGUID = '{7C84E1B8-A335-4E69-9230-A2BEC9F9509A}';
  IID_IUMLTerminateAction: TGUID = '{655B6830-178F-4632-B7D2-1DF518F4599F}';
  IID_IUMLDestroyAction: TGUID = '{E88B8D27-000F-4108-A2EF-00E5031F095B}';
  IID_IUMLReturnAction: TGUID = '{18C78FBA-D71B-4221-A34A-253338D864CB}';
  IID_IUMLCompositeStructureDiagram: TGUID = '{793DE345-9E62-4AAF-AB25-F035B55F8CEB}';
  IID_IStarUMLAddIn: TGUID = '{0F84CF65-8944-4ED4-8C57-49C96616FEBA}';
  IID_IExprBuilder: TGUID = '{414633E5-89AA-440F-8B07-F8EFD4B6F539}';
  CLASS_TExprBuilder: TGUID = '{E5833835-D56A-4973-8547-7255208BF164}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// Constants for enum tagMetaAssociationEndKind
type
  tagMetaAssociationEndKind = TOleEnum;
const
  maeReference = $00000000;
  maeCollection = $00000001;

// Constants for enum tagMetaAggregateKind
type
  tagMetaAggregateKind = TOleEnum;
const
  makNone = $00000000;
  makAggregate = $00000001;
  makComposite = $00000002;

// Constants for enum tagTagTypeKind
type
  tagTagTypeKind = TOleEnum;
const
  tkInteger = $00000000;
  tkBoolean = $00000001;
  tkString = $00000002;
  tkReal = $00000003;
  tkEnumeration = $00000004;
  tkReference = $00000005;
  tkCollection = $00000006;

// Constants for enum tagUMLVisibilityKind
type
  tagUMLVisibilityKind = TOleEnum;
const
  vkPublic = $00000000;
  vkProtected = $00000001;
  vkPrivate = $00000002;
  vkPackage = $00000003;

// Constants for enum tagUMLScopeKind
type
  tagUMLScopeKind = TOleEnum;
const
  skInstance = $00000000;
  skClassifier = $00000001;

// Constants for enum tagUMLChangeableKind
type
  tagUMLChangeableKind = TOleEnum;
const
  ckChangeable = $00000000;
  ckFrozen = $00000001;
  ckAddOnly = $00000002;

// Constants for enum tagUMLOrderingKind
type
  tagUMLOrderingKind = TOleEnum;
const
  okUnordered = $00000000;
  okOrdered = $00000001;

// Constants for enum tagUMLAggregationKind
type
  tagUMLAggregationKind = TOleEnum;
const
  akNone = $00000000;
  akAggregate = $00000001;
  akComposite = $00000002;

// Constants for enum tagUMLParameterDirectionKind
type
  tagUMLParameterDirectionKind = TOleEnum;
const
  pdkIn = $00000000;
  pdkInout = $00000001;
  pdkOut = $00000002;
  pdkReturn = $00000003;

// Constants for enum tagUMLInteractionOperatorKind
type
  tagUMLInteractionOperatorKind = TOleEnum;
const
  iokSeq = $00000000;
  iokAlt = $00000001;
  iokOpt = $00000002;
  iokBreak = $00000003;
  iokPar = $00000004;
  iokStrict = $00000005;
  iokLoop = $00000006;
  iokRegion = $00000007;
  iokNeg = $00000008;
  iokAssert = $00000009;
  iokIgnore = $0000000A;
  iokConsider = $0000000B;

// Constants for enum tagUMLCallConcurrencyKind
type
  tagUMLCallConcurrencyKind = TOleEnum;
const
  cckSequential = $00000000;
  cckGuarded = $00000001;
  cckConcurrent = $00000002;

// Constants for enum tagUMLPseudostateKind
type
  tagUMLPseudostateKind = TOleEnum;
const
  pkChoice = $00000000;
  pkDeepHistory = $00000001;
  pkSynchronization = $00000002;
  pkInitial = $00000003;
  pkJunction = $00000004;
  pkShallowHistory = $00000005;
  pkDecision = $00000006;

// Constants for enum tagUMLFactoryMessageKind
type
  tagUMLFactoryMessageKind = TOleEnum;
const
  mkCallAction = $00000000;
  mkSendAction = $00000001;
  mkReturnAction = $00000002;
  mkCreateAction = $00000003;
  mkDestroyAction = $00000004;

// Constants for enum tagUMLMessageSignatureKind
type
  tagUMLMessageSignatureKind = TOleEnum;
const
  mskNone = $00000000;
  mskTypeOnly = $00000001;
  mskNameOnly = $00000002;
  mskNameAndType = $00000003;

// Constants for enum tagLineStyleKind
type
  tagLineStyleKind = TOleEnum;
const
  lsRectilinear = $00000000;
  lsOblique = $00000001;

// Constants for enum tagUMLStereotypeDisplayKind
type
  tagUMLStereotypeDisplayKind = TOleEnum;
const
  sdkLabel = $00000000;
  sdkIcon = $00000001;
  sdkNone = $00000002;

// Constants for enum tagEdgePositionKind
type
  tagEdgePositionKind = TOleEnum;
const
  epHead = $00000000;
  epMiddle = $00000001;
  epTail = $00000002;

// Constants for enum tagElementFilteringKind
type
  tagElementFilteringKind = TOleEnum;
const
  fkAll = $00000000;
  fkPackages = $00000001;
  fkClassifiers = $00000002;

// Constants for enum tagEventKind
type
  tagEventKind = TOleEnum;
const
  EVK_APPLICATION_ACTIVATE = $00000000;
  EVK_APPLICATION_DEACTIVATE = $00000001;
  EVK_APPLICATION_MINIMIZE = $00000002;
  EVK_APPLICATION_RESTORE = $00000003;
  EVK_OPTIONS_APPLIED = $00000004;
  EVK_PROJECT_OPENED = $00000005;
  EVK_PROJECT_SAVED = $00000006;
  EVK_PROJECT_CLOSING = $00000007;
  EVK_PROJECT_CLOSED = $00000008;
  EVK_DOCUMENT_MODIFIED = $00000009;
  EVK_DOCUMENT_SAVED = $0000000A;
  EVK_UNIT_SEPARATED = $0000000B;
  EVK_UNIT_MERGED = $0000000C;
  EVK_UNIT_OPENED = $0000000D;
  EVK_SELECTION_CHANGED = $0000000E;
  EVK_DIAGRAM_ACTIVATED = $0000000F;
  EVK_ELEMENTS_ADDED = $00000010;
  EVK_ELEMENTS_DELETING = $00000011;
  EVK_ELEMENTS_DELETED = $00000012;
  EVK_MODELS_CHANGED = $00000013;
  EVK_VIEWS_CHANGED = $00000014;

// Constants for enum tagInformationMessageKind
type
  tagInformationMessageKind = TOleEnum;
const
  mkGeneral = $00000000;
  mkFindResult = $00000001;
  mkVerificationResult = $00000002;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  IStarUMLApplication = interface;
  IStarUMLApplicationDisp = dispinterface;
  IUMLFactory = interface;
  IUMLFactoryDisp = dispinterface;
  IElement = interface;
  IElementDisp = dispinterface;
  IModel = interface;
  IModelDisp = dispinterface;
  IExtensibleModel = interface;
  IExtensibleModelDisp = dispinterface;
  IUMLElement = interface;
  IUMLElementDisp = dispinterface;
  IUMLModelElement = interface;
  IUMLModelElementDisp = dispinterface;
  IUMLGeneralizableElement = interface;
  IUMLGeneralizableElementDisp = dispinterface;
  IUMLNamespace = interface;
  IUMLNamespaceDisp = dispinterface;
  IMetaElement = interface;
  IMetaElementDisp = dispinterface;
  IMetaClassifier = interface;
  IMetaClassifierDisp = dispinterface;
  IMetaClass = interface;
  IMetaClassDisp = dispinterface;
  IMetaSlot = interface;
  IMetaSlotDisp = dispinterface;
  IMetaAttribute = interface;
  IMetaAttributeDisp = dispinterface;
  IMetaAssociationEnd = interface;
  IMetaAssociationEndDisp = dispinterface;
  IMetaReference = interface;
  IMetaReferenceDisp = dispinterface;
  IMetaCollection = interface;
  IMetaCollectionDisp = dispinterface;
  IDocument = interface;
  IDocumentDisp = dispinterface;
  IView = interface;
  IViewDisp = dispinterface;
  IDiagramView = interface;
  IDiagramViewDisp = dispinterface;
  IDiagram = interface;
  IDiagramDisp = dispinterface;
  IConstraint = interface;
  IConstraintDisp = dispinterface;
  ITaggedValue = interface;
  ITaggedValueDisp = dispinterface;
  ITagDefinition = interface;
  ITagDefinitionDisp = dispinterface;
  ITagDefinitionSet = interface;
  ITagDefinitionSetDisp = dispinterface;
  IProfile = interface;
  IProfileDisp = dispinterface;
  IDataType = interface;
  IDataTypeDisp = dispinterface;
  IStereotype = interface;
  IStereotypeDisp = dispinterface;
  IUMLElementImport = interface;
  IUMLElementImportDisp = dispinterface;
  IUMLClassifier = interface;
  IUMLClassifierDisp = dispinterface;
  IUMLPackage = interface;
  IUMLPackageDisp = dispinterface;
  IUMLFeature = interface;
  IUMLFeatureDisp = dispinterface;
  IUMLBehavioralFeature = interface;
  IUMLBehavioralFeatureDisp = dispinterface;
  IUMLOperation = interface;
  IUMLOperationDisp = dispinterface;
  IUMLConnectorEnd = interface;
  IUMLConnectorEndDisp = dispinterface;
  IUMLConnector = interface;
  IUMLConnectorDisp = dispinterface;
  IUMLClassifierRole = interface;
  IUMLClassifierRoleDisp = dispinterface;
  IUMLMessage = interface;
  IUMLMessageDisp = dispinterface;
  IUMLInteraction = interface;
  IUMLInteractionDisp = dispinterface;
  IUMLCollaboration = interface;
  IUMLCollaborationDisp = dispinterface;
  IUMLCollaborationInstanceSet = interface;
  IUMLCollaborationInstanceSetDisp = dispinterface;
  IUMLInteractionInstanceSet = interface;
  IUMLInteractionInstanceSetDisp = dispinterface;
  IUMLStimulus = interface;
  IUMLStimulusDisp = dispinterface;
  IUMLInstance = interface;
  IUMLInstanceDisp = dispinterface;
  IUMLAttributeLink = interface;
  IUMLAttributeLinkDisp = dispinterface;
  IUMLStructuralFeature = interface;
  IUMLStructuralFeatureDisp = dispinterface;
  IUMLAttribute = interface;
  IUMLAttributeDisp = dispinterface;
  IUMLAssociationEnd = interface;
  IUMLAssociationEndDisp = dispinterface;
  IUMLRelationship = interface;
  IUMLRelationshipDisp = dispinterface;
  IUMLAssociation = interface;
  IUMLAssociationDisp = dispinterface;
  IUMLAssociationClass = interface;
  IUMLAssociationClassDisp = dispinterface;
  IUMLClass = interface;
  IUMLClassDisp = dispinterface;
  IUMLLink = interface;
  IUMLLinkDisp = dispinterface;
  IUMLLinkEnd = interface;
  IUMLLinkEndDisp = dispinterface;
  IUMLLinkObject = interface;
  IUMLLinkObjectDisp = dispinterface;
  IUMLObject = interface;
  IUMLObjectDisp = dispinterface;
  IUMLAssociationRole = interface;
  IUMLAssociationRoleDisp = dispinterface;
  IUMLAssociationEndRole = interface;
  IUMLAssociationEndRoleDisp = dispinterface;
  IUMLComponentInstance = interface;
  IUMLComponentInstanceDisp = dispinterface;
  IUMLNodeInstance = interface;
  IUMLNodeInstanceDisp = dispinterface;
  IUMLAction = interface;
  IUMLActionDisp = dispinterface;
  IUMLArgument = interface;
  IUMLArgumentDisp = dispinterface;
  IUMLActionSequence = interface;
  IUMLActionSequenceDisp = dispinterface;
  IUMLStateVertex = interface;
  IUMLStateVertexDisp = dispinterface;
  IUMLState = interface;
  IUMLStateDisp = dispinterface;
  IUMLCompositeState = interface;
  IUMLCompositeStateDisp = dispinterface;
  IUMLTransition = interface;
  IUMLTransitionDisp = dispinterface;
  IUMLEvent = interface;
  IUMLEventDisp = dispinterface;
  IUMLParameter = interface;
  IUMLParameterDisp = dispinterface;
  IUMLSimpleState = interface;
  IUMLSimpleStateDisp = dispinterface;
  IUMLObjectFlowState = interface;
  IUMLObjectFlowStateDisp = dispinterface;
  IUMLStateMachine = interface;
  IUMLStateMachineDisp = dispinterface;
  IUMLSubmachineState = interface;
  IUMLSubmachineStateDisp = dispinterface;
  IUMLClassifierInState = interface;
  IUMLClassifierInStateDisp = dispinterface;
  IUMLInteractionFragment = interface;
  IUMLInteractionFragmentDisp = dispinterface;
  IUMLInteractionOperand = interface;
  IUMLInteractionOperandDisp = dispinterface;
  IUMLCombinedFragment = interface;
  IUMLCombinedFragmentDisp = dispinterface;
  IUMLSignal = interface;
  IUMLSignalDisp = dispinterface;
  IUMLReception = interface;
  IUMLReceptionDisp = dispinterface;
  IUMLSendAction = interface;
  IUMLSendActionDisp = dispinterface;
  IUMLSignalEvent = interface;
  IUMLSignalEventDisp = dispinterface;
  IUMLMethod = interface;
  IUMLMethodDisp = dispinterface;
  IUMLCallAction = interface;
  IUMLCallActionDisp = dispinterface;
  IUMLCallEvent = interface;
  IUMLCallEventDisp = dispinterface;
  IUMLGeneralization = interface;
  IUMLGeneralizationDisp = dispinterface;
  IUMLPort = interface;
  IUMLPortDisp = dispinterface;
  IUMLCreateAction = interface;
  IUMLCreateActionDisp = dispinterface;
  IUMLDependency = interface;
  IUMLDependencyDisp = dispinterface;
  IUMLTemplateParameter = interface;
  IUMLTemplateParameterDisp = dispinterface;
  IUMLComment = interface;
  IUMLCommentDisp = dispinterface;
  IUMLComponent = interface;
  IUMLComponentDisp = dispinterface;
  IUMLNode = interface;
  IUMLNodeDisp = dispinterface;
  IUMLArtifact = interface;
  IUMLArtifactDisp = dispinterface;
  IUMLTemplateArgument = interface;
  IUMLTemplateArgumentDisp = dispinterface;
  IUMLPartition = interface;
  IUMLPartitionDisp = dispinterface;
  IUMLActivityGraph = interface;
  IUMLActivityGraphDisp = dispinterface;
  IUMLModel = interface;
  IUMLModelDisp = dispinterface;
  IUMLSubsystem = interface;
  IUMLSubsystemDisp = dispinterface;
  IUMLInterface = interface;
  IUMLInterfaceDisp = dispinterface;
  IUMLDataType = interface;
  IUMLDataTypeDisp = dispinterface;
  IUMLEnumeration = interface;
  IUMLEnumerationDisp = dispinterface;
  IUMLEnumerationLiteral = interface;
  IUMLEnumerationLiteralDisp = dispinterface;
  IUMLException = interface;
  IUMLExceptionDisp = dispinterface;
  IUMLUseCase = interface;
  IUMLUseCaseDisp = dispinterface;
  IUMLExtend = interface;
  IUMLExtendDisp = dispinterface;
  IUMLExtensionPoint = interface;
  IUMLExtensionPointDisp = dispinterface;
  IUMLInclude = interface;
  IUMLIncludeDisp = dispinterface;
  IUMLActor = interface;
  IUMLActorDisp = dispinterface;
  IUMLActionState = interface;
  IUMLActionStateDisp = dispinterface;
  IUMLSubactivityState = interface;
  IUMLSubactivityStateDisp = dispinterface;
  IUMLPseudostate = interface;
  IUMLPseudostateDisp = dispinterface;
  IUMLFinalState = interface;
  IUMLFinalStateDisp = dispinterface;
  IUMLUninterpretedAction = interface;
  IUMLUninterpretedActionDisp = dispinterface;
  IUMLTimeEvent = interface;
  IUMLTimeEventDisp = dispinterface;
  IUMLChangeEvent = interface;
  IUMLChangeEventDisp = dispinterface;
  IUMLRealization = interface;
  IUMLRealizationDisp = dispinterface;
  IUMLDiagram = interface;
  IUMLDiagramDisp = dispinterface;
  IUMLClassDiagram = interface;
  IUMLClassDiagramDisp = dispinterface;
  IUMLUseCaseDiagram = interface;
  IUMLUseCaseDiagramDisp = dispinterface;
  IUMLSequenceDiagram = interface;
  IUMLSequenceDiagramDisp = dispinterface;
  IUMLSequenceRoleDiagram = interface;
  IUMLSequenceRoleDiagramDisp = dispinterface;
  IUMLCollaborationDiagram = interface;
  IUMLCollaborationDiagramDisp = dispinterface;
  IUMLCollaborationRoleDiagram = interface;
  IUMLCollaborationRoleDiagramDisp = dispinterface;
  IUMLStatechartDiagram = interface;
  IUMLStatechartDiagramDisp = dispinterface;
  IUMLActivityDiagram = interface;
  IUMLActivityDiagramDisp = dispinterface;
  IUMLComponentDiagram = interface;
  IUMLComponentDiagramDisp = dispinterface;
  IUMLDeploymentDiagram = interface;
  IUMLDeploymentDiagramDisp = dispinterface;
  INodeView = interface;
  INodeViewDisp = dispinterface;
  IUMLCustomTextView = interface;
  IUMLCustomTextViewDisp = dispinterface;
  IUMLNoteView = interface;
  IUMLNoteViewDisp = dispinterface;
  IEdgeView = interface;
  IEdgeViewDisp = dispinterface;
  IUMLNoteLinkView = interface;
  IUMLNoteLinkViewDisp = dispinterface;
  IPoints = interface;
  IPointsDisp = dispinterface;
  IUMLTextView = interface;
  IUMLTextViewDisp = dispinterface;
  IUMLGeneralNodeView = interface;
  IUMLGeneralNodeViewDisp = dispinterface;
  IUMLPackageView = interface;
  IUMLPackageViewDisp = dispinterface;
  IUMLModelView = interface;
  IUMLModelViewDisp = dispinterface;
  IUMLNameCompartmentView = interface;
  IUMLNameCompartmentViewDisp = dispinterface;
  ILabelView = interface;
  ILabelViewDisp = dispinterface;
  IUMLSubsystemView = interface;
  IUMLSubsystemViewDisp = dispinterface;
  IUMLListCompartmentView = interface;
  IUMLListCompartmentViewDisp = dispinterface;
  IUMLOperationCompartmentView = interface;
  IUMLOperationCompartmentViewDisp = dispinterface;
  IUMLClassifierView = interface;
  IUMLClassifierViewDisp = dispinterface;
  IUMLClassView = interface;
  IUMLClassViewDisp = dispinterface;
  IUMLAttributeCompartmentView = interface;
  IUMLAttributeCompartmentViewDisp = dispinterface;
  IUMLTemplateParameterCompartmentView = interface;
  IUMLTemplateParameterCompartmentViewDisp = dispinterface;
  IUMLInterfaceView = interface;
  IUMLInterfaceViewDisp = dispinterface;
  IUMLEnumerationView = interface;
  IUMLEnumerationViewDisp = dispinterface;
  IUMLEnumerationLiteralCompartmentView = interface;
  IUMLEnumerationLiteralCompartmentViewDisp = dispinterface;
  IUMLSignalView = interface;
  IUMLSignalViewDisp = dispinterface;
  IUMLExceptionView = interface;
  IUMLExceptionViewDisp = dispinterface;
  IUMLCustomComponentView = interface;
  IUMLCustomComponentViewDisp = dispinterface;
  IUMLComponentView = interface;
  IUMLComponentViewDisp = dispinterface;
  IUMLComponentInstanceView = interface;
  IUMLComponentInstanceViewDisp = dispinterface;
  IUMLCustomNodeView = interface;
  IUMLCustomNodeViewDisp = dispinterface;
  IUMLNodeView = interface;
  IUMLNodeViewDisp = dispinterface;
  IUMLNodeInstanceView = interface;
  IUMLNodeInstanceViewDisp = dispinterface;
  IUMLActorView = interface;
  IUMLActorViewDisp = dispinterface;
  IUMLUseCaseView = interface;
  IUMLUseCaseViewDisp = dispinterface;
  IUMLCollaborationView = interface;
  IUMLCollaborationViewDisp = dispinterface;
  IUMLCollaborationInstanceSetView = interface;
  IUMLCollaborationInstanceSetViewDisp = dispinterface;
  IUMLGeneralEdgeView = interface;
  IUMLGeneralEdgeViewDisp = dispinterface;
  IUMLGeneralizationView = interface;
  IUMLGeneralizationViewDisp = dispinterface;
  IParasiticView = interface;
  IParasiticViewDisp = dispinterface;
  IEdgeParasiticView = interface;
  IEdgeParasiticViewDisp = dispinterface;
  IEdgeLabelView = interface;
  IEdgeLabelViewDisp = dispinterface;
  IUMLAssociationView = interface;
  IUMLAssociationViewDisp = dispinterface;
  IUMLQualifierCompartmentView = interface;
  IUMLQualifierCompartmentViewDisp = dispinterface;
  IUMLAssociationClassView = interface;
  IUMLAssociationClassViewDisp = dispinterface;
  IUMLDependencyView = interface;
  IUMLDependencyViewDisp = dispinterface;
  IUMLRealizationView = interface;
  IUMLRealizationViewDisp = dispinterface;
  IUMLIncludeView = interface;
  IUMLIncludeViewDisp = dispinterface;
  IUMLExtendView = interface;
  IUMLExtendViewDisp = dispinterface;
  IUMLCustomColObjectView = interface;
  IUMLCustomColObjectViewDisp = dispinterface;
  IUMLColObjectView = interface;
  IUMLColObjectViewDisp = dispinterface;
  IUMLDiagramView = interface;
  IUMLDiagramViewDisp = dispinterface;
  IUMLSequenceDiagramView = interface;
  IUMLSequenceDiagramViewDisp = dispinterface;
  IUMLCustomSeqObjectView = interface;
  IUMLCustomSeqObjectViewDisp = dispinterface;
  IUMLSeqObjectView = interface;
  IUMLSeqObjectViewDisp = dispinterface;
  IUMLLifeLineView = interface;
  IUMLLifeLineViewDisp = dispinterface;
  IUMLColClassifierRoleView = interface;
  IUMLColClassifierRoleViewDisp = dispinterface;
  IUMLSequenceRoleDiagramView = interface;
  IUMLSequenceRoleDiagramViewDisp = dispinterface;
  IUMLSeqClassifierRoleView = interface;
  IUMLSeqClassifierRoleViewDisp = dispinterface;
  IUMLLinkView = interface;
  IUMLLinkViewDisp = dispinterface;
  IUMLAssociationRoleView = interface;
  IUMLAssociationRoleViewDisp = dispinterface;
  IUMLCollaborationDiagramView = interface;
  IUMLCollaborationDiagramViewDisp = dispinterface;
  IEdgeNodeView = interface;
  IEdgeNodeViewDisp = dispinterface;
  IUMLCustomColMessageView = interface;
  IUMLCustomColMessageViewDisp = dispinterface;
  IUMLColStimulusView = interface;
  IUMLColStimulusViewDisp = dispinterface;
  INodeParasiticView = interface;
  INodeParasiticViewDisp = dispinterface;
  INodeLabelView = interface;
  INodeLabelViewDisp = dispinterface;
  IUMLCustomSeqMessageView = interface;
  IUMLCustomSeqMessageViewDisp = dispinterface;
  IUMLSeqStimulusView = interface;
  IUMLSeqStimulusViewDisp = dispinterface;
  IUMLActivationView = interface;
  IUMLActivationViewDisp = dispinterface;
  IUMLCollaborationRoleDiagramView = interface;
  IUMLCollaborationRoleDiagramViewDisp = dispinterface;
  IUMLColMessageView = interface;
  IUMLColMessageViewDisp = dispinterface;
  IUMLSeqMessageView = interface;
  IUMLSeqMessageViewDisp = dispinterface;
  IUMLStatechartDiagramView = interface;
  IUMLStatechartDiagramViewDisp = dispinterface;
  IUMLCustomStateView = interface;
  IUMLCustomStateViewDisp = dispinterface;
  IUMLStateView = interface;
  IUMLStateViewDisp = dispinterface;
  IUMLInternalTransitionCompartmentView = interface;
  IUMLInternalTransitionCompartmentViewDisp = dispinterface;
  IUMLSubmachineStateView = interface;
  IUMLSubmachineStateViewDisp = dispinterface;
  IUMLPseudostateView = interface;
  IUMLPseudostateViewDisp = dispinterface;
  IUMLFinalStateView = interface;
  IUMLFinalStateViewDisp = dispinterface;
  IUMLActivityDiagramView = interface;
  IUMLActivityDiagramViewDisp = dispinterface;
  IUMLActionStateView = interface;
  IUMLActionStateViewDisp = dispinterface;
  IUMLSubactivityStateView = interface;
  IUMLSubactivityStateViewDisp = dispinterface;
  IUMLSwimlaneView = interface;
  IUMLSwimlaneViewDisp = dispinterface;
  IUMLTransitionView = interface;
  IUMLTransitionViewDisp = dispinterface;
  IProjectManager = interface;
  IProjectManagerDisp = dispinterface;
  IUMLProject = interface;
  IUMLProjectDisp = dispinterface;
  IUMLDocument = interface;
  IUMLDocumentDisp = dispinterface;
  IUMLUnitDocument = interface;
  IUMLUnitDocumentDisp = dispinterface;
  IUMLProjectDocument = interface;
  IUMLProjectDocumentDisp = dispinterface;
  ISelectionManager = interface;
  ISelectionManagerDisp = dispinterface;
  IElementSelector = interface;
  IElementSelectorDisp = dispinterface;
  IMetaModel = interface;
  IMetaModelDisp = dispinterface;
  IMetaEnumeration = interface;
  IMetaEnumerationDisp = dispinterface;
  IMetaLiteral = interface;
  IMetaLiteralDisp = dispinterface;
  IMetaDataType = interface;
  IMetaDataTypeDisp = dispinterface;
  IMetaPrimitiveType = interface;
  IMetaPrimitiveTypeDisp = dispinterface;
  IExtensionManager = interface;
  IExtensionManagerDisp = dispinterface;
  IElementListSelector = interface;
  IElementListSelectorDisp = dispinterface;
  IEventPublisher = interface;
  IEventPublisherDisp = dispinterface;
  IEventSubscriber = interface;
  IUMLClassDiagramView = interface;
  IUMLClassDiagramViewDisp = dispinterface;
  IUMLDeploymentDiagramView = interface;
  IUMLDeploymentDiagramViewDisp = dispinterface;
  IUMLComponentDiagramView = interface;
  IUMLComponentDiagramViewDisp = dispinterface;
  IUMLUseCaseDiagramView = interface;
  IUMLUseCaseDiagramViewDisp = dispinterface;
  INodeNodeView = interface;
  INodeNodeViewDisp = dispinterface;
  IUMLDataValue = interface;
  IUMLDataValueDisp = dispinterface;
  IUMLSubsystemInstance = interface;
  IUMLSubsystemInstanceDisp = dispinterface;
  IUMLUseCaseInstance = interface;
  IUMLUseCaseInstanceDisp = dispinterface;
  IUMLSynchState = interface;
  IUMLSynchStateDisp = dispinterface;
  IUMLStubState = interface;
  IUMLStubStateDisp = dispinterface;
  IUMLSignalAcceptState = interface;
  IUMLSignalAcceptStateDisp = dispinterface;
  IUMLCallState = interface;
  IUMLCallStateDisp = dispinterface;
  IUMLSignalSendState = interface;
  IUMLSignalSendStateDisp = dispinterface;
  IUMLFlowFinalState = interface;
  IUMLFlowFinalStateDisp = dispinterface;
  IUMLProgrammingLanguageDataType = interface;
  IUMLProgrammingLanguageDataTypeDisp = dispinterface;
  IUMLPrimitive = interface;
  IUMLPrimitiveDisp = dispinterface;
  IUMLTerminateAction = interface;
  IUMLTerminateActionDisp = dispinterface;
  IUMLDestroyAction = interface;
  IUMLDestroyActionDisp = dispinterface;
  IUMLReturnAction = interface;
  IUMLReturnActionDisp = dispinterface;
  IUMLCompositeStructureDiagram = interface;
  IUMLCompositeStructureDiagramDisp = dispinterface;
  IStarUMLAddIn = interface;
  IExprBuilder = interface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  WhiteStarUMLApplication = IStarUMLApplication;
  TExprBuilder = IExprBuilder;


// *********************************************************************//
// Declaration of structures, unions and aliases.                         
// *********************************************************************//

  MetaAssociationEndKind = tagMetaAssociationEndKind; 
  MetaAggregateKind = tagMetaAggregateKind; 
  TagTypeKind = tagTagTypeKind; 
  UMLVisibilityKind = tagUMLVisibilityKind; 
  UMLScopeKind = tagUMLScopeKind; 
  UMLChangeableKind = tagUMLChangeableKind; 
  UMLOrderingKind = tagUMLOrderingKind; 
  UMLAggregationKind = tagUMLAggregationKind; 
  UMLParameterDirectionKind = tagUMLParameterDirectionKind; 
  UMLInteractionOperatorKind = tagUMLInteractionOperatorKind; 
  UMLCallConcurrencyKind = tagUMLCallConcurrencyKind; 
  UMLPseudostateKind = tagUMLPseudostateKind; 
  UMLFactoryMessageKind = tagUMLFactoryMessageKind; 
  UMLMessageSignatureKind = tagUMLMessageSignatureKind; 
  LineStyleKind = tagLineStyleKind; 
  UMLStereotypeDisplayKind = tagUMLStereotypeDisplayKind; 
  EdgePositionKind = tagEdgePositionKind; 
  ElementFilteringKind = tagElementFilteringKind; 
  EventKind = tagEventKind; 
  InformationMessageKind = tagInformationMessageKind; 

// *********************************************************************//
// Interface: IStarUMLApplication
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {366A8FBC-259E-4228-AC6D-293D15041864}
// *********************************************************************//
  IStarUMLApplication = interface(IDispatch)
    ['{366A8FBC-259E-4228-AC6D-293D15041864}']
    function Get_Visible: WordBool; safecall;
    procedure Set_Visible(Value: WordBool); safecall;
    function Get_Handle: Integer; safecall;
    function Get_UMLFactory: IUMLFactory; safecall;
    function Get_ProjectManager: IProjectManager; safecall;
    function Get_SelectionManager: ISelectionManager; safecall;
    function Get_ElementSelector: IElementSelector; safecall;
    function Get_MetaModel: IMetaModel; safecall;
    function Get_ExtensionManager: IExtensionManager; safecall;
    function Get_ElementListSelector: IElementListSelector; safecall;
    function Get_EventPublisher: IEventPublisher; safecall;
    function GetProject: IUMLProject; safecall;
    function FindByPathname(const Pathname: WideString): IElement; safecall;
    procedure ClearHistory; safecall;
    procedure Undo; safecall;
    procedure Redo; safecall;
    function CanUndo: WordBool; safecall;
    function CanRedo: WordBool; safecall;
    procedure Copy; safecall;
    procedure Cut; safecall;
    procedure Paste; safecall;
    procedure DeleteModel(const AModel: IModel); safecall;
    procedure DeleteView(const AView: IView); safecall;
    procedure DeleteSelectedModels; safecall;
    procedure DeleteSelectedViews; safecall;
    procedure DeleteSelectedModelsAndViews; safecall;
    function GetOptionValue(const SchemaID: WideString; const Key: WideString): OleVariant; safecall;
    procedure Log(const Text: WideString); safecall;
    procedure BeginUpdate; safecall;
    procedure EndUpdate; safecall;
    procedure EndUpdate2(CompletelyRebuild: WordBool; UseUpdateLock: WordBool); safecall;
    procedure BeginGroupAction; safecall;
    procedure EndGroupAction; safecall;
    procedure EnableGeneralEditMenu; safecall;
    procedure DisableGeneralEditMenu; safecall;
    procedure OpenDiagram(const ADiagram: IDiagram); safecall;
    procedure CloseDiagram(const ADiagram: IDiagram); safecall;
    procedure CloseActiveDiagram; safecall;
    procedure CloseAllDiagrams; safecall;
    function GetOpenedDiagramAt(Index: Integer): IDiagram; safecall;
    function GetOpenedDiagramCount: Integer; safecall;
    procedure SelectInModelExplorer(const AModel: IModel); safecall;
    procedure ClearAllMessages; safecall;
    procedure ClearMessages(Kind: InformationMessageKind); safecall;
    procedure AddMessageItem(Kind: InformationMessageKind; const Text: WideString; 
                             const ElementLink: IElement); safecall;
    procedure NavigateWeb(const URL: WideString); safecall;
    procedure Exit; safecall;
    property Visible: WordBool read Get_Visible write Set_Visible;
    property Handle: Integer read Get_Handle;
    property UMLFactory: IUMLFactory read Get_UMLFactory;
    property ProjectManager: IProjectManager read Get_ProjectManager;
    property SelectionManager: ISelectionManager read Get_SelectionManager;
    property ElementSelector: IElementSelector read Get_ElementSelector;
    property MetaModel: IMetaModel read Get_MetaModel;
    property ExtensionManager: IExtensionManager read Get_ExtensionManager;
    property ElementListSelector: IElementListSelector read Get_ElementListSelector;
    property EventPublisher: IEventPublisher read Get_EventPublisher;
  end;

// *********************************************************************//
// DispIntf:  IStarUMLApplicationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {366A8FBC-259E-4228-AC6D-293D15041864}
// *********************************************************************//
  IStarUMLApplicationDisp = dispinterface
    ['{366A8FBC-259E-4228-AC6D-293D15041864}']
    property Visible: WordBool dispid 512;
    property Handle: Integer readonly dispid 513;
    property UMLFactory: IUMLFactory readonly dispid 514;
    property ProjectManager: IProjectManager readonly dispid 515;
    property SelectionManager: ISelectionManager readonly dispid 516;
    property ElementSelector: IElementSelector readonly dispid 517;
    property MetaModel: IMetaModel readonly dispid 518;
    property ExtensionManager: IExtensionManager readonly dispid 519;
    property ElementListSelector: IElementListSelector readonly dispid 520;
    property EventPublisher: IEventPublisher readonly dispid 521;
    function GetProject: IUMLProject; dispid 522;
    function FindByPathname(const Pathname: WideString): IElement; dispid 523;
    procedure ClearHistory; dispid 524;
    procedure Undo; dispid 525;
    procedure Redo; dispid 526;
    function CanUndo: WordBool; dispid 527;
    function CanRedo: WordBool; dispid 528;
    procedure Copy; dispid 529;
    procedure Cut; dispid 530;
    procedure Paste; dispid 531;
    procedure DeleteModel(const AModel: IModel); dispid 532;
    procedure DeleteView(const AView: IView); dispid 533;
    procedure DeleteSelectedModels; dispid 534;
    procedure DeleteSelectedViews; dispid 535;
    procedure DeleteSelectedModelsAndViews; dispid 536;
    function GetOptionValue(const SchemaID: WideString; const Key: WideString): OleVariant; dispid 537;
    procedure Log(const Text: WideString); dispid 538;
    procedure BeginUpdate; dispid 539;
    procedure EndUpdate; dispid 540;
    procedure EndUpdate2(CompletelyRebuild: WordBool; UseUpdateLock: WordBool); dispid 541;
    procedure BeginGroupAction; dispid 542;
    procedure EndGroupAction; dispid 543;
    procedure EnableGeneralEditMenu; dispid 544;
    procedure DisableGeneralEditMenu; dispid 545;
    procedure OpenDiagram(const ADiagram: IDiagram); dispid 546;
    procedure CloseDiagram(const ADiagram: IDiagram); dispid 547;
    procedure CloseActiveDiagram; dispid 548;
    procedure CloseAllDiagrams; dispid 549;
    function GetOpenedDiagramAt(Index: Integer): IDiagram; dispid 550;
    function GetOpenedDiagramCount: Integer; dispid 551;
    procedure SelectInModelExplorer(const AModel: IModel); dispid 552;
    procedure ClearAllMessages; dispid 553;
    procedure ClearMessages(Kind: InformationMessageKind); dispid 554;
    procedure AddMessageItem(Kind: InformationMessageKind; const Text: WideString; 
                             const ElementLink: IElement); dispid 555;
    procedure NavigateWeb(const URL: WideString); dispid 556;
    procedure Exit; dispid 557;
  end;

// *********************************************************************//
// Interface: IUMLFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93B49661-E40C-4B36-A385-E937DF875AB4}
// *********************************************************************//
  IUMLFactory = interface(IDispatch)
    ['{93B49661-E40C-4B36-A385-E937DF875AB4}']
    function CreateModel(const AOwner: IUMLNamespace): IUMLModel; safecall;
    function CreateSubsystem(const AOwner: IUMLNamespace): IUMLSubsystem; safecall;
    function CreatePackage(const AOwner: IUMLNamespace): IUMLPackage; safecall;
    function CreateClass(const AOwner: IUMLNamespace): IUMLClass; safecall;
    function CreateInterface(const AOwner: IUMLNamespace): IUMLInterface; safecall;
    function CreateEnumeration(const AOwner: IUMLNamespace): IUMLEnumeration; safecall;
    function CreateSignal(const AOwner: IUMLNamespace): IUMLSignal; safecall;
    function CreateException(const AOwner: IUMLNamespace): IUMLException; safecall;
    function CreateComponent(const AOwner: IUMLNamespace): IUMLComponent; safecall;
    function CreateComponentInstance(const AOwner: IUMLNamespace): IUMLComponentInstance; safecall;
    function CreateNode(const AOwner: IUMLNamespace): IUMLNode; safecall;
    function CreateNodeInstance(const AOwner: IUMLNamespace): IUMLNodeInstance; safecall;
    function CreateUseCase(const AOwner: IUMLNamespace): IUMLUseCase; safecall;
    function CreateActor(const AOwner: IUMLNamespace): IUMLActor; safecall;
    function CreateActivityGraph(const AContext: IUMLModelElement): IUMLActivityGraph; safecall;
    function CreateStateMachine(const AContext: IUMLModelElement): IUMLStateMachine; safecall;
    function CreateCompositeState(const AOwnerState: IUMLCompositeState): IUMLCompositeState; safecall;
    function CreateCollaboration(const AOwner: IUMLClassifier): IUMLCollaboration; safecall;
    function CreateCollaboration2(const AOwner: IUMLOperation): IUMLCollaboration; safecall;
    function CreateCollaborationInstanceSet(const AOwner: IUMLClassifier): IUMLCollaborationInstanceSet; safecall;
    function CreateCollaborationInstanceSet2(const AOwner: IUMLOperation): IUMLCollaborationInstanceSet; safecall;
    function CreateInteraction(const ACollaboration: IUMLCollaboration): IUMLInteraction; safecall;
    function CreateInteractionInstanceSet(const ACollaborationInstanceSet: IUMLCollaborationInstanceSet): IUMLInteractionInstanceSet; safecall;
    function CreateActionState(const AOwnerState: IUMLCompositeState): IUMLActionState; safecall;
    function CreateSubactivityState(const AOwnerState: IUMLCompositeState): IUMLSubactivityState; safecall;
    function CreatePseudostate(const AOwnerState: IUMLCompositeState): IUMLPseudostate; safecall;
    function CreateFinalState(const AOwnerState: IUMLCompositeState): IUMLFinalState; safecall;
    function CreatePartition(const AActivityGraph: IUMLActivityGraph): IUMLPartition; safecall;
    function CreateSubmachineState(const AOwnerState: IUMLCompositeState): IUMLSubmachineState; safecall;
    function CreateAttribute(const AClassifier: IUMLClassifier): IUMLAttribute; safecall;
    function CreateQualifier(const AAssociationEnd: IUMLAssociationEnd): IUMLAttribute; safecall;
    function CreateOperation(const AClassifier: IUMLClassifier): IUMLOperation; safecall;
    function CreateParameter(const ABehavioralFeature: IUMLBehavioralFeature): IUMLParameter; safecall;
    function CreateTemplateParameter(const AClass: IUMLClass): IUMLTemplateParameter; safecall;
    function CreateTemplateParameter2(const ACollaboration: IUMLCollaboration): IUMLTemplateParameter; safecall;
    function CreateEnumerationLiteral(const AEnumeration: IUMLEnumeration): IUMLEnumerationLiteral; safecall;
    function CreateEntryAction(const AState: IUMLState): IUMLUninterpretedAction; safecall;
    function CreateDoAction(const AState: IUMLState): IUMLUninterpretedAction; safecall;
    function CreateExitAction(const AState: IUMLState): IUMLUninterpretedAction; safecall;
    function CreateEffect(const ATransition: IUMLTransition): IUMLUninterpretedAction; safecall;
    function CreateSignalEvent(const ATransition: IUMLTransition): IUMLSignalEvent; safecall;
    function CreateCallEvent(const ATransition: IUMLTransition): IUMLCallEvent; safecall;
    function CreateTimeEvent(const ATransition: IUMLTransition): IUMLTimeEvent; safecall;
    function CreateChangeEvent(const ATransition: IUMLTransition): IUMLChangeEvent; safecall;
    function CreateClassifierRole(const ACollaboration: IUMLCollaboration): IUMLClassifierRole; safecall;
    function CreateObject(const ACollaborationInstanceSet: IUMLCollaborationInstanceSet): IUMLObject; safecall;
    function CreateObject2(const AOwner: IUMLNamespace): IUMLObject; safecall;
    function CreateTransition(const AStateMachine: IUMLStateMachine; const Source: IUMLStateVertex; 
                              const Target: IUMLStateVertex): IUMLTransition; safecall;
    function CreateDependency(const AOwner: IUMLNamespace; const Client: IUMLModelElement; 
                              const Supplier: IUMLModelElement): IUMLDependency; safecall;
    function CreateAssociation(const AOwner: IUMLNamespace; const End1: IUMLClassifier; 
                               const End2: IUMLClassifier): IUMLAssociation; safecall;
    function CreateAssociationClass(const AOwner: IUMLNamespace; 
                                    const AAssociation: IUMLAssociation; const AClass: IUMLClass): IUMLAssociationClass; safecall;
    function CreateGeneralization(const AOwner: IUMLNamespace; 
                                  const Parent: IUMLGeneralizableElement; 
                                  const Child: IUMLGeneralizableElement): IUMLGeneralization; safecall;
    function CreateLink(const ACollaborationInstanceSet: IUMLCollaborationInstanceSet; 
                        const End1: IUMLInstance; const End2: IUMLInstance): IUMLLink; safecall;
    function CreateLink2(const ANamespace: IUMLNamespace; const End1: IUMLInstance; 
                         const End2: IUMLInstance): IUMLLink; safecall;
    function CreateAssociationRole(const ACollaboration: IUMLCollaboration; 
                                   const End1: IUMLClassifierRole; const End2: IUMLClassifierRole): IUMLAssociationRole; safecall;
    function CreateStimulus(const AInteractionInstanceSet: IUMLInteractionInstanceSet; 
                            const Sender: IUMLInstance; const Receiver: IUMLInstance; 
                            Kind: UMLFactoryMessageKind): IUMLStimulus; safecall;
    function CreateStimulus2(const AInteractionInstanceSet: IUMLInteractionInstanceSet; 
                             const Sender: IUMLInstance; const Receiver: IUMLInstance; 
                             const CommunicationLink: IUMLLink; Kind: UMLFactoryMessageKind): IUMLStimulus; safecall;
    function CreateMessage(const AInteraction: IUMLInteraction; const Sender: IUMLClassifierRole; 
                           const Receiver: IUMLClassifierRole; Kind: UMLFactoryMessageKind): IUMLMessage; safecall;
    function CreateMessage2(const AInteraction: IUMLInteraction; const Sender: IUMLClassifierRole; 
                            const Receiver: IUMLClassifierRole; 
                            const CommunicationConnection: IUMLAssociationRole; 
                            Kind: UMLFactoryMessageKind): IUMLMessage; safecall;
    function CreateInclude(const AOwner: IUMLNamespace; const Includer: IUMLUseCase; 
                           const Includee: IUMLUseCase): IUMLInclude; safecall;
    function CreateExtend(const AOwner: IUMLNamespace; const Extender: IUMLUseCase; 
                          const Extendee: IUMLUseCase): IUMLExtend; safecall;
    function CreateRealization(const AOwner: IUMLNamespace; const Client: IUMLModelElement; 
                               const Supplier: IUMLModelElement): IUMLRealization; safecall;
    function CreateClassDiagram(const AOwner: IModel): IUMLClassDiagram; safecall;
    function CreateUseCaseDiagram(const AOwner: IModel): IUMLUseCaseDiagram; safecall;
    function CreateSequenceDiagram(const AOwner: IUMLInteractionInstanceSet): IUMLSequenceDiagram; safecall;
    function CreateSequenceRoleDiagram(const AOwner: IUMLInteraction): IUMLSequenceRoleDiagram; safecall;
    function CreateCollaborationDiagram(const AOwner: IUMLInteractionInstanceSet): IUMLCollaborationDiagram; safecall;
    function CreateCollaborationRoleDiagram(const AOwner: IUMLInteraction): IUMLCollaborationRoleDiagram; safecall;
    function CreateStatechartDiagram(const AOwner: IUMLStateMachine): IUMLStatechartDiagram; safecall;
    function CreateActivityDiagram(const AOwner: IUMLActivityGraph): IUMLActivityDiagram; safecall;
    function CreateComponentDiagram(const AOwner: IModel): IUMLComponentDiagram; safecall;
    function CreateDeploymentDiagram(const AOwner: IModel): IUMLDeploymentDiagram; safecall;
    function CreateNoteView(const ADiagramView: IDiagramView): IUMLNoteView; safecall;
    function CreateNoteLinkView(const ADiagramView: IDiagramView; const ANote: IUMLNoteView; 
                                const LinkTo: IView): IUMLNoteLinkView; safecall;
    function CreateTextView(const ADiagramView: IDiagramView): IUMLTextView; safecall;
    function CreateModelView(const ADiagramView: IDiagramView; const AModel: IUMLModel): IUMLModelView; safecall;
    function CreateSubsystemView(const ADiagramView: IDiagramView; const AModel: IUMLSubsystem): IUMLSubsystemView; safecall;
    function CreatePackageView(const ADiagramView: IDiagramView; const AModel: IUMLPackage): IUMLPackageView; safecall;
    function CreateClassView(const ADiagramView: IDiagramView; const AModel: IUMLClass): IUMLClassView; safecall;
    function CreateInterfaceView(const ADiagramView: IDiagramView; const AModel: IUMLInterface): IUMLInterfaceView; safecall;
    function CreateEnumerationView(const ADiagramView: IDiagramView; const AModel: IUMLEnumeration): IUMLEnumerationView; safecall;
    function CreateSignalView(const ADiagramView: IDiagramView; const AModel: IUMLSignal): IUMLSignalView; safecall;
    function CreateExceptionView(const ADiagramView: IDiagramView; const AModel: IUMLException): IUMLExceptionView; safecall;
    function CreateComponentView(const ADiagramView: IDiagramView; const AModel: IUMLComponent): IUMLComponentView; safecall;
    function CreateComponentInstanceView(const ADiagramView: IDiagramView; 
                                         const AModel: IUMLComponentInstance): IUMLComponentInstanceView; safecall;
    function CreateNodeView(const ADiagramView: IDiagramView; const AModel: IUMLNode): IUMLNodeView; safecall;
    function CreateNodeInstanceView(const ADiagramView: IDiagramView; const AModel: IUMLNodeInstance): IUMLNodeInstanceView; safecall;
    function CreateActorView(const ADiagramView: IDiagramView; const AModel: IUMLActor): IUMLActorView; safecall;
    function CreateUseCaseView(const ADiagramView: IDiagramView; const AModel: IUMLUseCase): IUMLUseCaseView; safecall;
    function CreateCollaborationView(const ADiagramView: IDiagramView; 
                                     const AModel: IUMLCollaboration): IUMLCollaborationView; safecall;
    function CreateCollaborationInstanceSetView(const ADiagramView: IDiagramView; 
                                                const AModel: IUMLCollaborationInstanceSet): IUMLCollaborationInstanceSetView; safecall;
    function CreateGeneralizationView(const ADiagramView: IDiagramView; 
                                      const AModel: IUMLGeneralization; const Parent: IView; 
                                      const Child: IView): IUMLGeneralizationView; safecall;
    function CreateAssociationView(const ADiagramView: IDiagramView; const AModel: IUMLAssociation; 
                                   const End1: IView; const End2: IView): IUMLAssociationView; safecall;
    function CreateAssociationClassView(const ADiagramView: IDiagramView; 
                                        const AModel: IUMLAssociationClass; 
                                        const AssociationView: IView; const ClassView: IView): IUMLAssociationClassView; safecall;
    function CreateDependencyView(const ADiagramView: IDiagramView; const AModel: IUMLDependency; 
                                  const Client: IView; const Supplier: IView): IUMLDependencyView; safecall;
    function CreateRealizationView(const ADiagramView: IDiagramView; const AModel: IUMLRealization; 
                                   const Client: IView; const Supplier: IView): IUMLRealizationView; safecall;
    function CreateIncludeView(const ADiagramView: IDiagramView; const AModel: IUMLInclude; 
                               const Base: IView; const Addition: IView): IUMLIncludeView; safecall;
    function CreateExtendView(const ADiagramView: IDiagramView; const AModel: IUMLExtend; 
                              const Base: IView; const Extension: IView): IUMLExtendView; safecall;
    function CreateObjectView(const ADiagramView: IDiagramView; const AModel: IUMLObject): IUMLColObjectView; safecall;
    function CreateSeqObjectView(const ADiagramView: IUMLSequenceDiagramView; 
                                 const AModel: IUMLObject): IUMLSeqObjectView; safecall;
    function CreateClassifierRoleView(const ADiagramView: IDiagramView; 
                                      const AModel: IUMLClassifierRole): IUMLColClassifierRoleView; safecall;
    function CreateSeqClassifierRoleView(const ADiagramView: IUMLSequenceRoleDiagramView; 
                                         const AModel: IUMLClassifierRole): IUMLSeqClassifierRoleView; safecall;
    function CreateLinkView(const ADiagramView: IDiagramView; const AModel: IUMLLink; 
                            const End1: IView; const End2: IView): IUMLLinkView; safecall;
    function CreateAssociationRoleView(const ADiagramView: IDiagramView; 
                                       const AModel: IUMLAssociationRole; const End1: IView; 
                                       const End2: IView): IUMLAssociationRoleView; safecall;
    function CreateStimulusView(const ADiagramView: IUMLCollaborationDiagramView; 
                                const AModel: IUMLStimulus; const LinkView: IView): IUMLColStimulusView; safecall;
    function CreateSeqStimulusView(const ADiagramView: IUMLSequenceDiagramView; 
                                   const AModel: IUMLStimulus; const Sender: IView; 
                                   const Receiver: IView): IUMLSeqStimulusView; safecall;
    function CreateMessageView(const ADiagramView: IUMLCollaborationRoleDiagramView; 
                               const AModel: IUMLMessage; const AssociationRoleView: IView): IUMLColMessageView; safecall;
    function CreateSeqMessageView(const ADiagramView: IUMLSequenceRoleDiagramView; 
                                  const AModel: IUMLMessage; const Sender: IView; 
                                  const Receiver: IView): IUMLSeqMessageView; safecall;
    function CreateStateView(const ADiagramView: IUMLStatechartDiagramView; 
                             const AModel: IUMLCompositeState): IUMLStateView; safecall;
    function CreateSubmachineStateView(const ADiagramView: IUMLStatechartDiagramView; 
                                       const AModel: IUMLSubmachineState): IUMLSubmachineStateView; safecall;
    function CreatePseudostateView(const ADiagramView: IDiagramView; const AModel: IUMLPseudostate): IUMLPseudostateView; safecall;
    function CreateFinalStateView(const ADiagramView: IDiagramView; const AModel: IUMLFinalState): IUMLFinalStateView; safecall;
    function CreateActionStateView(const ADiagramView: IUMLActivityDiagramView; 
                                   const AModel: IUMLActionState): IUMLActionStateView; safecall;
    function CreateSubactivityStateView(const ADiagramView: IUMLActivityDiagramView; 
                                        const AModel: IUMLSubactivityState): IUMLSubactivityStateView; safecall;
    function CreateSwimlaneView(const ADiagramView: IUMLActivityDiagramView; 
                                const AModel: IUMLPartition): IUMLSwimlaneView; safecall;
    function CreateTransitionView(const ADiagramView: IDiagramView; const AModel: IUMLTransition; 
                                  const Source: IView; const Target: IView): IUMLTransitionView; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93B49661-E40C-4B36-A385-E937DF875AB4}
// *********************************************************************//
  IUMLFactoryDisp = dispinterface
    ['{93B49661-E40C-4B36-A385-E937DF875AB4}']
    function CreateModel(const AOwner: IUMLNamespace): IUMLModel; dispid 512;
    function CreateSubsystem(const AOwner: IUMLNamespace): IUMLSubsystem; dispid 513;
    function CreatePackage(const AOwner: IUMLNamespace): IUMLPackage; dispid 514;
    function CreateClass(const AOwner: IUMLNamespace): IUMLClass; dispid 515;
    function CreateInterface(const AOwner: IUMLNamespace): IUMLInterface; dispid 516;
    function CreateEnumeration(const AOwner: IUMLNamespace): IUMLEnumeration; dispid 517;
    function CreateSignal(const AOwner: IUMLNamespace): IUMLSignal; dispid 518;
    function CreateException(const AOwner: IUMLNamespace): IUMLException; dispid 519;
    function CreateComponent(const AOwner: IUMLNamespace): IUMLComponent; dispid 520;
    function CreateComponentInstance(const AOwner: IUMLNamespace): IUMLComponentInstance; dispid 521;
    function CreateNode(const AOwner: IUMLNamespace): IUMLNode; dispid 522;
    function CreateNodeInstance(const AOwner: IUMLNamespace): IUMLNodeInstance; dispid 523;
    function CreateUseCase(const AOwner: IUMLNamespace): IUMLUseCase; dispid 524;
    function CreateActor(const AOwner: IUMLNamespace): IUMLActor; dispid 525;
    function CreateActivityGraph(const AContext: IUMLModelElement): IUMLActivityGraph; dispid 526;
    function CreateStateMachine(const AContext: IUMLModelElement): IUMLStateMachine; dispid 527;
    function CreateCompositeState(const AOwnerState: IUMLCompositeState): IUMLCompositeState; dispid 528;
    function CreateCollaboration(const AOwner: IUMLClassifier): IUMLCollaboration; dispid 529;
    function CreateCollaboration2(const AOwner: IUMLOperation): IUMLCollaboration; dispid 530;
    function CreateCollaborationInstanceSet(const AOwner: IUMLClassifier): IUMLCollaborationInstanceSet; dispid 531;
    function CreateCollaborationInstanceSet2(const AOwner: IUMLOperation): IUMLCollaborationInstanceSet; dispid 532;
    function CreateInteraction(const ACollaboration: IUMLCollaboration): IUMLInteraction; dispid 533;
    function CreateInteractionInstanceSet(const ACollaborationInstanceSet: IUMLCollaborationInstanceSet): IUMLInteractionInstanceSet; dispid 534;
    function CreateActionState(const AOwnerState: IUMLCompositeState): IUMLActionState; dispid 535;
    function CreateSubactivityState(const AOwnerState: IUMLCompositeState): IUMLSubactivityState; dispid 536;
    function CreatePseudostate(const AOwnerState: IUMLCompositeState): IUMLPseudostate; dispid 537;
    function CreateFinalState(const AOwnerState: IUMLCompositeState): IUMLFinalState; dispid 538;
    function CreatePartition(const AActivityGraph: IUMLActivityGraph): IUMLPartition; dispid 539;
    function CreateSubmachineState(const AOwnerState: IUMLCompositeState): IUMLSubmachineState; dispid 540;
    function CreateAttribute(const AClassifier: IUMLClassifier): IUMLAttribute; dispid 541;
    function CreateQualifier(const AAssociationEnd: IUMLAssociationEnd): IUMLAttribute; dispid 542;
    function CreateOperation(const AClassifier: IUMLClassifier): IUMLOperation; dispid 543;
    function CreateParameter(const ABehavioralFeature: IUMLBehavioralFeature): IUMLParameter; dispid 544;
    function CreateTemplateParameter(const AClass: IUMLClass): IUMLTemplateParameter; dispid 545;
    function CreateTemplateParameter2(const ACollaboration: IUMLCollaboration): IUMLTemplateParameter; dispid 546;
    function CreateEnumerationLiteral(const AEnumeration: IUMLEnumeration): IUMLEnumerationLiteral; dispid 547;
    function CreateEntryAction(const AState: IUMLState): IUMLUninterpretedAction; dispid 548;
    function CreateDoAction(const AState: IUMLState): IUMLUninterpretedAction; dispid 549;
    function CreateExitAction(const AState: IUMLState): IUMLUninterpretedAction; dispid 550;
    function CreateEffect(const ATransition: IUMLTransition): IUMLUninterpretedAction; dispid 551;
    function CreateSignalEvent(const ATransition: IUMLTransition): IUMLSignalEvent; dispid 552;
    function CreateCallEvent(const ATransition: IUMLTransition): IUMLCallEvent; dispid 553;
    function CreateTimeEvent(const ATransition: IUMLTransition): IUMLTimeEvent; dispid 554;
    function CreateChangeEvent(const ATransition: IUMLTransition): IUMLChangeEvent; dispid 555;
    function CreateClassifierRole(const ACollaboration: IUMLCollaboration): IUMLClassifierRole; dispid 556;
    function CreateObject(const ACollaborationInstanceSet: IUMLCollaborationInstanceSet): IUMLObject; dispid 557;
    function CreateObject2(const AOwner: IUMLNamespace): IUMLObject; dispid 558;
    function CreateTransition(const AStateMachine: IUMLStateMachine; const Source: IUMLStateVertex; 
                              const Target: IUMLStateVertex): IUMLTransition; dispid 559;
    function CreateDependency(const AOwner: IUMLNamespace; const Client: IUMLModelElement; 
                              const Supplier: IUMLModelElement): IUMLDependency; dispid 560;
    function CreateAssociation(const AOwner: IUMLNamespace; const End1: IUMLClassifier; 
                               const End2: IUMLClassifier): IUMLAssociation; dispid 561;
    function CreateAssociationClass(const AOwner: IUMLNamespace; 
                                    const AAssociation: IUMLAssociation; const AClass: IUMLClass): IUMLAssociationClass; dispid 562;
    function CreateGeneralization(const AOwner: IUMLNamespace; 
                                  const Parent: IUMLGeneralizableElement; 
                                  const Child: IUMLGeneralizableElement): IUMLGeneralization; dispid 563;
    function CreateLink(const ACollaborationInstanceSet: IUMLCollaborationInstanceSet; 
                        const End1: IUMLInstance; const End2: IUMLInstance): IUMLLink; dispid 564;
    function CreateLink2(const ANamespace: IUMLNamespace; const End1: IUMLInstance; 
                         const End2: IUMLInstance): IUMLLink; dispid 565;
    function CreateAssociationRole(const ACollaboration: IUMLCollaboration; 
                                   const End1: IUMLClassifierRole; const End2: IUMLClassifierRole): IUMLAssociationRole; dispid 566;
    function CreateStimulus(const AInteractionInstanceSet: IUMLInteractionInstanceSet; 
                            const Sender: IUMLInstance; const Receiver: IUMLInstance; 
                            Kind: UMLFactoryMessageKind): IUMLStimulus; dispid 567;
    function CreateStimulus2(const AInteractionInstanceSet: IUMLInteractionInstanceSet; 
                             const Sender: IUMLInstance; const Receiver: IUMLInstance; 
                             const CommunicationLink: IUMLLink; Kind: UMLFactoryMessageKind): IUMLStimulus; dispid 568;
    function CreateMessage(const AInteraction: IUMLInteraction; const Sender: IUMLClassifierRole; 
                           const Receiver: IUMLClassifierRole; Kind: UMLFactoryMessageKind): IUMLMessage; dispid 569;
    function CreateMessage2(const AInteraction: IUMLInteraction; const Sender: IUMLClassifierRole; 
                            const Receiver: IUMLClassifierRole; 
                            const CommunicationConnection: IUMLAssociationRole; 
                            Kind: UMLFactoryMessageKind): IUMLMessage; dispid 570;
    function CreateInclude(const AOwner: IUMLNamespace; const Includer: IUMLUseCase; 
                           const Includee: IUMLUseCase): IUMLInclude; dispid 571;
    function CreateExtend(const AOwner: IUMLNamespace; const Extender: IUMLUseCase; 
                          const Extendee: IUMLUseCase): IUMLExtend; dispid 572;
    function CreateRealization(const AOwner: IUMLNamespace; const Client: IUMLModelElement; 
                               const Supplier: IUMLModelElement): IUMLRealization; dispid 573;
    function CreateClassDiagram(const AOwner: IModel): IUMLClassDiagram; dispid 574;
    function CreateUseCaseDiagram(const AOwner: IModel): IUMLUseCaseDiagram; dispid 575;
    function CreateSequenceDiagram(const AOwner: IUMLInteractionInstanceSet): IUMLSequenceDiagram; dispid 576;
    function CreateSequenceRoleDiagram(const AOwner: IUMLInteraction): IUMLSequenceRoleDiagram; dispid 577;
    function CreateCollaborationDiagram(const AOwner: IUMLInteractionInstanceSet): IUMLCollaborationDiagram; dispid 578;
    function CreateCollaborationRoleDiagram(const AOwner: IUMLInteraction): IUMLCollaborationRoleDiagram; dispid 579;
    function CreateStatechartDiagram(const AOwner: IUMLStateMachine): IUMLStatechartDiagram; dispid 580;
    function CreateActivityDiagram(const AOwner: IUMLActivityGraph): IUMLActivityDiagram; dispid 581;
    function CreateComponentDiagram(const AOwner: IModel): IUMLComponentDiagram; dispid 582;
    function CreateDeploymentDiagram(const AOwner: IModel): IUMLDeploymentDiagram; dispid 583;
    function CreateNoteView(const ADiagramView: IDiagramView): IUMLNoteView; dispid 584;
    function CreateNoteLinkView(const ADiagramView: IDiagramView; const ANote: IUMLNoteView; 
                                const LinkTo: IView): IUMLNoteLinkView; dispid 585;
    function CreateTextView(const ADiagramView: IDiagramView): IUMLTextView; dispid 586;
    function CreateModelView(const ADiagramView: IDiagramView; const AModel: IUMLModel): IUMLModelView; dispid 587;
    function CreateSubsystemView(const ADiagramView: IDiagramView; const AModel: IUMLSubsystem): IUMLSubsystemView; dispid 588;
    function CreatePackageView(const ADiagramView: IDiagramView; const AModel: IUMLPackage): IUMLPackageView; dispid 589;
    function CreateClassView(const ADiagramView: IDiagramView; const AModel: IUMLClass): IUMLClassView; dispid 590;
    function CreateInterfaceView(const ADiagramView: IDiagramView; const AModel: IUMLInterface): IUMLInterfaceView; dispid 591;
    function CreateEnumerationView(const ADiagramView: IDiagramView; const AModel: IUMLEnumeration): IUMLEnumerationView; dispid 592;
    function CreateSignalView(const ADiagramView: IDiagramView; const AModel: IUMLSignal): IUMLSignalView; dispid 593;
    function CreateExceptionView(const ADiagramView: IDiagramView; const AModel: IUMLException): IUMLExceptionView; dispid 594;
    function CreateComponentView(const ADiagramView: IDiagramView; const AModel: IUMLComponent): IUMLComponentView; dispid 595;
    function CreateComponentInstanceView(const ADiagramView: IDiagramView; 
                                         const AModel: IUMLComponentInstance): IUMLComponentInstanceView; dispid 596;
    function CreateNodeView(const ADiagramView: IDiagramView; const AModel: IUMLNode): IUMLNodeView; dispid 597;
    function CreateNodeInstanceView(const ADiagramView: IDiagramView; const AModel: IUMLNodeInstance): IUMLNodeInstanceView; dispid 598;
    function CreateActorView(const ADiagramView: IDiagramView; const AModel: IUMLActor): IUMLActorView; dispid 599;
    function CreateUseCaseView(const ADiagramView: IDiagramView; const AModel: IUMLUseCase): IUMLUseCaseView; dispid 600;
    function CreateCollaborationView(const ADiagramView: IDiagramView; 
                                     const AModel: IUMLCollaboration): IUMLCollaborationView; dispid 601;
    function CreateCollaborationInstanceSetView(const ADiagramView: IDiagramView; 
                                                const AModel: IUMLCollaborationInstanceSet): IUMLCollaborationInstanceSetView; dispid 602;
    function CreateGeneralizationView(const ADiagramView: IDiagramView; 
                                      const AModel: IUMLGeneralization; const Parent: IView; 
                                      const Child: IView): IUMLGeneralizationView; dispid 603;
    function CreateAssociationView(const ADiagramView: IDiagramView; const AModel: IUMLAssociation; 
                                   const End1: IView; const End2: IView): IUMLAssociationView; dispid 604;
    function CreateAssociationClassView(const ADiagramView: IDiagramView; 
                                        const AModel: IUMLAssociationClass; 
                                        const AssociationView: IView; const ClassView: IView): IUMLAssociationClassView; dispid 605;
    function CreateDependencyView(const ADiagramView: IDiagramView; const AModel: IUMLDependency; 
                                  const Client: IView; const Supplier: IView): IUMLDependencyView; dispid 606;
    function CreateRealizationView(const ADiagramView: IDiagramView; const AModel: IUMLRealization; 
                                   const Client: IView; const Supplier: IView): IUMLRealizationView; dispid 607;
    function CreateIncludeView(const ADiagramView: IDiagramView; const AModel: IUMLInclude; 
                               const Base: IView; const Addition: IView): IUMLIncludeView; dispid 608;
    function CreateExtendView(const ADiagramView: IDiagramView; const AModel: IUMLExtend; 
                              const Base: IView; const Extension: IView): IUMLExtendView; dispid 609;
    function CreateObjectView(const ADiagramView: IDiagramView; const AModel: IUMLObject): IUMLColObjectView; dispid 610;
    function CreateSeqObjectView(const ADiagramView: IUMLSequenceDiagramView; 
                                 const AModel: IUMLObject): IUMLSeqObjectView; dispid 611;
    function CreateClassifierRoleView(const ADiagramView: IDiagramView; 
                                      const AModel: IUMLClassifierRole): IUMLColClassifierRoleView; dispid 612;
    function CreateSeqClassifierRoleView(const ADiagramView: IUMLSequenceRoleDiagramView; 
                                         const AModel: IUMLClassifierRole): IUMLSeqClassifierRoleView; dispid 613;
    function CreateLinkView(const ADiagramView: IDiagramView; const AModel: IUMLLink; 
                            const End1: IView; const End2: IView): IUMLLinkView; dispid 614;
    function CreateAssociationRoleView(const ADiagramView: IDiagramView; 
                                       const AModel: IUMLAssociationRole; const End1: IView; 
                                       const End2: IView): IUMLAssociationRoleView; dispid 615;
    function CreateStimulusView(const ADiagramView: IUMLCollaborationDiagramView; 
                                const AModel: IUMLStimulus; const LinkView: IView): IUMLColStimulusView; dispid 616;
    function CreateSeqStimulusView(const ADiagramView: IUMLSequenceDiagramView; 
                                   const AModel: IUMLStimulus; const Sender: IView; 
                                   const Receiver: IView): IUMLSeqStimulusView; dispid 617;
    function CreateMessageView(const ADiagramView: IUMLCollaborationRoleDiagramView; 
                               const AModel: IUMLMessage; const AssociationRoleView: IView): IUMLColMessageView; dispid 618;
    function CreateSeqMessageView(const ADiagramView: IUMLSequenceRoleDiagramView; 
                                  const AModel: IUMLMessage; const Sender: IView; 
                                  const Receiver: IView): IUMLSeqMessageView; dispid 619;
    function CreateStateView(const ADiagramView: IUMLStatechartDiagramView; 
                             const AModel: IUMLCompositeState): IUMLStateView; dispid 620;
    function CreateSubmachineStateView(const ADiagramView: IUMLStatechartDiagramView; 
                                       const AModel: IUMLSubmachineState): IUMLSubmachineStateView; dispid 621;
    function CreatePseudostateView(const ADiagramView: IDiagramView; const AModel: IUMLPseudostate): IUMLPseudostateView; dispid 622;
    function CreateFinalStateView(const ADiagramView: IDiagramView; const AModel: IUMLFinalState): IUMLFinalStateView; dispid 623;
    function CreateActionStateView(const ADiagramView: IUMLActivityDiagramView; 
                                   const AModel: IUMLActionState): IUMLActionStateView; dispid 624;
    function CreateSubactivityStateView(const ADiagramView: IUMLActivityDiagramView; 
                                        const AModel: IUMLSubactivityState): IUMLSubactivityStateView; dispid 625;
    function CreateSwimlaneView(const ADiagramView: IUMLActivityDiagramView; 
                                const AModel: IUMLPartition): IUMLSwimlaneView; dispid 626;
    function CreateTransitionView(const ADiagramView: IDiagramView; const AModel: IUMLTransition; 
                                  const Source: IView; const Target: IView): IUMLTransitionView; dispid 627;
  end;

// *********************************************************************//
// Interface: IElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6BF1C43B-C90E-4E10-AEA9-AAE19D4FA5AF}
// *********************************************************************//
  IElement = interface(IDispatch)
    ['{6BF1C43B-C90E-4E10-AEA9-AAE19D4FA5AF}']
    function Get_Tag: WideString; safecall;
    procedure Set_Tag(const Value: WideString); safecall;
    function GetGuid: WideString; safecall;
    function GetMetaClass: IMetaClass; safecall;
    function GetContainingDocument: IDocument; safecall;
    function IsDocumentElement: WordBool; safecall;
    function IsReadOnly: WordBool; safecall;
    function GetClassName: WideString; safecall;
    function IsKindOf(const ClassName: WideString): WordBool; safecall;
    function MOF_GetAttribute(const Name: WideString): WideString; safecall;
    function MOF_GetReference(const Name: WideString): IElement; safecall;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; safecall;
    function MOF_GetCollectionCount(const Name: WideString): Integer; safecall;
    property Tag: WideString read Get_Tag write Set_Tag;
  end;

// *********************************************************************//
// DispIntf:  IElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6BF1C43B-C90E-4E10-AEA9-AAE19D4FA5AF}
// *********************************************************************//
  IElementDisp = dispinterface
    ['{6BF1C43B-C90E-4E10-AEA9-AAE19D4FA5AF}']
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37CE5188-CEB9-4F67-8A49-46BC11667706}
// *********************************************************************//
  IModel = interface(IElement)
    ['{37CE5188-CEB9-4F67-8A49-46BC11667706}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const Value: WideString); safecall;
    function Get_Documentation: WideString; safecall;
    procedure Set_Documentation(const Value: WideString); safecall;
    function Get_Attachments: WideString; safecall;
    function Get_Pathname: WideString; safecall;
    function GetViewCount: Integer; safecall;
    function GetViewAt(Index: Integer): IView; safecall;
    function GetOwnedDiagramCount: Integer; safecall;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; safecall;
    function FindByName(const AName: WideString): IModel; safecall;
    function FindByRelativePathname(const RelPath: WideString): IModel; safecall;
    function ContainsName(const AName: WideString): WordBool; safecall;
    function CanContain(const AModel: IModel): WordBool; safecall;
    function CanContainKind(const Kind: WideString): WordBool; safecall;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; safecall;
    function CanContainDiagramKind(const Kind: WideString): WordBool; safecall;
    function CanRelocateTo(const AModel: IModel): WordBool; safecall;
    function CanDelete: WordBool; safecall;
    procedure RelocateTo(const AOwner: IModel); safecall;
    procedure ClearAttachments; safecall;
    procedure AddAttachment(const Attach: WideString); safecall;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); safecall;
    procedure DeleteAttachment(Index: Integer); safecall;
    function GetAttachmentAt(Index: Integer): WideString; safecall;
    function GetAttachmentCount: Integer; safecall;
    property Name: WideString read Get_Name write Set_Name;
    property Documentation: WideString read Get_Documentation write Set_Documentation;
    property Attachments: WideString read Get_Attachments;
    property Pathname: WideString read Get_Pathname;
  end;

// *********************************************************************//
// DispIntf:  IModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {37CE5188-CEB9-4F67-8A49-46BC11667706}
// *********************************************************************//
  IModelDisp = dispinterface
    ['{37CE5188-CEB9-4F67-8A49-46BC11667706}']
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IExtensibleModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4831D6FB-B090-4B50-B803-8B4F57957334}
// *********************************************************************//
  IExtensibleModel = interface(IModel)
    ['{4831D6FB-B090-4B50-B803-8B4F57957334}']
    function Get_StereotypeProfile: WideString; safecall;
    function Get_StereotypeName: WideString; safecall;
    function GetConstraintCount: Integer; safecall;
    function GetConstraintAt(Index: Integer): IConstraint; safecall;
    function GetTaggedValueCount: Integer; safecall;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; safecall;
    function GetReferencingTagCount: Integer; safecall;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; safecall;
    function GetStereotype: IStereotype; safecall;
    procedure SetStereotype(const Name: WideString); safecall;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); safecall;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; safecall;
    procedure DeleteConstraint(Index: Integer); safecall;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; safecall;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); safecall;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; safecall;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); safecall;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; safecall;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); safecall;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; safecall;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); safecall;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; safecall;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); safecall;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; safecall;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); safecall;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; safecall;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; safecall;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; safecall;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); safecall;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); safecall;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); safecall;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); safecall;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); safecall;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; safecall;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); safecall;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; safecall;
    property StereotypeProfile: WideString read Get_StereotypeProfile;
    property StereotypeName: WideString read Get_StereotypeName;
  end;

// *********************************************************************//
// DispIntf:  IExtensibleModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4831D6FB-B090-4B50-B803-8B4F57957334}
// *********************************************************************//
  IExtensibleModelDisp = dispinterface
    ['{4831D6FB-B090-4B50-B803-8B4F57957334}']
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05BD8496-1B1E-4D2F-9E9C-24353BB64582}
// *********************************************************************//
  IUMLElement = interface(IExtensibleModel)
    ['{05BD8496-1B1E-4D2F-9E9C-24353BB64582}']
  end;

// *********************************************************************//
// DispIntf:  IUMLElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {05BD8496-1B1E-4D2F-9E9C-24353BB64582}
// *********************************************************************//
  IUMLElementDisp = dispinterface
    ['{05BD8496-1B1E-4D2F-9E9C-24353BB64582}']
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLModelElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41725B53-1917-4D3B-A1A8-F8FCCF22D89E}
// *********************************************************************//
  IUMLModelElement = interface(IUMLElement)
    ['{41725B53-1917-4D3B-A1A8-F8FCCF22D89E}']
    function Get_Visibility: UMLVisibilityKind; safecall;
    procedure Set_Visibility(Value: UMLVisibilityKind); safecall;
    function Get_IsSpecification: WordBool; safecall;
    procedure Set_IsSpecification(Value: WordBool); safecall;
    procedure AddElementImport(const Value: IUMLElementImport); safecall;
    procedure RemoveElementImport(const Value: IUMLElementImport); safecall;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); safecall;
    procedure DeleteElementImport(Index: Integer); safecall;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; safecall;
    function GetElementImportCount: Integer; safecall;
    function GetElementImportAt(Index: Integer): IUMLElementImport; safecall;
    function Get_Namespace: IUMLNamespace; safecall;
    procedure AddClientDependency(const Value: IUMLDependency); safecall;
    procedure RemoveClientDependency(const Value: IUMLDependency); safecall;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); safecall;
    procedure DeleteClientDependency(Index: Integer); safecall;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; safecall;
    function GetClientDependencyCount: Integer; safecall;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; safecall;
    procedure AddSupplierDependency(const Value: IUMLDependency); safecall;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); safecall;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); safecall;
    procedure DeleteSupplierDependency(Index: Integer); safecall;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; safecall;
    function GetSupplierDependencyCount: Integer; safecall;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; safecall;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); safecall;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); safecall;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); safecall;
    procedure DeleteDefaultParameter(Index: Integer); safecall;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; safecall;
    function GetDefaultParameterCount: Integer; safecall;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; safecall;
    procedure AddComment(const Value: IUMLComment); safecall;
    procedure RemoveComment(const Value: IUMLComment); safecall;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); safecall;
    procedure DeleteComment(Index: Integer); safecall;
    function IndexOfComment(const Value: IUMLComment): Integer; safecall;
    function GetCommentCount: Integer; safecall;
    function GetCommentAt(Index: Integer): IUMLComment; safecall;
    function Get_Container: IUMLComponent; safecall;
    procedure Set_Container(const Value: IUMLComponent); safecall;
    function GetTemplateParameterCount: Integer; safecall;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; safecall;
    function Get_ParameterOwner: IUMLTemplateParameter; safecall;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); safecall;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); safecall;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); safecall;
    procedure DeleteTemplateArgument(Index: Integer); safecall;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; safecall;
    function GetTemplateArgumentCount: Integer; safecall;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; safecall;
    function GetBehaviorCount: Integer; safecall;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; safecall;
    procedure AddContentRole(const Value: IUMLClassifierRole); safecall;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); safecall;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); safecall;
    procedure DeleteContentRole(Index: Integer); safecall;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; safecall;
    function GetContentRoleCount: Integer; safecall;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; safecall;
    procedure AddOwnerPartition(const Value: IUMLPartition); safecall;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); safecall;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); safecall;
    procedure DeleteOwnerPartition(Index: Integer); safecall;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; safecall;
    function GetOwnerPartitionCount: Integer; safecall;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; safecall;
    property Visibility: UMLVisibilityKind read Get_Visibility write Set_Visibility;
    property IsSpecification: WordBool read Get_IsSpecification write Set_IsSpecification;
    property Namespace: IUMLNamespace read Get_Namespace;
    property Container: IUMLComponent read Get_Container write Set_Container;
    property ParameterOwner: IUMLTemplateParameter read Get_ParameterOwner;
  end;

// *********************************************************************//
// DispIntf:  IUMLModelElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41725B53-1917-4D3B-A1A8-F8FCCF22D89E}
// *********************************************************************//
  IUMLModelElementDisp = dispinterface
    ['{41725B53-1917-4D3B-A1A8-F8FCCF22D89E}']
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLGeneralizableElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8DA1D40F-BB4E-401F-B913-031E4DAD36D6}
// *********************************************************************//
  IUMLGeneralizableElement = interface(IUMLModelElement)
    ['{8DA1D40F-BB4E-401F-B913-031E4DAD36D6}']
    function Get_IsRoot: WordBool; safecall;
    procedure Set_IsRoot(Value: WordBool); safecall;
    function Get_IsLeaf: WordBool; safecall;
    procedure Set_IsLeaf(Value: WordBool); safecall;
    function Get_IsAbstract: WordBool; safecall;
    procedure Set_IsAbstract(Value: WordBool); safecall;
    procedure AddGeneralization(const Value: IUMLGeneralization); safecall;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); safecall;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); safecall;
    procedure DeleteGeneralization(Index: Integer); safecall;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; safecall;
    function GetGeneralizationCount: Integer; safecall;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; safecall;
    procedure AddSpecialization(const Value: IUMLGeneralization); safecall;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); safecall;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); safecall;
    procedure DeleteSpecialization(Index: Integer); safecall;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; safecall;
    function GetSpecializationCount: Integer; safecall;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; safecall;
    property IsRoot: WordBool read Get_IsRoot write Set_IsRoot;
    property IsLeaf: WordBool read Get_IsLeaf write Set_IsLeaf;
    property IsAbstract: WordBool read Get_IsAbstract write Set_IsAbstract;
  end;

// *********************************************************************//
// DispIntf:  IUMLGeneralizableElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8DA1D40F-BB4E-401F-B913-031E4DAD36D6}
// *********************************************************************//
  IUMLGeneralizableElementDisp = dispinterface
    ['{8DA1D40F-BB4E-401F-B913-031E4DAD36D6}']
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLNamespace
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4C6D06BF-7840-4A1B-B7E7-08999E484E24}
// *********************************************************************//
  IUMLNamespace = interface(IUMLGeneralizableElement)
    ['{4C6D06BF-7840-4A1B-B7E7-08999E484E24}']
    function GetOwnedElementCount: Integer; safecall;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLNamespaceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4C6D06BF-7840-4A1B-B7E7-08999E484E24}
// *********************************************************************//
  IUMLNamespaceDisp = dispinterface
    ['{4C6D06BF-7840-4A1B-B7E7-08999E484E24}']
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IMetaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9111F106-C415-4CE2-AEF8-E006339FA974}
// *********************************************************************//
  IMetaElement = interface(IDispatch)
    ['{9111F106-C415-4CE2-AEF8-E006339FA974}']
    function Get_Name: WideString; safecall;
    function GetGuid: WideString; safecall;
    property Name: WideString read Get_Name;
  end;

// *********************************************************************//
// DispIntf:  IMetaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9111F106-C415-4CE2-AEF8-E006339FA974}
// *********************************************************************//
  IMetaElementDisp = dispinterface
    ['{9111F106-C415-4CE2-AEF8-E006339FA974}']
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaClassifier
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A3688E8-E3CD-4D28-B2EA-32955136A0BD}
// *********************************************************************//
  IMetaClassifier = interface(IMetaElement)
    ['{0A3688E8-E3CD-4D28-B2EA-32955136A0BD}']
  end;

// *********************************************************************//
// DispIntf:  IMetaClassifierDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A3688E8-E3CD-4D28-B2EA-32955136A0BD}
// *********************************************************************//
  IMetaClassifierDisp = dispinterface
    ['{0A3688E8-E3CD-4D28-B2EA-32955136A0BD}']
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaClass
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {679B395E-CC22-4BC1-814E-C31B78147AFA}
// *********************************************************************//
  IMetaClass = interface(IMetaClassifier)
    ['{679B395E-CC22-4BC1-814E-C31B78147AFA}']
    function Get_IsAbstract: WordBool; safecall;
    function GetMetaAttributeCount: Integer; safecall;
    function GetMetaAttributeAt(Index: Integer): IMetaAttribute; safecall;
    function GetMetaReferenceCount: Integer; safecall;
    function GetMetaReferenceAt(Index: Integer): IMetaReference; safecall;
    function GetMetaCollectionCount: Integer; safecall;
    function GetMetaCollectionAt(Index: Integer): IMetaCollection; safecall;
    function GetSubclassCount: Integer; safecall;
    function GetSubclassAt(Index: Integer): IMetaClass; safecall;
    function Get_Superclass: IMetaClass; safecall;
    function FindInstanceByGuid(const Guid: WideString): IElement; safecall;
    function FindInstanceByGuidRecurse(const Guid: WideString): IElement; safecall;
    function IsKindOf(const ClassName: WideString): WordBool; safecall;
    function ExistsAttribute(const Name: WideString): WordBool; safecall;
    function ExistsReference(const Name: WideString): WordBool; safecall;
    function ExistsCollection(const Name: WideString): WordBool; safecall;
    function GetAttributeByName(const Name: WideString): IMetaAttribute; safecall;
    function GetReferenceByName(const Name: WideString): IMetaReference; safecall;
    function GetCollectionByName(const Name: WideString): IMetaCollection; safecall;
    function GetContainerRelation(const Container: WideString): IMetaReference; safecall;
    function GetInstanceAt(Index: Integer): IElement; safecall;
    function GetInstanceCount: Integer; safecall;
    function GetInclusiveInstanceAt(Index: Integer): IElement; safecall;
    function GetInclusiveInstanceCount: Integer; safecall;
    property IsAbstract: WordBool read Get_IsAbstract;
    property Superclass: IMetaClass read Get_Superclass;
  end;

// *********************************************************************//
// DispIntf:  IMetaClassDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {679B395E-CC22-4BC1-814E-C31B78147AFA}
// *********************************************************************//
  IMetaClassDisp = dispinterface
    ['{679B395E-CC22-4BC1-814E-C31B78147AFA}']
    property IsAbstract: WordBool readonly dispid 1024;
    function GetMetaAttributeCount: Integer; dispid 1025;
    function GetMetaAttributeAt(Index: Integer): IMetaAttribute; dispid 1026;
    function GetMetaReferenceCount: Integer; dispid 1027;
    function GetMetaReferenceAt(Index: Integer): IMetaReference; dispid 1028;
    function GetMetaCollectionCount: Integer; dispid 1029;
    function GetMetaCollectionAt(Index: Integer): IMetaCollection; dispid 1030;
    function GetSubclassCount: Integer; dispid 1031;
    function GetSubclassAt(Index: Integer): IMetaClass; dispid 1032;
    property Superclass: IMetaClass readonly dispid 1033;
    function FindInstanceByGuid(const Guid: WideString): IElement; dispid 1034;
    function FindInstanceByGuidRecurse(const Guid: WideString): IElement; dispid 1035;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 1036;
    function ExistsAttribute(const Name: WideString): WordBool; dispid 1037;
    function ExistsReference(const Name: WideString): WordBool; dispid 1038;
    function ExistsCollection(const Name: WideString): WordBool; dispid 1039;
    function GetAttributeByName(const Name: WideString): IMetaAttribute; dispid 1040;
    function GetReferenceByName(const Name: WideString): IMetaReference; dispid 1041;
    function GetCollectionByName(const Name: WideString): IMetaCollection; dispid 1042;
    function GetContainerRelation(const Container: WideString): IMetaReference; dispid 1043;
    function GetInstanceAt(Index: Integer): IElement; dispid 1044;
    function GetInstanceCount: Integer; dispid 1045;
    function GetInclusiveInstanceAt(Index: Integer): IElement; dispid 1046;
    function GetInclusiveInstanceCount: Integer; dispid 1047;
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaSlot
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {15A5CBED-5B23-4385-9B18-9D81B12A9155}
// *********************************************************************//
  IMetaSlot = interface(IMetaElement)
    ['{15A5CBED-5B23-4385-9B18-9D81B12A9155}']
    function Get_IsReadOnly: WordBool; safecall;
    function Get_IsDerived: WordBool; safecall;
    function Get_TypeRef: IMetaClassifier; safecall;
    property IsReadOnly: WordBool read Get_IsReadOnly;
    property IsDerived: WordBool read Get_IsDerived;
    property TypeRef: IMetaClassifier read Get_TypeRef;
  end;

// *********************************************************************//
// DispIntf:  IMetaSlotDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {15A5CBED-5B23-4385-9B18-9D81B12A9155}
// *********************************************************************//
  IMetaSlotDisp = dispinterface
    ['{15A5CBED-5B23-4385-9B18-9D81B12A9155}']
    property IsReadOnly: WordBool readonly dispid 768;
    property IsDerived: WordBool readonly dispid 769;
    property TypeRef: IMetaClassifier readonly dispid 770;
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaAttribute
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16D4B5AD-2817-4079-9E9B-303EC5CFDC98}
// *********************************************************************//
  IMetaAttribute = interface(IMetaSlot)
    ['{16D4B5AD-2817-4079-9E9B-303EC5CFDC98}']
    function Get_DefaultValue: WideString; safecall;
    property DefaultValue: WideString read Get_DefaultValue;
  end;

// *********************************************************************//
// DispIntf:  IMetaAttributeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {16D4B5AD-2817-4079-9E9B-303EC5CFDC98}
// *********************************************************************//
  IMetaAttributeDisp = dispinterface
    ['{16D4B5AD-2817-4079-9E9B-303EC5CFDC98}']
    property DefaultValue: WideString readonly dispid 1024;
    property IsReadOnly: WordBool readonly dispid 768;
    property IsDerived: WordBool readonly dispid 769;
    property TypeRef: IMetaClassifier readonly dispid 770;
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaAssociationEnd
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E0274973-68A6-4516-91A6-44BB0D5E1BF0}
// *********************************************************************//
  IMetaAssociationEnd = interface(IMetaSlot)
    ['{E0274973-68A6-4516-91A6-44BB0D5E1BF0}']
    function Get_Kind: MetaAssociationEndKind; safecall;
    function Get_Aggregate: MetaAggregateKind; safecall;
    function Get_OtherSide: WideString; safecall;
    function Get_OtherSideKind: MetaAssociationEndKind; safecall;
    function GetOtherSideEnd: IMetaAssociationEnd; safecall;
    property Kind: MetaAssociationEndKind read Get_Kind;
    property Aggregate: MetaAggregateKind read Get_Aggregate;
    property OtherSide: WideString read Get_OtherSide;
    property OtherSideKind: MetaAssociationEndKind read Get_OtherSideKind;
  end;

// *********************************************************************//
// DispIntf:  IMetaAssociationEndDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E0274973-68A6-4516-91A6-44BB0D5E1BF0}
// *********************************************************************//
  IMetaAssociationEndDisp = dispinterface
    ['{E0274973-68A6-4516-91A6-44BB0D5E1BF0}']
    property Kind: MetaAssociationEndKind readonly dispid 1024;
    property Aggregate: MetaAggregateKind readonly dispid 1025;
    property OtherSide: WideString readonly dispid 1026;
    property OtherSideKind: MetaAssociationEndKind readonly dispid 1027;
    function GetOtherSideEnd: IMetaAssociationEnd; dispid 1028;
    property IsReadOnly: WordBool readonly dispid 768;
    property IsDerived: WordBool readonly dispid 769;
    property TypeRef: IMetaClassifier readonly dispid 770;
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaReference
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13B577DE-AD9F-435B-90CC-C1F65EC28A42}
// *********************************************************************//
  IMetaReference = interface(IMetaAssociationEnd)
    ['{13B577DE-AD9F-435B-90CC-C1F65EC28A42}']
  end;

// *********************************************************************//
// DispIntf:  IMetaReferenceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {13B577DE-AD9F-435B-90CC-C1F65EC28A42}
// *********************************************************************//
  IMetaReferenceDisp = dispinterface
    ['{13B577DE-AD9F-435B-90CC-C1F65EC28A42}']
    property Kind: MetaAssociationEndKind readonly dispid 1024;
    property Aggregate: MetaAggregateKind readonly dispid 1025;
    property OtherSide: WideString readonly dispid 1026;
    property OtherSideKind: MetaAssociationEndKind readonly dispid 1027;
    function GetOtherSideEnd: IMetaAssociationEnd; dispid 1028;
    property IsReadOnly: WordBool readonly dispid 768;
    property IsDerived: WordBool readonly dispid 769;
    property TypeRef: IMetaClassifier readonly dispid 770;
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6FDEEA70-02EC-43CD-900A-24DAEDF81D9D}
// *********************************************************************//
  IMetaCollection = interface(IMetaAssociationEnd)
    ['{6FDEEA70-02EC-43CD-900A-24DAEDF81D9D}']
  end;

// *********************************************************************//
// DispIntf:  IMetaCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6FDEEA70-02EC-43CD-900A-24DAEDF81D9D}
// *********************************************************************//
  IMetaCollectionDisp = dispinterface
    ['{6FDEEA70-02EC-43CD-900A-24DAEDF81D9D}']
    property Kind: MetaAssociationEndKind readonly dispid 1024;
    property Aggregate: MetaAggregateKind readonly dispid 1025;
    property OtherSide: WideString readonly dispid 1026;
    property OtherSideKind: MetaAssociationEndKind readonly dispid 1027;
    function GetOtherSideEnd: IMetaAssociationEnd; dispid 1028;
    property IsReadOnly: WordBool readonly dispid 768;
    property IsDerived: WordBool readonly dispid 769;
    property TypeRef: IMetaClassifier readonly dispid 770;
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IDocument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {87207805-69A8-4731-92BD-970B6011D4CC}
// *********************************************************************//
  IDocument = interface(IDispatch)
    ['{87207805-69A8-4731-92BD-970B6011D4CC}']
    function Get_FileName: WideString; safecall;
    function Get_Version: WideString; safecall;
    function Get_Modified: WordBool; safecall;
    function Get_ReadOnly: WordBool; safecall;
    function GetDocumentSymbol: WideString; safecall;
    function GetDocumentElement: IElement; safecall;
    procedure Save; safecall;
    procedure SaveAs(const FileName: WideString); safecall;
    property FileName: WideString read Get_FileName;
    property Version: WideString read Get_Version;
    property Modified: WordBool read Get_Modified;
    property ReadOnly: WordBool read Get_ReadOnly;
  end;

// *********************************************************************//
// DispIntf:  IDocumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {87207805-69A8-4731-92BD-970B6011D4CC}
// *********************************************************************//
  IDocumentDisp = dispinterface
    ['{87207805-69A8-4731-92BD-970B6011D4CC}']
    property FileName: WideString readonly dispid 512;
    property Version: WideString readonly dispid 513;
    property Modified: WordBool readonly dispid 514;
    property ReadOnly: WordBool readonly dispid 515;
    function GetDocumentSymbol: WideString; dispid 516;
    function GetDocumentElement: IElement; dispid 517;
    procedure Save; dispid 518;
    procedure SaveAs(const FileName: WideString); dispid 519;
  end;

// *********************************************************************//
// Interface: IView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {68B7FB9E-F929-4DF2-9019-8793E5A8E5FC}
// *********************************************************************//
  IView = interface(IElement)
    ['{68B7FB9E-F929-4DF2-9019-8793E5A8E5FC}']
    function Get_LineColor: WideString; safecall;
    procedure Set_LineColor(const Value: WideString); safecall;
    function Get_FillColor: WideString; safecall;
    procedure Set_FillColor(const Value: WideString); safecall;
    function Get_FontFace: WideString; safecall;
    procedure Set_FontFace(const Value: WideString); safecall;
    function Get_FontColor: WideString; safecall;
    procedure Set_FontColor(const Value: WideString); safecall;
    function Get_FontSize: Integer; safecall;
    procedure Set_FontSize(Value: Integer); safecall;
    function Get_FontStyle: Integer; safecall;
    procedure Set_FontStyle(Value: Integer); safecall;
    function Get_Visible: WordBool; safecall;
    function Get_Enabled: WordBool; safecall;
    function Get_Selected: WordBool; safecall;
    function Get_Model: IModel; safecall;
    function Get_ContainerView: IView; safecall;
    function GetContainedViewCount: Integer; safecall;
    function GetContainedViewAt(Index: Integer): IView; safecall;
    function Get_OwnerDiagramView: IDiagramView; safecall;
    procedure BringToFront; safecall;
    procedure SendToBack; safecall;
    procedure Update; safecall;
    function GetDiagramView: IDiagramView; safecall;
    function CanContainView(const AView: IView): WordBool; safecall;
    function CanContainViewKind(const Kind: WideString): WordBool; safecall;
    procedure Move(DX: Integer; DY: Integer); safecall;
    procedure MoveInto(const AContainerView: IView); safecall;
    property LineColor: WideString read Get_LineColor write Set_LineColor;
    property FillColor: WideString read Get_FillColor write Set_FillColor;
    property FontFace: WideString read Get_FontFace write Set_FontFace;
    property FontColor: WideString read Get_FontColor write Set_FontColor;
    property FontSize: Integer read Get_FontSize write Set_FontSize;
    property FontStyle: Integer read Get_FontStyle write Set_FontStyle;
    property Visible: WordBool read Get_Visible;
    property Enabled: WordBool read Get_Enabled;
    property Selected: WordBool read Get_Selected;
    property Model: IModel read Get_Model;
    property ContainerView: IView read Get_ContainerView;
    property OwnerDiagramView: IDiagramView read Get_OwnerDiagramView;
  end;

// *********************************************************************//
// DispIntf:  IViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {68B7FB9E-F929-4DF2-9019-8793E5A8E5FC}
// *********************************************************************//
  IViewDisp = dispinterface
    ['{68B7FB9E-F929-4DF2-9019-8793E5A8E5FC}']
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0AEF079C-3C25-42B4-B2D0-C2EC1103C4C4}
// *********************************************************************//
  IDiagramView = interface(IView)
    ['{0AEF079C-3C25-42B4-B2D0-C2EC1103C4C4}']
    function GetSelectedViewCount: Integer; safecall;
    function GetSelectedViewAt(Index: Integer): IView; safecall;
    function Get_Diagram: IDiagram; safecall;
    function GetOwnedViewCount: Integer; safecall;
    function GetOwnedViewAt(Index: Integer): IView; safecall;
    function CanOwnView(const AView: IView): WordBool; safecall;
    function CanOwnViewKind(const Kind: WideString): WordBool; safecall;
    function CanCopyViews: WordBool; safecall;
    function CanDeleteViews: WordBool; safecall;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; safecall;
    procedure LayoutDiagram; safecall;
    procedure CopyDiagram; safecall;
    procedure ExportDiagramAsBitmap(const FileName: WideString); safecall;
    procedure ExportDiagramAsMetafile(const FileName: WideString); safecall;
    procedure ExportDiagramAsJPEG(const FileName: WideString); safecall;
    property Diagram: IDiagram read Get_Diagram;
  end;

// *********************************************************************//
// DispIntf:  IDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0AEF079C-3C25-42B4-B2D0-C2EC1103C4C4}
// *********************************************************************//
  IDiagramViewDisp = dispinterface
    ['{0AEF079C-3C25-42B4-B2D0-C2EC1103C4C4}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8B7B84A-5C66-4B73-B590-5E76606B809E}
// *********************************************************************//
  IDiagram = interface(IModel)
    ['{F8B7B84A-5C66-4B73-B590-5E76606B809E}']
    function Get_DefaultDiagram: WordBool; safecall;
    procedure Set_DefaultDiagram(Value: WordBool); safecall;
    function Get_DiagramOwner: IModel; safecall;
    function Get_DiagramView: IDiagramView; safecall;
    property DefaultDiagram: WordBool read Get_DefaultDiagram write Set_DefaultDiagram;
    property DiagramOwner: IModel read Get_DiagramOwner;
    property DiagramView: IDiagramView read Get_DiagramView;
  end;

// *********************************************************************//
// DispIntf:  IDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F8B7B84A-5C66-4B73-B590-5E76606B809E}
// *********************************************************************//
  IDiagramDisp = dispinterface
    ['{F8B7B84A-5C66-4B73-B590-5E76606B809E}']
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IConstraint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EDAE6431-EB72-4E17-8B49-FC733DF4669E}
// *********************************************************************//
  IConstraint = interface(IElement)
    ['{EDAE6431-EB72-4E17-8B49-FC733DF4669E}']
    function Get_Name: WideString; safecall;
    procedure Set_Name(const Value: WideString); safecall;
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Value: WideString); safecall;
    function Get_ConstrainedModel: IExtensibleModel; safecall;
    property Name: WideString read Get_Name write Set_Name;
    property Body: WideString read Get_Body write Set_Body;
    property ConstrainedModel: IExtensibleModel read Get_ConstrainedModel;
  end;

// *********************************************************************//
// DispIntf:  IConstraintDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EDAE6431-EB72-4E17-8B49-FC733DF4669E}
// *********************************************************************//
  IConstraintDisp = dispinterface
    ['{EDAE6431-EB72-4E17-8B49-FC733DF4669E}']
    property Name: WideString dispid 768;
    property Body: WideString dispid 769;
    property ConstrainedModel: IExtensibleModel readonly dispid 770;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: ITaggedValue
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {43568451-DDBD-428B-B7BB-A835DE365741}
// *********************************************************************//
  ITaggedValue = interface(IElement)
    ['{43568451-DDBD-428B-B7BB-A835DE365741}']
    function Get_ProfileName: WideString; safecall;
    function Get_TagDefinitionSetName: WideString; safecall;
    function Get_Name: WideString; safecall;
    function Get_DataValue: WideString; safecall;
    function Get_TaggedModel: IExtensibleModel; safecall;
    function GetReferenceValueCount: Integer; safecall;
    function GetReferenceValueAt(Index: Integer): IExtensibleModel; safecall;
    function GetTagDefinition: ITagDefinition; safecall;
    function GetTagDefinitionSet: ITagDefinitionSet; safecall;
    function GetProfile: IProfile; safecall;
    property ProfileName: WideString read Get_ProfileName;
    property TagDefinitionSetName: WideString read Get_TagDefinitionSetName;
    property Name: WideString read Get_Name;
    property DataValue: WideString read Get_DataValue;
    property TaggedModel: IExtensibleModel read Get_TaggedModel;
  end;

// *********************************************************************//
// DispIntf:  ITaggedValueDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {43568451-DDBD-428B-B7BB-A835DE365741}
// *********************************************************************//
  ITaggedValueDisp = dispinterface
    ['{43568451-DDBD-428B-B7BB-A835DE365741}']
    property ProfileName: WideString readonly dispid 768;
    property TagDefinitionSetName: WideString readonly dispid 769;
    property Name: WideString readonly dispid 770;
    property DataValue: WideString readonly dispid 771;
    property TaggedModel: IExtensibleModel readonly dispid 772;
    function GetReferenceValueCount: Integer; dispid 773;
    function GetReferenceValueAt(Index: Integer): IExtensibleModel; dispid 774;
    function GetTagDefinition: ITagDefinition; dispid 775;
    function GetTagDefinitionSet: ITagDefinitionSet; dispid 776;
    function GetProfile: IProfile; dispid 777;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: ITagDefinition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CBD9F79B-38E9-410A-B488-38A2238A8501}
// *********************************************************************//
  ITagDefinition = interface(IDispatch)
    ['{CBD9F79B-38E9-410A-B488-38A2238A8501}']
    function Get_Name: WideString; safecall;
    function Get_TagType: TagTypeKind; safecall;
    function Get_ReferenceType: WideString; safecall;
    function Get_DefaultValue: WideString; safecall;
    function Get_TagDefinitionSet: ITagDefinitionSet; safecall;
    function IndexOfLiteral(const ALiteral: WideString): Integer; safecall;
    function GetLiteralAt(Index: Integer): WideString; safecall;
    function GetLiteralCount: Integer; safecall;
    property Name: WideString read Get_Name;
    property TagType: TagTypeKind read Get_TagType;
    property ReferenceType: WideString read Get_ReferenceType;
    property DefaultValue: WideString read Get_DefaultValue;
    property TagDefinitionSet: ITagDefinitionSet read Get_TagDefinitionSet;
  end;

// *********************************************************************//
// DispIntf:  ITagDefinitionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CBD9F79B-38E9-410A-B488-38A2238A8501}
// *********************************************************************//
  ITagDefinitionDisp = dispinterface
    ['{CBD9F79B-38E9-410A-B488-38A2238A8501}']
    property Name: WideString readonly dispid 512;
    property TagType: TagTypeKind readonly dispid 513;
    property ReferenceType: WideString readonly dispid 514;
    property DefaultValue: WideString readonly dispid 515;
    property TagDefinitionSet: ITagDefinitionSet readonly dispid 516;
    function IndexOfLiteral(const ALiteral: WideString): Integer; dispid 517;
    function GetLiteralAt(Index: Integer): WideString; dispid 518;
    function GetLiteralCount: Integer; dispid 519;
  end;

// *********************************************************************//
// Interface: ITagDefinitionSet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D0E49916-5F6C-4F53-B622-A7FE92A241A8}
// *********************************************************************//
  ITagDefinitionSet = interface(IDispatch)
    ['{D0E49916-5F6C-4F53-B622-A7FE92A241A8}']
    function Get_Name: WideString; safecall;
    function Get_Profile: IProfile; safecall;
    function GetTagDefinitionCount: Integer; safecall;
    function GetTagDefinitionAt(Index: Integer): ITagDefinition; safecall;
    function Get_Stereotype: IStereotype; safecall;
    function GetBaseClassAt(Index: Integer): WideString; safecall;
    function GetBaseClassCount: Integer; safecall;
    function FindTagDefinition(const Name: WideString): ITagDefinition; safecall;
    function CanApplyTo(const ClassName: WideString): WordBool; safecall;
    property Name: WideString read Get_Name;
    property Profile: IProfile read Get_Profile;
    property Stereotype: IStereotype read Get_Stereotype;
  end;

// *********************************************************************//
// DispIntf:  ITagDefinitionSetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D0E49916-5F6C-4F53-B622-A7FE92A241A8}
// *********************************************************************//
  ITagDefinitionSetDisp = dispinterface
    ['{D0E49916-5F6C-4F53-B622-A7FE92A241A8}']
    property Name: WideString readonly dispid 512;
    property Profile: IProfile readonly dispid 513;
    function GetTagDefinitionCount: Integer; dispid 514;
    function GetTagDefinitionAt(Index: Integer): ITagDefinition; dispid 515;
    property Stereotype: IStereotype readonly dispid 516;
    function GetBaseClassAt(Index: Integer): WideString; dispid 517;
    function GetBaseClassCount: Integer; dispid 518;
    function FindTagDefinition(const Name: WideString): ITagDefinition; dispid 519;
    function CanApplyTo(const ClassName: WideString): WordBool; dispid 520;
  end;

// *********************************************************************//
// Interface: IProfile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C2E2832-490B-4B5E-8EF3-5EE2D65FB361}
// *********************************************************************//
  IProfile = interface(IDispatch)
    ['{8C2E2832-490B-4B5E-8EF3-5EE2D65FB361}']
    function Get_Name: WideString; safecall;
    function Get_Description: WideString; safecall;
    function Get_Path: WideString; safecall;
    function Get_FileName: WideString; safecall;
    function Get_IconFile: WideString; safecall;
    function GetDataTypeCount: Integer; safecall;
    function GetDataTypeAt(Index: Integer): IDataType; safecall;
    function GetStereotypeCount: Integer; safecall;
    function GetStereotypeAt(Index: Integer): IStereotype; safecall;
    function GetTagDefinitionSetCount: Integer; safecall;
    function GetTagDefinitionSetAt(Index: Integer): ITagDefinitionSet; safecall;
    function FindTagDefinition(const TagDefinitionSet: WideString; const Name: WideString): ITagDefinition; safecall;
    function FindTagDefinitionSet(const Name: WideString): ITagDefinitionSet; safecall;
    function FindStereotype(const Name: WideString; const BaseClass: WideString): IStereotype; safecall;
    function FindDataType(const Name: WideString): IDataType; safecall;
    property Name: WideString read Get_Name;
    property Description: WideString read Get_Description;
    property Path: WideString read Get_Path;
    property FileName: WideString read Get_FileName;
    property IconFile: WideString read Get_IconFile;
  end;

// *********************************************************************//
// DispIntf:  IProfileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8C2E2832-490B-4B5E-8EF3-5EE2D65FB361}
// *********************************************************************//
  IProfileDisp = dispinterface
    ['{8C2E2832-490B-4B5E-8EF3-5EE2D65FB361}']
    property Name: WideString readonly dispid 512;
    property Description: WideString readonly dispid 513;
    property Path: WideString readonly dispid 514;
    property FileName: WideString readonly dispid 515;
    property IconFile: WideString readonly dispid 516;
    function GetDataTypeCount: Integer; dispid 517;
    function GetDataTypeAt(Index: Integer): IDataType; dispid 518;
    function GetStereotypeCount: Integer; dispid 519;
    function GetStereotypeAt(Index: Integer): IStereotype; dispid 520;
    function GetTagDefinitionSetCount: Integer; dispid 521;
    function GetTagDefinitionSetAt(Index: Integer): ITagDefinitionSet; dispid 522;
    function FindTagDefinition(const TagDefinitionSet: WideString; const Name: WideString): ITagDefinition; dispid 523;
    function FindTagDefinitionSet(const Name: WideString): ITagDefinitionSet; dispid 524;
    function FindStereotype(const Name: WideString; const BaseClass: WideString): IStereotype; dispid 525;
    function FindDataType(const Name: WideString): IDataType; dispid 526;
  end;

// *********************************************************************//
// Interface: IDataType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF34F178-5016-4407-B74A-CF4312BE6F50}
// *********************************************************************//
  IDataType = interface(IDispatch)
    ['{BF34F178-5016-4407-B74A-CF4312BE6F50}']
    function Get_Name: WideString; safecall;
    function Get_Profile: IProfile; safecall;
    property Name: WideString read Get_Name;
    property Profile: IProfile read Get_Profile;
  end;

// *********************************************************************//
// DispIntf:  IDataTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BF34F178-5016-4407-B74A-CF4312BE6F50}
// *********************************************************************//
  IDataTypeDisp = dispinterface
    ['{BF34F178-5016-4407-B74A-CF4312BE6F50}']
    property Name: WideString readonly dispid 512;
    property Profile: IProfile readonly dispid 513;
  end;

// *********************************************************************//
// Interface: IStereotype
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {571A16C6-388B-4F53-A546-D9CC713502E7}
// *********************************************************************//
  IStereotype = interface(IDispatch)
    ['{571A16C6-388B-4F53-A546-D9CC713502E7}']
    function Get_Name: WideString; safecall;
    function Get_IconFile: WideString; safecall;
    function Get_IconMinWidth: Integer; safecall;
    function Get_IconMinHeight: Integer; safecall;
    function Get_Description: WideString; safecall;
    function Get_Profile: IProfile; safecall;
    function GetChildCount: Integer; safecall;
    function GetChildAt(Index: Integer): IStereotype; safecall;
    function Get_Parent: IStereotype; safecall;
    function Get_TagDefinitionSet: ITagDefinitionSet; safecall;
    function GetBaseClassAt(Index: Integer): WideString; safecall;
    function GetBaseClassCount: Integer; safecall;
    function CanApplyTo(const ClassName: WideString): WordBool; safecall;
    property Name: WideString read Get_Name;
    property IconFile: WideString read Get_IconFile;
    property IconMinWidth: Integer read Get_IconMinWidth;
    property IconMinHeight: Integer read Get_IconMinHeight;
    property Description: WideString read Get_Description;
    property Profile: IProfile read Get_Profile;
    property Parent: IStereotype read Get_Parent;
    property TagDefinitionSet: ITagDefinitionSet read Get_TagDefinitionSet;
  end;

// *********************************************************************//
// DispIntf:  IStereotypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {571A16C6-388B-4F53-A546-D9CC713502E7}
// *********************************************************************//
  IStereotypeDisp = dispinterface
    ['{571A16C6-388B-4F53-A546-D9CC713502E7}']
    property Name: WideString readonly dispid 512;
    property IconFile: WideString readonly dispid 513;
    property IconMinWidth: Integer readonly dispid 514;
    property IconMinHeight: Integer readonly dispid 515;
    property Description: WideString readonly dispid 516;
    property Profile: IProfile readonly dispid 517;
    function GetChildCount: Integer; dispid 518;
    function GetChildAt(Index: Integer): IStereotype; dispid 519;
    property Parent: IStereotype readonly dispid 520;
    property TagDefinitionSet: ITagDefinitionSet readonly dispid 521;
    function GetBaseClassAt(Index: Integer): WideString; dispid 522;
    function GetBaseClassCount: Integer; dispid 523;
    function CanApplyTo(const ClassName: WideString): WordBool; dispid 524;
  end;

// *********************************************************************//
// Interface: IUMLElementImport
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93427E16-2E5A-450E-BAAB-2BBA07108F67}
// *********************************************************************//
  IUMLElementImport = interface(IUMLElement)
    ['{93427E16-2E5A-450E-BAAB-2BBA07108F67}']
    function Get_Visibility: UMLVisibilityKind; safecall;
    procedure Set_Visibility(Value: UMLVisibilityKind); safecall;
    function Get_Alias: WideString; safecall;
    procedure Set_Alias(const Value: WideString); safecall;
    function Get_IsSpecification: WordBool; safecall;
    procedure Set_IsSpecification(Value: WordBool); safecall;
    function Get_ImportedElement: IUMLModelElement; safecall;
    procedure Set_ImportedElement(const Value: IUMLModelElement); safecall;
    function Get_Package: IUMLPackage; safecall;
    property Visibility: UMLVisibilityKind read Get_Visibility write Set_Visibility;
    property Alias: WideString read Get_Alias write Set_Alias;
    property IsSpecification: WordBool read Get_IsSpecification write Set_IsSpecification;
    property ImportedElement: IUMLModelElement read Get_ImportedElement write Set_ImportedElement;
    property Package: IUMLPackage read Get_Package;
  end;

// *********************************************************************//
// DispIntf:  IUMLElementImportDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93427E16-2E5A-450E-BAAB-2BBA07108F67}
// *********************************************************************//
  IUMLElementImportDisp = dispinterface
    ['{93427E16-2E5A-450E-BAAB-2BBA07108F67}']
    property Visibility: UMLVisibilityKind dispid 1536;
    property Alias: WideString dispid 1537;
    property IsSpecification: WordBool dispid 1538;
    property ImportedElement: IUMLModelElement dispid 1539;
    property Package: IUMLPackage readonly dispid 1540;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLClassifier
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC46D9E3-CA2E-4F42-86FE-4F8C12EAA83D}
// *********************************************************************//
  IUMLClassifier = interface(IUMLNamespace)
    ['{CC46D9E3-CA2E-4F42-86FE-4F8C12EAA83D}']
    function GetOperationCount: Integer; safecall;
    function GetOperationAt(Index: Integer): IUMLOperation; safecall;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); safecall;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); safecall;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); safecall;
    procedure DeleteTypedFeature(Index: Integer); safecall;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; safecall;
    function GetTypedFeatureCount: Integer; safecall;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; safecall;
    procedure AddTypedParameter(const Value: IUMLParameter); safecall;
    procedure RemoveTypedParameter(const Value: IUMLParameter); safecall;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); safecall;
    procedure DeleteTypedParameter(Index: Integer); safecall;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; safecall;
    function GetTypedParameterCount: Integer; safecall;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; safecall;
    procedure AddAssociation(const Value: IUMLAssociationEnd); safecall;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); safecall;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); safecall;
    procedure DeleteAssociation(Index: Integer); safecall;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; safecall;
    function GetAssociationCount: Integer; safecall;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; safecall;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); safecall;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); safecall;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); safecall;
    procedure DeletePowertypeGeneralization(Index: Integer); safecall;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; safecall;
    function GetPowertypeGeneralizationCount: Integer; safecall;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; safecall;
    function GetAttributeCount: Integer; safecall;
    function GetAttributeAt(Index: Integer): IUMLAttribute; safecall;
    procedure AddOwnedPort(const Value: IUMLPort); safecall;
    procedure RemoveOwnedPort(const Value: IUMLPort); safecall;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); safecall;
    procedure DeleteOwnedPort(Index: Integer); safecall;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; safecall;
    function GetOwnedPortCount: Integer; safecall;
    function GetOwnedPortAt(Index: Integer): IUMLPort; safecall;
    procedure AddOwnedConnector(const Value: IUMLConnector); safecall;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); safecall;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); safecall;
    procedure DeleteOwnedConnector(Index: Integer); safecall;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; safecall;
    function GetOwnedConnectorCount: Integer; safecall;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; safecall;
    procedure AddInstance(const Value: IUMLInstance); safecall;
    procedure RemoveInstance(const Value: IUMLInstance); safecall;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); safecall;
    procedure DeleteInstance(Index: Integer); safecall;
    function IndexOfInstance(const Value: IUMLInstance): Integer; safecall;
    function GetInstanceCount: Integer; safecall;
    function GetInstanceAt(Index: Integer): IUMLInstance; safecall;
    procedure AddCreateAction(const Value: IUMLCreateAction); safecall;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); safecall;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); safecall;
    procedure DeleteCreateAction(Index: Integer); safecall;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; safecall;
    function GetCreateActionCount: Integer; safecall;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; safecall;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); safecall;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); safecall;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); safecall;
    procedure DeleteClassifierRole(Index: Integer); safecall;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; safecall;
    function GetClassifierRoleCount: Integer; safecall;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; safecall;
    function GetOwnedCollaborationCount: Integer; safecall;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; safecall;
    function GetOwnedCollaborationInstanceSetCount: Integer; safecall;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; safecall;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); safecall;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); safecall;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); safecall;
    procedure DeleteClassifierInState(Index: Integer); safecall;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; safecall;
    function GetClassifierInStateCount: Integer; safecall;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; safecall;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); safecall;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); safecall;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); safecall;
    procedure DeleteObjectFlowState(Index: Integer); safecall;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; safecall;
    function GetObjectFlowStateCount: Integer; safecall;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLClassifierDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CC46D9E3-CA2E-4F42-86FE-4F8C12EAA83D}
// *********************************************************************//
  IUMLClassifierDisp = dispinterface
    ['{CC46D9E3-CA2E-4F42-86FE-4F8C12EAA83D}']
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLPackage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F923C143-ECBB-4A42-8D3E-DEEF4329E5AD}
// *********************************************************************//
  IUMLPackage = interface(IUMLClassifier)
    ['{F923C143-ECBB-4A42-8D3E-DEEF4329E5AD}']
    function GetElementImportItemCount: Integer; safecall;
    function GetElementImportItemAt(Index: Integer): IUMLElementImport; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLPackageDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F923C143-ECBB-4A42-8D3E-DEEF4329E5AD}
// *********************************************************************//
  IUMLPackageDisp = dispinterface
    ['{F923C143-ECBB-4A42-8D3E-DEEF4329E5AD}']
    function GetElementImportItemCount: Integer; dispid 2560;
    function GetElementImportItemAt(Index: Integer): IUMLElementImport; dispid 2561;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLFeature
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1CDA6EA7-49F0-44AE-8BD1-E2FEFCBFFDAC}
// *********************************************************************//
  IUMLFeature = interface(IUMLModelElement)
    ['{1CDA6EA7-49F0-44AE-8BD1-E2FEFCBFFDAC}']
    function Get_OwnerScope: UMLScopeKind; safecall;
    procedure Set_OwnerScope(Value: UMLScopeKind); safecall;
    procedure AddConnectorEnd(const Value: IUMLConnectorEnd); safecall;
    procedure RemoveConnectorEnd(const Value: IUMLConnectorEnd); safecall;
    procedure InsertConnectorEnd(Index: Integer; const Value: IUMLConnectorEnd); safecall;
    procedure DeleteConnectorEnd(Index: Integer); safecall;
    function IndexOfConnectorEnd(const Value: IUMLConnectorEnd): Integer; safecall;
    function GetConnectorEndCount: Integer; safecall;
    function GetConnectorEndAt(Index: Integer): IUMLConnectorEnd; safecall;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); safecall;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); safecall;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); safecall;
    procedure DeleteClassifierRole(Index: Integer); safecall;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; safecall;
    function GetClassifierRoleCount: Integer; safecall;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; safecall;
    property OwnerScope: UMLScopeKind read Get_OwnerScope write Set_OwnerScope;
  end;

// *********************************************************************//
// DispIntf:  IUMLFeatureDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1CDA6EA7-49F0-44AE-8BD1-E2FEFCBFFDAC}
// *********************************************************************//
  IUMLFeatureDisp = dispinterface
    ['{1CDA6EA7-49F0-44AE-8BD1-E2FEFCBFFDAC}']
    property OwnerScope: UMLScopeKind dispid 1792;
    procedure AddConnectorEnd(const Value: IUMLConnectorEnd); dispid 1793;
    procedure RemoveConnectorEnd(const Value: IUMLConnectorEnd); dispid 1794;
    procedure InsertConnectorEnd(Index: Integer; const Value: IUMLConnectorEnd); dispid 1795;
    procedure DeleteConnectorEnd(Index: Integer); dispid 1796;
    function IndexOfConnectorEnd(const Value: IUMLConnectorEnd): Integer; dispid 1797;
    function GetConnectorEndCount: Integer; dispid 1798;
    function GetConnectorEndAt(Index: Integer): IUMLConnectorEnd; dispid 1799;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 1800;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 1801;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1802;
    procedure DeleteClassifierRole(Index: Integer); dispid 1803;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 1804;
    function GetClassifierRoleCount: Integer; dispid 1805;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLBehavioralFeature
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5E85290-40B3-4A32-B1B8-532D770704BE}
// *********************************************************************//
  IUMLBehavioralFeature = interface(IUMLFeature)
    ['{C5E85290-40B3-4A32-B1B8-532D770704BE}']
    function Get_IsQuery: WordBool; safecall;
    procedure Set_IsQuery(Value: WordBool); safecall;
    function GetParameterCount: Integer; safecall;
    function GetParameterAt(Index: Integer): IUMLParameter; safecall;
    procedure AddRaisedSignal(const Value: IUMLSignal); safecall;
    procedure RemoveRaisedSignal(const Value: IUMLSignal); safecall;
    procedure InsertRaisedSignal(Index: Integer; const Value: IUMLSignal); safecall;
    procedure DeleteRaisedSignal(Index: Integer); safecall;
    function IndexOfRaisedSignal(const Value: IUMLSignal): Integer; safecall;
    function GetRaisedSignalCount: Integer; safecall;
    function GetRaisedSignalAt(Index: Integer): IUMLSignal; safecall;
    property IsQuery: WordBool read Get_IsQuery write Set_IsQuery;
  end;

// *********************************************************************//
// DispIntf:  IUMLBehavioralFeatureDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5E85290-40B3-4A32-B1B8-532D770704BE}
// *********************************************************************//
  IUMLBehavioralFeatureDisp = dispinterface
    ['{C5E85290-40B3-4A32-B1B8-532D770704BE}']
    property IsQuery: WordBool dispid 2048;
    function GetParameterCount: Integer; dispid 2049;
    function GetParameterAt(Index: Integer): IUMLParameter; dispid 2050;
    procedure AddRaisedSignal(const Value: IUMLSignal); dispid 2051;
    procedure RemoveRaisedSignal(const Value: IUMLSignal); dispid 2052;
    procedure InsertRaisedSignal(Index: Integer; const Value: IUMLSignal); dispid 2053;
    procedure DeleteRaisedSignal(Index: Integer); dispid 2054;
    function IndexOfRaisedSignal(const Value: IUMLSignal): Integer; dispid 2055;
    function GetRaisedSignalCount: Integer; dispid 2056;
    function GetRaisedSignalAt(Index: Integer): IUMLSignal; dispid 2057;
    property OwnerScope: UMLScopeKind dispid 1792;
    procedure AddConnectorEnd(const Value: IUMLConnectorEnd); dispid 1793;
    procedure RemoveConnectorEnd(const Value: IUMLConnectorEnd); dispid 1794;
    procedure InsertConnectorEnd(Index: Integer; const Value: IUMLConnectorEnd); dispid 1795;
    procedure DeleteConnectorEnd(Index: Integer); dispid 1796;
    function IndexOfConnectorEnd(const Value: IUMLConnectorEnd): Integer; dispid 1797;
    function GetConnectorEndCount: Integer; dispid 1798;
    function GetConnectorEndAt(Index: Integer): IUMLConnectorEnd; dispid 1799;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 1800;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 1801;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1802;
    procedure DeleteClassifierRole(Index: Integer); dispid 1803;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 1804;
    function GetClassifierRoleCount: Integer; dispid 1805;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLOperation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508DC95-1024-4CEA-B323-361B9E312BE3}
// *********************************************************************//
  IUMLOperation = interface(IUMLBehavioralFeature)
    ['{C508DC95-1024-4CEA-B323-361B9E312BE3}']
    function Get_Concurrency: UMLCallConcurrencyKind; safecall;
    procedure Set_Concurrency(Value: UMLCallConcurrencyKind); safecall;
    function Get_IsRoot: WordBool; safecall;
    procedure Set_IsRoot(Value: WordBool); safecall;
    function Get_IsLeaf: WordBool; safecall;
    procedure Set_IsLeaf(Value: WordBool); safecall;
    function Get_IsAbstract: WordBool; safecall;
    procedure Set_IsAbstract(Value: WordBool); safecall;
    function Get_Specification: WideString; safecall;
    procedure Set_Specification(const Value: WideString); safecall;
    function Get_Owner: IUMLClassifier; safecall;
    procedure AddMethod(const Value: IUMLMethod); safecall;
    procedure RemoveMethod(const Value: IUMLMethod); safecall;
    procedure InsertMethod(Index: Integer; const Value: IUMLMethod); safecall;
    procedure DeleteMethod(Index: Integer); safecall;
    function IndexOfMethod(const Value: IUMLMethod): Integer; safecall;
    function GetMethodCount: Integer; safecall;
    function GetMethodAt(Index: Integer): IUMLMethod; safecall;
    procedure AddCallAction(const Value: IUMLCallAction); safecall;
    procedure RemoveCallAction(const Value: IUMLCallAction); safecall;
    procedure InsertCallAction(Index: Integer; const Value: IUMLCallAction); safecall;
    procedure DeleteCallAction(Index: Integer); safecall;
    function IndexOfCallAction(const Value: IUMLCallAction): Integer; safecall;
    function GetCallActionCount: Integer; safecall;
    function GetCallActionAt(Index: Integer): IUMLCallAction; safecall;
    procedure AddOccurrence(const Value: IUMLCallEvent); safecall;
    procedure RemoveOccurrence(const Value: IUMLCallEvent); safecall;
    procedure InsertOccurrence(Index: Integer; const Value: IUMLCallEvent); safecall;
    procedure DeleteOccurrence(Index: Integer); safecall;
    function IndexOfOccurrence(const Value: IUMLCallEvent): Integer; safecall;
    function GetOccurrenceCount: Integer; safecall;
    function GetOccurrenceAt(Index: Integer): IUMLCallEvent; safecall;
    function GetOwnedCollaborationCount: Integer; safecall;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; safecall;
    function GetOwnedCollaborationInstanceSetCount: Integer; safecall;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; safecall;
    property Concurrency: UMLCallConcurrencyKind read Get_Concurrency write Set_Concurrency;
    property IsRoot: WordBool read Get_IsRoot write Set_IsRoot;
    property IsLeaf: WordBool read Get_IsLeaf write Set_IsLeaf;
    property IsAbstract: WordBool read Get_IsAbstract write Set_IsAbstract;
    property Specification: WideString read Get_Specification write Set_Specification;
    property Owner: IUMLClassifier read Get_Owner;
  end;

// *********************************************************************//
// DispIntf:  IUMLOperationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C508DC95-1024-4CEA-B323-361B9E312BE3}
// *********************************************************************//
  IUMLOperationDisp = dispinterface
    ['{C508DC95-1024-4CEA-B323-361B9E312BE3}']
    property Concurrency: UMLCallConcurrencyKind dispid 2304;
    property IsRoot: WordBool dispid 2305;
    property IsLeaf: WordBool dispid 2306;
    property IsAbstract: WordBool dispid 2307;
    property Specification: WideString dispid 2308;
    property Owner: IUMLClassifier readonly dispid 2309;
    procedure AddMethod(const Value: IUMLMethod); dispid 2310;
    procedure RemoveMethod(const Value: IUMLMethod); dispid 2311;
    procedure InsertMethod(Index: Integer; const Value: IUMLMethod); dispid 2312;
    procedure DeleteMethod(Index: Integer); dispid 2313;
    function IndexOfMethod(const Value: IUMLMethod): Integer; dispid 2314;
    function GetMethodCount: Integer; dispid 2315;
    function GetMethodAt(Index: Integer): IUMLMethod; dispid 2316;
    procedure AddCallAction(const Value: IUMLCallAction); dispid 2317;
    procedure RemoveCallAction(const Value: IUMLCallAction); dispid 2318;
    procedure InsertCallAction(Index: Integer; const Value: IUMLCallAction); dispid 2319;
    procedure DeleteCallAction(Index: Integer); dispid 2320;
    function IndexOfCallAction(const Value: IUMLCallAction): Integer; dispid 2321;
    function GetCallActionCount: Integer; dispid 2322;
    function GetCallActionAt(Index: Integer): IUMLCallAction; dispid 2323;
    procedure AddOccurrence(const Value: IUMLCallEvent); dispid 2324;
    procedure RemoveOccurrence(const Value: IUMLCallEvent); dispid 2325;
    procedure InsertOccurrence(Index: Integer; const Value: IUMLCallEvent); dispid 2326;
    procedure DeleteOccurrence(Index: Integer); dispid 2327;
    function IndexOfOccurrence(const Value: IUMLCallEvent): Integer; dispid 2328;
    function GetOccurrenceCount: Integer; dispid 2329;
    function GetOccurrenceAt(Index: Integer): IUMLCallEvent; dispid 2330;
    function GetOwnedCollaborationCount: Integer; dispid 2331;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2332;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2333;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2334;
    property IsQuery: WordBool dispid 2048;
    function GetParameterCount: Integer; dispid 2049;
    function GetParameterAt(Index: Integer): IUMLParameter; dispid 2050;
    procedure AddRaisedSignal(const Value: IUMLSignal); dispid 2051;
    procedure RemoveRaisedSignal(const Value: IUMLSignal); dispid 2052;
    procedure InsertRaisedSignal(Index: Integer; const Value: IUMLSignal); dispid 2053;
    procedure DeleteRaisedSignal(Index: Integer); dispid 2054;
    function IndexOfRaisedSignal(const Value: IUMLSignal): Integer; dispid 2055;
    function GetRaisedSignalCount: Integer; dispid 2056;
    function GetRaisedSignalAt(Index: Integer): IUMLSignal; dispid 2057;
    property OwnerScope: UMLScopeKind dispid 1792;
    procedure AddConnectorEnd(const Value: IUMLConnectorEnd); dispid 1793;
    procedure RemoveConnectorEnd(const Value: IUMLConnectorEnd); dispid 1794;
    procedure InsertConnectorEnd(Index: Integer; const Value: IUMLConnectorEnd); dispid 1795;
    procedure DeleteConnectorEnd(Index: Integer); dispid 1796;
    function IndexOfConnectorEnd(const Value: IUMLConnectorEnd): Integer; dispid 1797;
    function GetConnectorEndCount: Integer; dispid 1798;
    function GetConnectorEndAt(Index: Integer): IUMLConnectorEnd; dispid 1799;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 1800;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 1801;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1802;
    procedure DeleteClassifierRole(Index: Integer); dispid 1803;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 1804;
    function GetClassifierRoleCount: Integer; dispid 1805;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLConnectorEnd
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51938E6A-A23A-42E5-AA6E-32C2EDAC8F0A}
// *********************************************************************//
  IUMLConnectorEnd = interface(IUMLModelElement)
    ['{51938E6A-A23A-42E5-AA6E-32C2EDAC8F0A}']
    function Get_Multiplicity: WideString; safecall;
    procedure Set_Multiplicity(const Value: WideString); safecall;
    function Get_IsOrdered: WordBool; safecall;
    procedure Set_IsOrdered(Value: WordBool); safecall;
    function Get_IsUnique: WordBool; safecall;
    procedure Set_IsUnique(Value: WordBool); safecall;
    function Get_Connector: IUMLConnector; safecall;
    procedure Set_Connector(const Value: IUMLConnector); safecall;
    function Get_Role: IUMLFeature; safecall;
    procedure Set_Role(const Value: IUMLFeature); safecall;
    property Multiplicity: WideString read Get_Multiplicity write Set_Multiplicity;
    property IsOrdered: WordBool read Get_IsOrdered write Set_IsOrdered;
    property IsUnique: WordBool read Get_IsUnique write Set_IsUnique;
    property Connector: IUMLConnector read Get_Connector write Set_Connector;
    property Role: IUMLFeature read Get_Role write Set_Role;
  end;

// *********************************************************************//
// DispIntf:  IUMLConnectorEndDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51938E6A-A23A-42E5-AA6E-32C2EDAC8F0A}
// *********************************************************************//
  IUMLConnectorEndDisp = dispinterface
    ['{51938E6A-A23A-42E5-AA6E-32C2EDAC8F0A}']
    property Multiplicity: WideString dispid 1792;
    property IsOrdered: WordBool dispid 1793;
    property IsUnique: WordBool dispid 1794;
    property Connector: IUMLConnector dispid 1795;
    property Role: IUMLFeature dispid 1796;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLConnector
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {799E6EAD-6DF3-4EE1-A92F-0B28B552EB41}
// *********************************************************************//
  IUMLConnector = interface(IUMLFeature)
    ['{799E6EAD-6DF3-4EE1-A92F-0B28B552EB41}']
    procedure AddEnd(const Value: IUMLConnectorEnd); safecall;
    procedure RemoveEnd(const Value: IUMLConnectorEnd); safecall;
    procedure InsertEnd(Index: Integer; const Value: IUMLConnectorEnd); safecall;
    procedure DeleteEnd(Index: Integer); safecall;
    function IndexOfEnd(const Value: IUMLConnectorEnd): Integer; safecall;
    function GetEndCount: Integer; safecall;
    function GetEndAt(Index: Integer): IUMLConnectorEnd; safecall;
    function Get_Owner: IUMLClassifier; safecall;
    procedure Set_Owner(const Value: IUMLClassifier); safecall;
    property Owner: IUMLClassifier read Get_Owner write Set_Owner;
  end;

// *********************************************************************//
// DispIntf:  IUMLConnectorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {799E6EAD-6DF3-4EE1-A92F-0B28B552EB41}
// *********************************************************************//
  IUMLConnectorDisp = dispinterface
    ['{799E6EAD-6DF3-4EE1-A92F-0B28B552EB41}']
    procedure AddEnd(const Value: IUMLConnectorEnd); dispid 2048;
    procedure RemoveEnd(const Value: IUMLConnectorEnd); dispid 2049;
    procedure InsertEnd(Index: Integer; const Value: IUMLConnectorEnd); dispid 2050;
    procedure DeleteEnd(Index: Integer); dispid 2051;
    function IndexOfEnd(const Value: IUMLConnectorEnd): Integer; dispid 2052;
    function GetEndCount: Integer; dispid 2053;
    function GetEndAt(Index: Integer): IUMLConnectorEnd; dispid 2054;
    property Owner: IUMLClassifier dispid 2055;
    property OwnerScope: UMLScopeKind dispid 1792;
    procedure AddConnectorEnd(const Value: IUMLConnectorEnd); dispid 1793;
    procedure RemoveConnectorEnd(const Value: IUMLConnectorEnd); dispid 1794;
    procedure InsertConnectorEnd(Index: Integer; const Value: IUMLConnectorEnd); dispid 1795;
    procedure DeleteConnectorEnd(Index: Integer); dispid 1796;
    function IndexOfConnectorEnd(const Value: IUMLConnectorEnd): Integer; dispid 1797;
    function GetConnectorEndCount: Integer; dispid 1798;
    function GetConnectorEndAt(Index: Integer): IUMLConnectorEnd; dispid 1799;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 1800;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 1801;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1802;
    procedure DeleteClassifierRole(Index: Integer); dispid 1803;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 1804;
    function GetClassifierRoleCount: Integer; dispid 1805;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLClassifierRole
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B1A4605A-72AF-4CBB-A5DD-B8517FA42560}
// *********************************************************************//
  IUMLClassifierRole = interface(IUMLClassifier)
    ['{B1A4605A-72AF-4CBB-A5DD-B8517FA42560}']
    function Get_Multiplicity: WideString; safecall;
    procedure Set_Multiplicity(const Value: WideString); safecall;
    function Get_Base: IUMLClassifier; safecall;
    procedure Set_Base(const Value: IUMLClassifier); safecall;
    procedure AddAvailableFeature(const Value: IUMLFeature); safecall;
    procedure RemoveAvailableFeature(const Value: IUMLFeature); safecall;
    procedure InsertAvailableFeature(Index: Integer; const Value: IUMLFeature); safecall;
    procedure DeleteAvailableFeature(Index: Integer); safecall;
    function IndexOfAvailableFeature(const Value: IUMLFeature): Integer; safecall;
    function GetAvailableFeatureCount: Integer; safecall;
    function GetAvailableFeatureAt(Index: Integer): IUMLFeature; safecall;
    procedure AddSenderClientMessage(const Value: IUMLMessage); safecall;
    procedure RemoveSenderClientMessage(const Value: IUMLMessage); safecall;
    procedure InsertSenderClientMessage(Index: Integer; const Value: IUMLMessage); safecall;
    procedure DeleteSenderClientMessage(Index: Integer); safecall;
    function IndexOfSenderClientMessage(const Value: IUMLMessage): Integer; safecall;
    function GetSenderClientMessageCount: Integer; safecall;
    function GetSenderClientMessageAt(Index: Integer): IUMLMessage; safecall;
    procedure AddReceiverClientMessage(const Value: IUMLMessage); safecall;
    procedure RemoveReceiverClientMessage(const Value: IUMLMessage); safecall;
    procedure InsertReceiverClientMessage(Index: Integer; const Value: IUMLMessage); safecall;
    procedure DeleteReceiverClientMessage(Index: Integer); safecall;
    function IndexOfReceiverClientMessage(const Value: IUMLMessage): Integer; safecall;
    function GetReceiverClientMessageCount: Integer; safecall;
    function GetReceiverClientMessageAt(Index: Integer): IUMLMessage; safecall;
    procedure AddAvailableContent(const Value: IUMLModelElement); safecall;
    procedure RemoveAvailableContent(const Value: IUMLModelElement); safecall;
    procedure InsertAvailableContent(Index: Integer; const Value: IUMLModelElement); safecall;
    procedure DeleteAvailableContent(Index: Integer); safecall;
    function IndexOfAvailableContent(const Value: IUMLModelElement): Integer; safecall;
    function GetAvailableContentCount: Integer; safecall;
    function GetAvailableContentAt(Index: Integer): IUMLModelElement; safecall;
    procedure AddConformingInstance(const Value: IUMLInstance); safecall;
    procedure RemoveConformingInstance(const Value: IUMLInstance); safecall;
    procedure InsertConformingInstance(Index: Integer; const Value: IUMLInstance); safecall;
    procedure DeleteConformingInstance(Index: Integer); safecall;
    function IndexOfConformingInstance(const Value: IUMLInstance): Integer; safecall;
    function GetConformingInstanceCount: Integer; safecall;
    function GetConformingInstanceAt(Index: Integer): IUMLInstance; safecall;
    property Multiplicity: WideString read Get_Multiplicity write Set_Multiplicity;
    property Base: IUMLClassifier read Get_Base write Set_Base;
  end;

// *********************************************************************//
// DispIntf:  IUMLClassifierRoleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B1A4605A-72AF-4CBB-A5DD-B8517FA42560}
// *********************************************************************//
  IUMLClassifierRoleDisp = dispinterface
    ['{B1A4605A-72AF-4CBB-A5DD-B8517FA42560}']
    property Multiplicity: WideString dispid 2560;
    property Base: IUMLClassifier dispid 2561;
    procedure AddAvailableFeature(const Value: IUMLFeature); dispid 2562;
    procedure RemoveAvailableFeature(const Value: IUMLFeature); dispid 2563;
    procedure InsertAvailableFeature(Index: Integer; const Value: IUMLFeature); dispid 2564;
    procedure DeleteAvailableFeature(Index: Integer); dispid 2565;
    function IndexOfAvailableFeature(const Value: IUMLFeature): Integer; dispid 2566;
    function GetAvailableFeatureCount: Integer; dispid 2567;
    function GetAvailableFeatureAt(Index: Integer): IUMLFeature; dispid 2568;
    procedure AddSenderClientMessage(const Value: IUMLMessage); dispid 2569;
    procedure RemoveSenderClientMessage(const Value: IUMLMessage); dispid 2570;
    procedure InsertSenderClientMessage(Index: Integer; const Value: IUMLMessage); dispid 2571;
    procedure DeleteSenderClientMessage(Index: Integer); dispid 2572;
    function IndexOfSenderClientMessage(const Value: IUMLMessage): Integer; dispid 2573;
    function GetSenderClientMessageCount: Integer; dispid 2574;
    function GetSenderClientMessageAt(Index: Integer): IUMLMessage; dispid 2575;
    procedure AddReceiverClientMessage(const Value: IUMLMessage); dispid 2576;
    procedure RemoveReceiverClientMessage(const Value: IUMLMessage); dispid 2577;
    procedure InsertReceiverClientMessage(Index: Integer; const Value: IUMLMessage); dispid 2578;
    procedure DeleteReceiverClientMessage(Index: Integer); dispid 2579;
    function IndexOfReceiverClientMessage(const Value: IUMLMessage): Integer; dispid 2580;
    function GetReceiverClientMessageCount: Integer; dispid 2581;
    function GetReceiverClientMessageAt(Index: Integer): IUMLMessage; dispid 2582;
    procedure AddAvailableContent(const Value: IUMLModelElement); dispid 2583;
    procedure RemoveAvailableContent(const Value: IUMLModelElement); dispid 2584;
    procedure InsertAvailableContent(Index: Integer; const Value: IUMLModelElement); dispid 2585;
    procedure DeleteAvailableContent(Index: Integer); dispid 2586;
    function IndexOfAvailableContent(const Value: IUMLModelElement): Integer; dispid 2587;
    function GetAvailableContentCount: Integer; dispid 2588;
    function GetAvailableContentAt(Index: Integer): IUMLModelElement; dispid 2589;
    procedure AddConformingInstance(const Value: IUMLInstance); dispid 2590;
    procedure RemoveConformingInstance(const Value: IUMLInstance); dispid 2591;
    procedure InsertConformingInstance(Index: Integer; const Value: IUMLInstance); dispid 2592;
    procedure DeleteConformingInstance(Index: Integer); dispid 2593;
    function IndexOfConformingInstance(const Value: IUMLInstance): Integer; dispid 2594;
    function GetConformingInstanceCount: Integer; dispid 2595;
    function GetConformingInstanceAt(Index: Integer): IUMLInstance; dispid 2596;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLMessage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14DE8C71-8C26-4529-8A8B-A73C739EB17A}
// *********************************************************************//
  IUMLMessage = interface(IUMLModelElement)
    ['{14DE8C71-8C26-4529-8A8B-A73C739EB17A}']
    function Get_Arguments: WideString; safecall;
    procedure Set_Arguments(const Value: WideString); safecall;
    function Get_Return: WideString; safecall;
    procedure Set_Return(const Value: WideString); safecall;
    function Get_Iteration: WideString; safecall;
    procedure Set_Iteration(const Value: WideString); safecall;
    function Get_Branch: WideString; safecall;
    procedure Set_Branch(const Value: WideString); safecall;
    function Get_Interaction: IUMLInteraction; safecall;
    function Get_Activator: IUMLMessage; safecall;
    procedure Set_Activator(const Value: IUMLMessage); safecall;
    procedure AddActivatee(const Value: IUMLMessage); safecall;
    procedure RemoveActivatee(const Value: IUMLMessage); safecall;
    procedure InsertActivatee(Index: Integer; const Value: IUMLMessage); safecall;
    procedure DeleteActivatee(Index: Integer); safecall;
    function IndexOfActivatee(const Value: IUMLMessage): Integer; safecall;
    function GetActivateeCount: Integer; safecall;
    function GetActivateeAt(Index: Integer): IUMLMessage; safecall;
    function Get_Sender: IUMLClassifierRole; safecall;
    procedure Set_Sender(const Value: IUMLClassifierRole); safecall;
    function Get_Receiver: IUMLClassifierRole; safecall;
    procedure Set_Receiver(const Value: IUMLClassifierRole); safecall;
    function Get_Successor: IUMLMessage; safecall;
    procedure Set_Successor(const Value: IUMLMessage); safecall;
    function Get_Predecessor: IUMLMessage; safecall;
    procedure Set_Predecessor(const Value: IUMLMessage); safecall;
    function Get_CommunicationConnection: IUMLAssociationRole; safecall;
    procedure Set_CommunicationConnection(const Value: IUMLAssociationRole); safecall;
    function Get_Action: IUMLAction; safecall;
    procedure AddConformingStimulus(const Value: IUMLStimulus); safecall;
    procedure RemoveConformingStimulus(const Value: IUMLStimulus); safecall;
    procedure InsertConformingStimulus(Index: Integer; const Value: IUMLStimulus); safecall;
    procedure DeleteConformingStimulus(Index: Integer); safecall;
    function IndexOfConformingStimulus(const Value: IUMLStimulus): Integer; safecall;
    function GetConformingStimulusCount: Integer; safecall;
    function GetConformingStimulusAt(Index: Integer): IUMLStimulus; safecall;
    property Arguments: WideString read Get_Arguments write Set_Arguments;
    property Return: WideString read Get_Return write Set_Return;
    property Iteration: WideString read Get_Iteration write Set_Iteration;
    property Branch: WideString read Get_Branch write Set_Branch;
    property Interaction: IUMLInteraction read Get_Interaction;
    property Activator: IUMLMessage read Get_Activator write Set_Activator;
    property Sender: IUMLClassifierRole read Get_Sender write Set_Sender;
    property Receiver: IUMLClassifierRole read Get_Receiver write Set_Receiver;
    property Successor: IUMLMessage read Get_Successor write Set_Successor;
    property Predecessor: IUMLMessage read Get_Predecessor write Set_Predecessor;
    property CommunicationConnection: IUMLAssociationRole read Get_CommunicationConnection write Set_CommunicationConnection;
    property Action: IUMLAction read Get_Action;
  end;

// *********************************************************************//
// DispIntf:  IUMLMessageDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {14DE8C71-8C26-4529-8A8B-A73C739EB17A}
// *********************************************************************//
  IUMLMessageDisp = dispinterface
    ['{14DE8C71-8C26-4529-8A8B-A73C739EB17A}']
    property Arguments: WideString dispid 1792;
    property Return: WideString dispid 1793;
    property Iteration: WideString dispid 1794;
    property Branch: WideString dispid 1795;
    property Interaction: IUMLInteraction readonly dispid 1796;
    property Activator: IUMLMessage dispid 1797;
    procedure AddActivatee(const Value: IUMLMessage); dispid 1798;
    procedure RemoveActivatee(const Value: IUMLMessage); dispid 1799;
    procedure InsertActivatee(Index: Integer; const Value: IUMLMessage); dispid 1800;
    procedure DeleteActivatee(Index: Integer); dispid 1801;
    function IndexOfActivatee(const Value: IUMLMessage): Integer; dispid 1802;
    function GetActivateeCount: Integer; dispid 1803;
    function GetActivateeAt(Index: Integer): IUMLMessage; dispid 1804;
    property Sender: IUMLClassifierRole dispid 1805;
    property Receiver: IUMLClassifierRole dispid 1806;
    property Successor: IUMLMessage dispid 1807;
    property Predecessor: IUMLMessage dispid 1808;
    property CommunicationConnection: IUMLAssociationRole dispid 1809;
    property Action: IUMLAction readonly dispid 1810;
    procedure AddConformingStimulus(const Value: IUMLStimulus); dispid 1811;
    procedure RemoveConformingStimulus(const Value: IUMLStimulus); dispid 1812;
    procedure InsertConformingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1813;
    procedure DeleteConformingStimulus(Index: Integer); dispid 1814;
    function IndexOfConformingStimulus(const Value: IUMLStimulus): Integer; dispid 1815;
    function GetConformingStimulusCount: Integer; dispid 1816;
    function GetConformingStimulusAt(Index: Integer): IUMLStimulus; dispid 1817;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLInteraction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E4ADFE54-34DF-493A-BC01-4F1E231102E5}
// *********************************************************************//
  IUMLInteraction = interface(IUMLModelElement)
    ['{E4ADFE54-34DF-493A-BC01-4F1E231102E5}']
    function GetMessageCount: Integer; safecall;
    function GetMessageAt(Index: Integer): IUMLMessage; safecall;
    function Get_Context: IUMLCollaboration; safecall;
    procedure AddInteractionInstanceSet(const Value: IUMLInteractionInstanceSet); safecall;
    procedure RemoveInteractionInstanceSet(const Value: IUMLInteractionInstanceSet); safecall;
    procedure InsertInteractionInstanceSet(Index: Integer; const Value: IUMLInteractionInstanceSet); safecall;
    procedure DeleteInteractionInstanceSet(Index: Integer); safecall;
    function IndexOfInteractionInstanceSet(const Value: IUMLInteractionInstanceSet): Integer; safecall;
    function GetInteractionInstanceSetCount: Integer; safecall;
    function GetInteractionInstanceSetAt(Index: Integer): IUMLInteractionInstanceSet; safecall;
    procedure AddFragment(const Value: IUMLInteractionFragment); safecall;
    procedure RemoveFragment(const Value: IUMLInteractionFragment); safecall;
    procedure InsertFragment(Index: Integer; const Value: IUMLInteractionFragment); safecall;
    procedure DeleteFragment(Index: Integer); safecall;
    function IndexOfFragment(const Value: IUMLInteractionFragment): Integer; safecall;
    function GetFragmentCount: Integer; safecall;
    function GetFragmentAt(Index: Integer): IUMLInteractionFragment; safecall;
    property Context: IUMLCollaboration read Get_Context;
  end;

// *********************************************************************//
// DispIntf:  IUMLInteractionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E4ADFE54-34DF-493A-BC01-4F1E231102E5}
// *********************************************************************//
  IUMLInteractionDisp = dispinterface
    ['{E4ADFE54-34DF-493A-BC01-4F1E231102E5}']
    function GetMessageCount: Integer; dispid 1792;
    function GetMessageAt(Index: Integer): IUMLMessage; dispid 1793;
    property Context: IUMLCollaboration readonly dispid 1794;
    procedure AddInteractionInstanceSet(const Value: IUMLInteractionInstanceSet); dispid 1795;
    procedure RemoveInteractionInstanceSet(const Value: IUMLInteractionInstanceSet); dispid 1796;
    procedure InsertInteractionInstanceSet(Index: Integer; const Value: IUMLInteractionInstanceSet); dispid 1797;
    procedure DeleteInteractionInstanceSet(Index: Integer); dispid 1798;
    function IndexOfInteractionInstanceSet(const Value: IUMLInteractionInstanceSet): Integer; dispid 1799;
    function GetInteractionInstanceSetCount: Integer; dispid 1800;
    function GetInteractionInstanceSetAt(Index: Integer): IUMLInteractionInstanceSet; dispid 1801;
    procedure AddFragment(const Value: IUMLInteractionFragment); dispid 1802;
    procedure RemoveFragment(const Value: IUMLInteractionFragment); dispid 1803;
    procedure InsertFragment(Index: Integer; const Value: IUMLInteractionFragment); dispid 1804;
    procedure DeleteFragment(Index: Integer); dispid 1805;
    function IndexOfFragment(const Value: IUMLInteractionFragment): Integer; dispid 1806;
    function GetFragmentCount: Integer; dispid 1807;
    function GetFragmentAt(Index: Integer): IUMLInteractionFragment; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCollaboration
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0C21B09-C5CB-4458-AD3C-F02A374885AC}
// *********************************************************************//
  IUMLCollaboration = interface(IUMLNamespace)
    ['{C0C21B09-C5CB-4458-AD3C-F02A374885AC}']
    function GetInteractionCount: Integer; safecall;
    function GetInteractionAt(Index: Integer): IUMLInteraction; safecall;
    function Get_RepresentedOperation: IUMLOperation; safecall;
    procedure AddCollaborationInstanceSet(const Value: IUMLCollaborationInstanceSet); safecall;
    procedure RemoveCollaborationInstanceSet(const Value: IUMLCollaborationInstanceSet); safecall;
    procedure InsertCollaborationInstanceSet(Index: Integer; 
                                             const Value: IUMLCollaborationInstanceSet); safecall;
    procedure DeleteCollaborationInstanceSet(Index: Integer); safecall;
    function IndexOfCollaborationInstanceSet(const Value: IUMLCollaborationInstanceSet): Integer; safecall;
    function GetCollaborationInstanceSetCount: Integer; safecall;
    function GetCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; safecall;
    procedure AddUserCollaboration(const Value: IUMLCollaboration); safecall;
    procedure RemoveUserCollaboration(const Value: IUMLCollaboration); safecall;
    procedure InsertUserCollaboration(Index: Integer; const Value: IUMLCollaboration); safecall;
    procedure DeleteUserCollaboration(Index: Integer); safecall;
    function IndexOfUserCollaboration(const Value: IUMLCollaboration): Integer; safecall;
    function GetUserCollaborationCount: Integer; safecall;
    function GetUserCollaborationAt(Index: Integer): IUMLCollaboration; safecall;
    procedure AddUsedCollaboration(const Value: IUMLCollaboration); safecall;
    procedure RemoveUsedCollaboration(const Value: IUMLCollaboration); safecall;
    procedure InsertUsedCollaboration(Index: Integer; const Value: IUMLCollaboration); safecall;
    procedure DeleteUsedCollaboration(Index: Integer); safecall;
    function IndexOfUsedCollaboration(const Value: IUMLCollaboration): Integer; safecall;
    function GetUsedCollaborationCount: Integer; safecall;
    function GetUsedCollaborationAt(Index: Integer): IUMLCollaboration; safecall;
    function Get_RepresentedClassifier: IUMLClassifier; safecall;
    property RepresentedOperation: IUMLOperation read Get_RepresentedOperation;
    property RepresentedClassifier: IUMLClassifier read Get_RepresentedClassifier;
  end;

// *********************************************************************//
// DispIntf:  IUMLCollaborationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C0C21B09-C5CB-4458-AD3C-F02A374885AC}
// *********************************************************************//
  IUMLCollaborationDisp = dispinterface
    ['{C0C21B09-C5CB-4458-AD3C-F02A374885AC}']
    function GetInteractionCount: Integer; dispid 2304;
    function GetInteractionAt(Index: Integer): IUMLInteraction; dispid 2305;
    property RepresentedOperation: IUMLOperation readonly dispid 2306;
    procedure AddCollaborationInstanceSet(const Value: IUMLCollaborationInstanceSet); dispid 2307;
    procedure RemoveCollaborationInstanceSet(const Value: IUMLCollaborationInstanceSet); dispid 2308;
    procedure InsertCollaborationInstanceSet(Index: Integer; 
                                             const Value: IUMLCollaborationInstanceSet); dispid 2309;
    procedure DeleteCollaborationInstanceSet(Index: Integer); dispid 2310;
    function IndexOfCollaborationInstanceSet(const Value: IUMLCollaborationInstanceSet): Integer; dispid 2311;
    function GetCollaborationInstanceSetCount: Integer; dispid 2312;
    function GetCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2313;
    procedure AddUserCollaboration(const Value: IUMLCollaboration); dispid 2314;
    procedure RemoveUserCollaboration(const Value: IUMLCollaboration); dispid 2315;
    procedure InsertUserCollaboration(Index: Integer; const Value: IUMLCollaboration); dispid 2316;
    procedure DeleteUserCollaboration(Index: Integer); dispid 2317;
    function IndexOfUserCollaboration(const Value: IUMLCollaboration): Integer; dispid 2318;
    function GetUserCollaborationCount: Integer; dispid 2319;
    function GetUserCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2320;
    procedure AddUsedCollaboration(const Value: IUMLCollaboration); dispid 2321;
    procedure RemoveUsedCollaboration(const Value: IUMLCollaboration); dispid 2322;
    procedure InsertUsedCollaboration(Index: Integer; const Value: IUMLCollaboration); dispid 2323;
    procedure DeleteUsedCollaboration(Index: Integer); dispid 2324;
    function IndexOfUsedCollaboration(const Value: IUMLCollaboration): Integer; dispid 2325;
    function GetUsedCollaborationCount: Integer; dispid 2326;
    function GetUsedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2327;
    property RepresentedClassifier: IUMLClassifier readonly dispid 2328;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCollaborationInstanceSet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7674CA41-A8C2-4E4D-A8F8-3020BE68ACAC}
// *********************************************************************//
  IUMLCollaborationInstanceSet = interface(IUMLModelElement)
    ['{7674CA41-A8C2-4E4D-A8F8-3020BE68ACAC}']
    function GetInteractionInstanceSetCount: Integer; safecall;
    function GetInteractionInstanceSetAt(Index: Integer): IUMLInteractionInstanceSet; safecall;
    function Get_Collaboration: IUMLCollaboration; safecall;
    procedure Set_Collaboration(const Value: IUMLCollaboration); safecall;
    function GetParticipatingInstanceCount: Integer; safecall;
    function GetParticipatingInstanceAt(Index: Integer): IUMLInstance; safecall;
    function GetParticipatingLinkCount: Integer; safecall;
    function GetParticipatingLinkAt(Index: Integer): IUMLLink; safecall;
    function Get_RepresentedOperation: IUMLOperation; safecall;
    function Get_RepresentedClassifier: IUMLClassifier; safecall;
    property Collaboration: IUMLCollaboration read Get_Collaboration write Set_Collaboration;
    property RepresentedOperation: IUMLOperation read Get_RepresentedOperation;
    property RepresentedClassifier: IUMLClassifier read Get_RepresentedClassifier;
  end;

// *********************************************************************//
// DispIntf:  IUMLCollaborationInstanceSetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7674CA41-A8C2-4E4D-A8F8-3020BE68ACAC}
// *********************************************************************//
  IUMLCollaborationInstanceSetDisp = dispinterface
    ['{7674CA41-A8C2-4E4D-A8F8-3020BE68ACAC}']
    function GetInteractionInstanceSetCount: Integer; dispid 1792;
    function GetInteractionInstanceSetAt(Index: Integer): IUMLInteractionInstanceSet; dispid 1793;
    property Collaboration: IUMLCollaboration dispid 1794;
    function GetParticipatingInstanceCount: Integer; dispid 1795;
    function GetParticipatingInstanceAt(Index: Integer): IUMLInstance; dispid 1796;
    function GetParticipatingLinkCount: Integer; dispid 1797;
    function GetParticipatingLinkAt(Index: Integer): IUMLLink; dispid 1798;
    property RepresentedOperation: IUMLOperation readonly dispid 1799;
    property RepresentedClassifier: IUMLClassifier readonly dispid 1800;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLInteractionInstanceSet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE60A99D-8959-404E-8DB2-C36F2995BF7D}
// *********************************************************************//
  IUMLInteractionInstanceSet = interface(IUMLModelElement)
    ['{EE60A99D-8959-404E-8DB2-C36F2995BF7D}']
    function Get_Context: IUMLCollaborationInstanceSet; safecall;
    function Get_Interaction: IUMLInteraction; safecall;
    procedure Set_Interaction(const Value: IUMLInteraction); safecall;
    function GetParticipatingStimulusCount: Integer; safecall;
    function GetParticipatingStimulusAt(Index: Integer): IUMLStimulus; safecall;
    procedure AddFragment(const Value: IUMLInteractionFragment); safecall;
    procedure RemoveFragment(const Value: IUMLInteractionFragment); safecall;
    procedure InsertFragment(Index: Integer; const Value: IUMLInteractionFragment); safecall;
    procedure DeleteFragment(Index: Integer); safecall;
    function IndexOfFragment(const Value: IUMLInteractionFragment): Integer; safecall;
    function GetFragmentCount: Integer; safecall;
    function GetFragmentAt(Index: Integer): IUMLInteractionFragment; safecall;
    property Context: IUMLCollaborationInstanceSet read Get_Context;
    property Interaction: IUMLInteraction read Get_Interaction write Set_Interaction;
  end;

// *********************************************************************//
// DispIntf:  IUMLInteractionInstanceSetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EE60A99D-8959-404E-8DB2-C36F2995BF7D}
// *********************************************************************//
  IUMLInteractionInstanceSetDisp = dispinterface
    ['{EE60A99D-8959-404E-8DB2-C36F2995BF7D}']
    property Context: IUMLCollaborationInstanceSet readonly dispid 1792;
    property Interaction: IUMLInteraction dispid 1793;
    function GetParticipatingStimulusCount: Integer; dispid 1794;
    function GetParticipatingStimulusAt(Index: Integer): IUMLStimulus; dispid 1795;
    procedure AddFragment(const Value: IUMLInteractionFragment); dispid 1796;
    procedure RemoveFragment(const Value: IUMLInteractionFragment); dispid 1797;
    procedure InsertFragment(Index: Integer; const Value: IUMLInteractionFragment); dispid 1798;
    procedure DeleteFragment(Index: Integer); dispid 1799;
    function IndexOfFragment(const Value: IUMLInteractionFragment): Integer; dispid 1800;
    function GetFragmentCount: Integer; dispid 1801;
    function GetFragmentAt(Index: Integer): IUMLInteractionFragment; dispid 1802;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLStimulus
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {65D8CC5D-74F5-48AD-86C3-B637DA8957A8}
// *********************************************************************//
  IUMLStimulus = interface(IUMLModelElement)
    ['{65D8CC5D-74F5-48AD-86C3-B637DA8957A8}']
    function Get_Arguments: WideString; safecall;
    procedure Set_Arguments(const Value: WideString); safecall;
    function Get_Return: WideString; safecall;
    procedure Set_Return(const Value: WideString); safecall;
    function Get_Iteration: WideString; safecall;
    procedure Set_Iteration(const Value: WideString); safecall;
    function Get_Branch: WideString; safecall;
    procedure Set_Branch(const Value: WideString); safecall;
    function Get_Sender: IUMLInstance; safecall;
    procedure Set_Sender(const Value: IUMLInstance); safecall;
    function Get_Receiver: IUMLInstance; safecall;
    procedure Set_Receiver(const Value: IUMLInstance); safecall;
    function Get_CommunicationLink: IUMLLink; safecall;
    procedure Set_CommunicationLink(const Value: IUMLLink); safecall;
    function Get_Action: IUMLAction; safecall;
    function Get_Activator: IUMLStimulus; safecall;
    procedure Set_Activator(const Value: IUMLStimulus); safecall;
    procedure AddActivatee(const Value: IUMLStimulus); safecall;
    procedure RemoveActivatee(const Value: IUMLStimulus); safecall;
    procedure InsertActivatee(Index: Integer; const Value: IUMLStimulus); safecall;
    procedure DeleteActivatee(Index: Integer); safecall;
    function IndexOfActivatee(const Value: IUMLStimulus): Integer; safecall;
    function GetActivateeCount: Integer; safecall;
    function GetActivateeAt(Index: Integer): IUMLStimulus; safecall;
    function Get_Predecessor: IUMLStimulus; safecall;
    procedure Set_Predecessor(const Value: IUMLStimulus); safecall;
    function Get_Successor: IUMLStimulus; safecall;
    procedure Set_Successor(const Value: IUMLStimulus); safecall;
    procedure AddPlayedRole(const Value: IUMLMessage); safecall;
    procedure RemovePlayedRole(const Value: IUMLMessage); safecall;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLMessage); safecall;
    procedure DeletePlayedRole(Index: Integer); safecall;
    function IndexOfPlayedRole(const Value: IUMLMessage): Integer; safecall;
    function GetPlayedRoleCount: Integer; safecall;
    function GetPlayedRoleAt(Index: Integer): IUMLMessage; safecall;
    function Get_InteractionInstanceSet: IUMLInteractionInstanceSet; safecall;
    property Arguments: WideString read Get_Arguments write Set_Arguments;
    property Return: WideString read Get_Return write Set_Return;
    property Iteration: WideString read Get_Iteration write Set_Iteration;
    property Branch: WideString read Get_Branch write Set_Branch;
    property Sender: IUMLInstance read Get_Sender write Set_Sender;
    property Receiver: IUMLInstance read Get_Receiver write Set_Receiver;
    property CommunicationLink: IUMLLink read Get_CommunicationLink write Set_CommunicationLink;
    property Action: IUMLAction read Get_Action;
    property Activator: IUMLStimulus read Get_Activator write Set_Activator;
    property Predecessor: IUMLStimulus read Get_Predecessor write Set_Predecessor;
    property Successor: IUMLStimulus read Get_Successor write Set_Successor;
    property InteractionInstanceSet: IUMLInteractionInstanceSet read Get_InteractionInstanceSet;
  end;

// *********************************************************************//
// DispIntf:  IUMLStimulusDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {65D8CC5D-74F5-48AD-86C3-B637DA8957A8}
// *********************************************************************//
  IUMLStimulusDisp = dispinterface
    ['{65D8CC5D-74F5-48AD-86C3-B637DA8957A8}']
    property Arguments: WideString dispid 1792;
    property Return: WideString dispid 1793;
    property Iteration: WideString dispid 1794;
    property Branch: WideString dispid 1795;
    property Sender: IUMLInstance dispid 1796;
    property Receiver: IUMLInstance dispid 1797;
    property CommunicationLink: IUMLLink dispid 1798;
    property Action: IUMLAction readonly dispid 1799;
    property Activator: IUMLStimulus dispid 1800;
    procedure AddActivatee(const Value: IUMLStimulus); dispid 1801;
    procedure RemoveActivatee(const Value: IUMLStimulus); dispid 1802;
    procedure InsertActivatee(Index: Integer; const Value: IUMLStimulus); dispid 1803;
    procedure DeleteActivatee(Index: Integer); dispid 1804;
    function IndexOfActivatee(const Value: IUMLStimulus): Integer; dispid 1805;
    function GetActivateeCount: Integer; dispid 1806;
    function GetActivateeAt(Index: Integer): IUMLStimulus; dispid 1807;
    property Predecessor: IUMLStimulus dispid 1808;
    property Successor: IUMLStimulus dispid 1809;
    procedure AddPlayedRole(const Value: IUMLMessage); dispid 1810;
    procedure RemovePlayedRole(const Value: IUMLMessage); dispid 1811;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLMessage); dispid 1812;
    procedure DeletePlayedRole(Index: Integer); dispid 1813;
    function IndexOfPlayedRole(const Value: IUMLMessage): Integer; dispid 1814;
    function GetPlayedRoleCount: Integer; dispid 1815;
    function GetPlayedRoleAt(Index: Integer): IUMLMessage; dispid 1816;
    property InteractionInstanceSet: IUMLInteractionInstanceSet readonly dispid 1817;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLInstance
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1580EAFB-7216-4225-850F-4D541E26E51E}
// *********************************************************************//
  IUMLInstance = interface(IUMLModelElement)
    ['{1580EAFB-7216-4225-850F-4D541E26E51E}']
    function Get_IsMultiInstance: WordBool; safecall;
    procedure Set_IsMultiInstance(Value: WordBool); safecall;
    function Get_Classifier: IUMLClassifier; safecall;
    procedure Set_Classifier(const Value: IUMLClassifier); safecall;
    procedure AddAttributeLink(const Value: IUMLAttributeLink); safecall;
    procedure RemoveAttributeLink(const Value: IUMLAttributeLink); safecall;
    procedure InsertAttributeLink(Index: Integer; const Value: IUMLAttributeLink); safecall;
    procedure DeleteAttributeLink(Index: Integer); safecall;
    function IndexOfAttributeLink(const Value: IUMLAttributeLink): Integer; safecall;
    function GetAttributeLinkCount: Integer; safecall;
    function GetAttributeLinkAt(Index: Integer): IUMLAttributeLink; safecall;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); safecall;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); safecall;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); safecall;
    procedure DeleteLinkEnd(Index: Integer); safecall;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; safecall;
    function GetLinkEndCount: Integer; safecall;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; safecall;
    function GetSlotCount: Integer; safecall;
    function GetSlotAt(Index: Integer): IUMLAttributeLink; safecall;
    procedure AddSendingStimulus(const Value: IUMLStimulus); safecall;
    procedure RemoveSendingStimulus(const Value: IUMLStimulus); safecall;
    procedure InsertSendingStimulus(Index: Integer; const Value: IUMLStimulus); safecall;
    procedure DeleteSendingStimulus(Index: Integer); safecall;
    function IndexOfSendingStimulus(const Value: IUMLStimulus): Integer; safecall;
    function GetSendingStimulusCount: Integer; safecall;
    function GetSendingStimulusAt(Index: Integer): IUMLStimulus; safecall;
    function Get_ComponentInstance: IUMLComponentInstance; safecall;
    procedure Set_ComponentInstance(const Value: IUMLComponentInstance); safecall;
    procedure AddReceivingStimulus(const Value: IUMLStimulus); safecall;
    procedure RemoveReceivingStimulus(const Value: IUMLStimulus); safecall;
    procedure InsertReceivingStimulus(Index: Integer; const Value: IUMLStimulus); safecall;
    procedure DeleteReceivingStimulus(Index: Integer); safecall;
    function IndexOfReceivingStimulus(const Value: IUMLStimulus): Integer; safecall;
    function GetReceivingStimulusCount: Integer; safecall;
    function GetReceivingStimulusAt(Index: Integer): IUMLStimulus; safecall;
    function Get_Owner: IUMLInstance; safecall;
    function GetOwnedInstanceCount: Integer; safecall;
    function GetOwnedInstanceAt(Index: Integer): IUMLInstance; safecall;
    function GetOwnedLinkCount: Integer; safecall;
    function GetOwnedLinkAt(Index: Integer): IUMLLink; safecall;
    procedure AddPlayedRole(const Value: IUMLClassifierRole); safecall;
    procedure RemovePlayedRole(const Value: IUMLClassifierRole); safecall;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLClassifierRole); safecall;
    procedure DeletePlayedRole(Index: Integer); safecall;
    function IndexOfPlayedRole(const Value: IUMLClassifierRole): Integer; safecall;
    function GetPlayedRoleCount: Integer; safecall;
    function GetPlayedRoleAt(Index: Integer): IUMLClassifierRole; safecall;
    function Get_CollaborationInstanceSet: IUMLCollaborationInstanceSet; safecall;
    property IsMultiInstance: WordBool read Get_IsMultiInstance write Set_IsMultiInstance;
    property Classifier: IUMLClassifier read Get_Classifier write Set_Classifier;
    property ComponentInstance: IUMLComponentInstance read Get_ComponentInstance write Set_ComponentInstance;
    property Owner: IUMLInstance read Get_Owner;
    property CollaborationInstanceSet: IUMLCollaborationInstanceSet read Get_CollaborationInstanceSet;
  end;

// *********************************************************************//
// DispIntf:  IUMLInstanceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1580EAFB-7216-4225-850F-4D541E26E51E}
// *********************************************************************//
  IUMLInstanceDisp = dispinterface
    ['{1580EAFB-7216-4225-850F-4D541E26E51E}']
    property IsMultiInstance: WordBool dispid 1792;
    property Classifier: IUMLClassifier dispid 1793;
    procedure AddAttributeLink(const Value: IUMLAttributeLink); dispid 1794;
    procedure RemoveAttributeLink(const Value: IUMLAttributeLink); dispid 1795;
    procedure InsertAttributeLink(Index: Integer; const Value: IUMLAttributeLink); dispid 1796;
    procedure DeleteAttributeLink(Index: Integer); dispid 1797;
    function IndexOfAttributeLink(const Value: IUMLAttributeLink): Integer; dispid 1798;
    function GetAttributeLinkCount: Integer; dispid 1799;
    function GetAttributeLinkAt(Index: Integer): IUMLAttributeLink; dispid 1800;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); dispid 1801;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); dispid 1802;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); dispid 1803;
    procedure DeleteLinkEnd(Index: Integer); dispid 1804;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; dispid 1805;
    function GetLinkEndCount: Integer; dispid 1806;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; dispid 1807;
    function GetSlotCount: Integer; dispid 1808;
    function GetSlotAt(Index: Integer): IUMLAttributeLink; dispid 1809;
    procedure AddSendingStimulus(const Value: IUMLStimulus); dispid 1810;
    procedure RemoveSendingStimulus(const Value: IUMLStimulus); dispid 1811;
    procedure InsertSendingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1812;
    procedure DeleteSendingStimulus(Index: Integer); dispid 1813;
    function IndexOfSendingStimulus(const Value: IUMLStimulus): Integer; dispid 1814;
    function GetSendingStimulusCount: Integer; dispid 1815;
    function GetSendingStimulusAt(Index: Integer): IUMLStimulus; dispid 1816;
    property ComponentInstance: IUMLComponentInstance dispid 1817;
    procedure AddReceivingStimulus(const Value: IUMLStimulus); dispid 1818;
    procedure RemoveReceivingStimulus(const Value: IUMLStimulus); dispid 1819;
    procedure InsertReceivingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1820;
    procedure DeleteReceivingStimulus(Index: Integer); dispid 1821;
    function IndexOfReceivingStimulus(const Value: IUMLStimulus): Integer; dispid 1822;
    function GetReceivingStimulusCount: Integer; dispid 1823;
    function GetReceivingStimulusAt(Index: Integer): IUMLStimulus; dispid 1824;
    property Owner: IUMLInstance readonly dispid 1825;
    function GetOwnedInstanceCount: Integer; dispid 1826;
    function GetOwnedInstanceAt(Index: Integer): IUMLInstance; dispid 1827;
    function GetOwnedLinkCount: Integer; dispid 1828;
    function GetOwnedLinkAt(Index: Integer): IUMLLink; dispid 1829;
    procedure AddPlayedRole(const Value: IUMLClassifierRole); dispid 1830;
    procedure RemovePlayedRole(const Value: IUMLClassifierRole); dispid 1831;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1832;
    procedure DeletePlayedRole(Index: Integer); dispid 1833;
    function IndexOfPlayedRole(const Value: IUMLClassifierRole): Integer; dispid 1834;
    function GetPlayedRoleCount: Integer; dispid 1835;
    function GetPlayedRoleAt(Index: Integer): IUMLClassifierRole; dispid 1836;
    property CollaborationInstanceSet: IUMLCollaborationInstanceSet readonly dispid 1837;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAttributeLink
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D9A0B25A-8AFC-4859-886A-49E13A141A7D}
// *********************************************************************//
  IUMLAttributeLink = interface(IUMLModelElement)
    ['{D9A0B25A-8AFC-4859-886A-49E13A141A7D}']
    function Get_ValueExpression: WideString; safecall;
    procedure Set_ValueExpression(const Value: WideString); safecall;
    function Get_Attribute: IUMLAttribute; safecall;
    procedure Set_Attribute(const Value: IUMLAttribute); safecall;
    function Get_Value_: IUMLInstance; safecall;
    procedure Set_Value_(const Value: IUMLInstance); safecall;
    function Get_Instance: IUMLInstance; safecall;
    function Get_LinkEnd: IUMLLinkEnd; safecall;
    property ValueExpression: WideString read Get_ValueExpression write Set_ValueExpression;
    property Attribute: IUMLAttribute read Get_Attribute write Set_Attribute;
    property Value_: IUMLInstance read Get_Value_ write Set_Value_;
    property Instance: IUMLInstance read Get_Instance;
    property LinkEnd: IUMLLinkEnd read Get_LinkEnd;
  end;

// *********************************************************************//
// DispIntf:  IUMLAttributeLinkDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D9A0B25A-8AFC-4859-886A-49E13A141A7D}
// *********************************************************************//
  IUMLAttributeLinkDisp = dispinterface
    ['{D9A0B25A-8AFC-4859-886A-49E13A141A7D}']
    property ValueExpression: WideString dispid 1792;
    property Attribute: IUMLAttribute dispid 1793;
    property Value_: IUMLInstance dispid 1794;
    property Instance: IUMLInstance readonly dispid 1795;
    property LinkEnd: IUMLLinkEnd readonly dispid 1796;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLStructuralFeature
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B1583DC-5828-478E-B858-C29B8C757C73}
// *********************************************************************//
  IUMLStructuralFeature = interface(IUMLFeature)
    ['{7B1583DC-5828-478E-B858-C29B8C757C73}']
    function Get_Multiplicity: WideString; safecall;
    procedure Set_Multiplicity(const Value: WideString); safecall;
    function Get_Changeability: UMLChangeableKind; safecall;
    procedure Set_Changeability(Value: UMLChangeableKind); safecall;
    function Get_TargetScope: UMLScopeKind; safecall;
    procedure Set_TargetScope(Value: UMLScopeKind); safecall;
    function Get_Ordering: UMLOrderingKind; safecall;
    procedure Set_Ordering(Value: UMLOrderingKind); safecall;
    function Get_TypeExpression: WideString; safecall;
    procedure Set_TypeExpression(const Value: WideString); safecall;
    function Get_Type_: IUMLClassifier; safecall;
    procedure Set_Type_(const Value: IUMLClassifier); safecall;
    procedure SetType(const Value: IUMLClassifier); safecall;
    procedure SetType2(const Value: WideString); safecall;
    property Multiplicity: WideString read Get_Multiplicity write Set_Multiplicity;
    property Changeability: UMLChangeableKind read Get_Changeability write Set_Changeability;
    property TargetScope: UMLScopeKind read Get_TargetScope write Set_TargetScope;
    property Ordering: UMLOrderingKind read Get_Ordering write Set_Ordering;
    property TypeExpression: WideString read Get_TypeExpression write Set_TypeExpression;
    property Type_: IUMLClassifier read Get_Type_ write Set_Type_;
  end;

// *********************************************************************//
// DispIntf:  IUMLStructuralFeatureDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7B1583DC-5828-478E-B858-C29B8C757C73}
// *********************************************************************//
  IUMLStructuralFeatureDisp = dispinterface
    ['{7B1583DC-5828-478E-B858-C29B8C757C73}']
    property Multiplicity: WideString dispid 2048;
    property Changeability: UMLChangeableKind dispid 2049;
    property TargetScope: UMLScopeKind dispid 2050;
    property Ordering: UMLOrderingKind dispid 2051;
    property TypeExpression: WideString dispid 2052;
    property Type_: IUMLClassifier dispid 2053;
    procedure SetType(const Value: IUMLClassifier); dispid 2054;
    procedure SetType2(const Value: WideString); dispid 2055;
    property OwnerScope: UMLScopeKind dispid 1792;
    procedure AddConnectorEnd(const Value: IUMLConnectorEnd); dispid 1793;
    procedure RemoveConnectorEnd(const Value: IUMLConnectorEnd); dispid 1794;
    procedure InsertConnectorEnd(Index: Integer; const Value: IUMLConnectorEnd); dispid 1795;
    procedure DeleteConnectorEnd(Index: Integer); dispid 1796;
    function IndexOfConnectorEnd(const Value: IUMLConnectorEnd): Integer; dispid 1797;
    function GetConnectorEndCount: Integer; dispid 1798;
    function GetConnectorEndAt(Index: Integer): IUMLConnectorEnd; dispid 1799;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 1800;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 1801;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1802;
    procedure DeleteClassifierRole(Index: Integer); dispid 1803;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 1804;
    function GetClassifierRoleCount: Integer; dispid 1805;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAttribute
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {643383DF-A403-4302-9E25-7C87345BFC15}
// *********************************************************************//
  IUMLAttribute = interface(IUMLStructuralFeature)
    ['{643383DF-A403-4302-9E25-7C87345BFC15}']
    function Get_InitialValue: WideString; safecall;
    procedure Set_InitialValue(const Value: WideString); safecall;
    function Get_AssociationEnd: IUMLAssociationEnd; safecall;
    function Get_Owner: IUMLClassifier; safecall;
    procedure AddAttributeLink(const Value: IUMLAttributeLink); safecall;
    procedure RemoveAttributeLink(const Value: IUMLAttributeLink); safecall;
    procedure InsertAttributeLink(Index: Integer; const Value: IUMLAttributeLink); safecall;
    procedure DeleteAttributeLink(Index: Integer); safecall;
    function IndexOfAttributeLink(const Value: IUMLAttributeLink): Integer; safecall;
    function GetAttributeLinkCount: Integer; safecall;
    function GetAttributeLinkAt(Index: Integer): IUMLAttributeLink; safecall;
    procedure AddAssociationEndRole(const Value: IUMLAssociationEndRole); safecall;
    procedure RemoveAssociationEndRole(const Value: IUMLAssociationEndRole); safecall;
    procedure InsertAssociationEndRole(Index: Integer; const Value: IUMLAssociationEndRole); safecall;
    procedure DeleteAssociationEndRole(Index: Integer); safecall;
    function IndexOfAssociationEndRole(const Value: IUMLAssociationEndRole): Integer; safecall;
    function GetAssociationEndRoleCount: Integer; safecall;
    function GetAssociationEndRoleAt(Index: Integer): IUMLAssociationEndRole; safecall;
    property InitialValue: WideString read Get_InitialValue write Set_InitialValue;
    property AssociationEnd: IUMLAssociationEnd read Get_AssociationEnd;
    property Owner: IUMLClassifier read Get_Owner;
  end;

// *********************************************************************//
// DispIntf:  IUMLAttributeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {643383DF-A403-4302-9E25-7C87345BFC15}
// *********************************************************************//
  IUMLAttributeDisp = dispinterface
    ['{643383DF-A403-4302-9E25-7C87345BFC15}']
    property InitialValue: WideString dispid 2304;
    property AssociationEnd: IUMLAssociationEnd readonly dispid 2305;
    property Owner: IUMLClassifier readonly dispid 2306;
    procedure AddAttributeLink(const Value: IUMLAttributeLink); dispid 2307;
    procedure RemoveAttributeLink(const Value: IUMLAttributeLink); dispid 2308;
    procedure InsertAttributeLink(Index: Integer; const Value: IUMLAttributeLink); dispid 2309;
    procedure DeleteAttributeLink(Index: Integer); dispid 2310;
    function IndexOfAttributeLink(const Value: IUMLAttributeLink): Integer; dispid 2311;
    function GetAttributeLinkCount: Integer; dispid 2312;
    function GetAttributeLinkAt(Index: Integer): IUMLAttributeLink; dispid 2313;
    procedure AddAssociationEndRole(const Value: IUMLAssociationEndRole); dispid 2314;
    procedure RemoveAssociationEndRole(const Value: IUMLAssociationEndRole); dispid 2315;
    procedure InsertAssociationEndRole(Index: Integer; const Value: IUMLAssociationEndRole); dispid 2316;
    procedure DeleteAssociationEndRole(Index: Integer); dispid 2317;
    function IndexOfAssociationEndRole(const Value: IUMLAssociationEndRole): Integer; dispid 2318;
    function GetAssociationEndRoleCount: Integer; dispid 2319;
    function GetAssociationEndRoleAt(Index: Integer): IUMLAssociationEndRole; dispid 2320;
    property Multiplicity: WideString dispid 2048;
    property Changeability: UMLChangeableKind dispid 2049;
    property TargetScope: UMLScopeKind dispid 2050;
    property Ordering: UMLOrderingKind dispid 2051;
    property TypeExpression: WideString dispid 2052;
    property Type_: IUMLClassifier dispid 2053;
    procedure SetType(const Value: IUMLClassifier); dispid 2054;
    procedure SetType2(const Value: WideString); dispid 2055;
    property OwnerScope: UMLScopeKind dispid 1792;
    procedure AddConnectorEnd(const Value: IUMLConnectorEnd); dispid 1793;
    procedure RemoveConnectorEnd(const Value: IUMLConnectorEnd); dispid 1794;
    procedure InsertConnectorEnd(Index: Integer; const Value: IUMLConnectorEnd); dispid 1795;
    procedure DeleteConnectorEnd(Index: Integer); dispid 1796;
    function IndexOfConnectorEnd(const Value: IUMLConnectorEnd): Integer; dispid 1797;
    function GetConnectorEndCount: Integer; dispid 1798;
    function GetConnectorEndAt(Index: Integer): IUMLConnectorEnd; dispid 1799;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 1800;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 1801;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1802;
    procedure DeleteClassifierRole(Index: Integer); dispid 1803;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 1804;
    function GetClassifierRoleCount: Integer; dispid 1805;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAssociationEnd
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E8DD247-A056-4E45-93DD-A7C6B690FDDE}
// *********************************************************************//
  IUMLAssociationEnd = interface(IUMLModelElement)
    ['{4E8DD247-A056-4E45-93DD-A7C6B690FDDE}']
    function Get_IsNavigable: WordBool; safecall;
    procedure Set_IsNavigable(Value: WordBool); safecall;
    function Get_Ordering: UMLOrderingKind; safecall;
    procedure Set_Ordering(Value: UMLOrderingKind); safecall;
    function Get_Aggregation: UMLAggregationKind; safecall;
    procedure Set_Aggregation(Value: UMLAggregationKind); safecall;
    function Get_TargetScope: UMLScopeKind; safecall;
    procedure Set_TargetScope(Value: UMLScopeKind); safecall;
    function Get_Multiplicity: WideString; safecall;
    procedure Set_Multiplicity(const Value: WideString); safecall;
    function Get_Changeability: UMLChangeableKind; safecall;
    procedure Set_Changeability(Value: UMLChangeableKind); safecall;
    function Get_Association: IUMLAssociation; safecall;
    function GetQualifierCount: Integer; safecall;
    function GetQualifierAt(Index: Integer): IUMLAttribute; safecall;
    function Get_Participant: IUMLClassifier; safecall;
    procedure Set_Participant(const Value: IUMLClassifier); safecall;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); safecall;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); safecall;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); safecall;
    procedure DeleteLinkEnd(Index: Integer); safecall;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; safecall;
    function GetLinkEndCount: Integer; safecall;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; safecall;
    procedure AddAssociationEndRole(const Value: IUMLAssociationEndRole); safecall;
    procedure RemoveAssociationEndRole(const Value: IUMLAssociationEndRole); safecall;
    procedure InsertAssociationEndRole(Index: Integer; const Value: IUMLAssociationEndRole); safecall;
    procedure DeleteAssociationEndRole(Index: Integer); safecall;
    function IndexOfAssociationEndRole(const Value: IUMLAssociationEndRole): Integer; safecall;
    function GetAssociationEndRoleCount: Integer; safecall;
    function GetAssociationEndRoleAt(Index: Integer): IUMLAssociationEndRole; safecall;
    function GetOtherSide: IUMLAssociationEnd; safecall;
    property IsNavigable: WordBool read Get_IsNavigable write Set_IsNavigable;
    property Ordering: UMLOrderingKind read Get_Ordering write Set_Ordering;
    property Aggregation: UMLAggregationKind read Get_Aggregation write Set_Aggregation;
    property TargetScope: UMLScopeKind read Get_TargetScope write Set_TargetScope;
    property Multiplicity: WideString read Get_Multiplicity write Set_Multiplicity;
    property Changeability: UMLChangeableKind read Get_Changeability write Set_Changeability;
    property Association: IUMLAssociation read Get_Association;
    property Participant: IUMLClassifier read Get_Participant write Set_Participant;
  end;

// *********************************************************************//
// DispIntf:  IUMLAssociationEndDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4E8DD247-A056-4E45-93DD-A7C6B690FDDE}
// *********************************************************************//
  IUMLAssociationEndDisp = dispinterface
    ['{4E8DD247-A056-4E45-93DD-A7C6B690FDDE}']
    property IsNavigable: WordBool dispid 1792;
    property Ordering: UMLOrderingKind dispid 1793;
    property Aggregation: UMLAggregationKind dispid 1794;
    property TargetScope: UMLScopeKind dispid 1795;
    property Multiplicity: WideString dispid 1796;
    property Changeability: UMLChangeableKind dispid 1797;
    property Association: IUMLAssociation readonly dispid 1798;
    function GetQualifierCount: Integer; dispid 1799;
    function GetQualifierAt(Index: Integer): IUMLAttribute; dispid 1800;
    property Participant: IUMLClassifier dispid 1801;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); dispid 1802;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); dispid 1803;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); dispid 1804;
    procedure DeleteLinkEnd(Index: Integer); dispid 1805;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; dispid 1806;
    function GetLinkEndCount: Integer; dispid 1807;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; dispid 1808;
    procedure AddAssociationEndRole(const Value: IUMLAssociationEndRole); dispid 1809;
    procedure RemoveAssociationEndRole(const Value: IUMLAssociationEndRole); dispid 1810;
    procedure InsertAssociationEndRole(Index: Integer; const Value: IUMLAssociationEndRole); dispid 1811;
    procedure DeleteAssociationEndRole(Index: Integer); dispid 1812;
    function IndexOfAssociationEndRole(const Value: IUMLAssociationEndRole): Integer; dispid 1813;
    function GetAssociationEndRoleCount: Integer; dispid 1814;
    function GetAssociationEndRoleAt(Index: Integer): IUMLAssociationEndRole; dispid 1815;
    function GetOtherSide: IUMLAssociationEnd; dispid 1816;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLRelationship
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {773D89C5-95B9-462F-90AF-664034D5FE6B}
// *********************************************************************//
  IUMLRelationship = interface(IUMLModelElement)
    ['{773D89C5-95B9-462F-90AF-664034D5FE6B}']
  end;

// *********************************************************************//
// DispIntf:  IUMLRelationshipDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {773D89C5-95B9-462F-90AF-664034D5FE6B}
// *********************************************************************//
  IUMLRelationshipDisp = dispinterface
    ['{773D89C5-95B9-462F-90AF-664034D5FE6B}']
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAssociation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C03687D2-3FAA-410A-BD9D-9EB885B27DC3}
// *********************************************************************//
  IUMLAssociation = interface(IUMLRelationship)
    ['{C03687D2-3FAA-410A-BD9D-9EB885B27DC3}']
    function GetConnectionCount: Integer; safecall;
    function GetConnectionAt(Index: Integer): IUMLAssociationEnd; safecall;
    function Get_AssociationClass: IUMLAssociationClass; safecall;
    procedure Set_AssociationClass(const Value: IUMLAssociationClass); safecall;
    procedure AddLink(const Value: IUMLLink); safecall;
    procedure RemoveLink(const Value: IUMLLink); safecall;
    procedure InsertLink(Index: Integer; const Value: IUMLLink); safecall;
    procedure DeleteLink(Index: Integer); safecall;
    function IndexOfLink(const Value: IUMLLink): Integer; safecall;
    function GetLinkCount: Integer; safecall;
    function GetLinkAt(Index: Integer): IUMLLink; safecall;
    procedure AddAssociationRole(const Value: IUMLAssociationRole); safecall;
    procedure RemoveAssociationRole(const Value: IUMLAssociationRole); safecall;
    procedure InsertAssociationRole(Index: Integer; const Value: IUMLAssociationRole); safecall;
    procedure DeleteAssociationRole(Index: Integer); safecall;
    function IndexOfAssociationRole(const Value: IUMLAssociationRole): Integer; safecall;
    function GetAssociationRoleCount: Integer; safecall;
    function GetAssociationRoleAt(Index: Integer): IUMLAssociationRole; safecall;
    property AssociationClass: IUMLAssociationClass read Get_AssociationClass write Set_AssociationClass;
  end;

// *********************************************************************//
// DispIntf:  IUMLAssociationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C03687D2-3FAA-410A-BD9D-9EB885B27DC3}
// *********************************************************************//
  IUMLAssociationDisp = dispinterface
    ['{C03687D2-3FAA-410A-BD9D-9EB885B27DC3}']
    function GetConnectionCount: Integer; dispid 2048;
    function GetConnectionAt(Index: Integer): IUMLAssociationEnd; dispid 2049;
    property AssociationClass: IUMLAssociationClass dispid 2050;
    procedure AddLink(const Value: IUMLLink); dispid 2051;
    procedure RemoveLink(const Value: IUMLLink); dispid 2052;
    procedure InsertLink(Index: Integer; const Value: IUMLLink); dispid 2053;
    procedure DeleteLink(Index: Integer); dispid 2054;
    function IndexOfLink(const Value: IUMLLink): Integer; dispid 2055;
    function GetLinkCount: Integer; dispid 2056;
    function GetLinkAt(Index: Integer): IUMLLink; dispid 2057;
    procedure AddAssociationRole(const Value: IUMLAssociationRole); dispid 2058;
    procedure RemoveAssociationRole(const Value: IUMLAssociationRole); dispid 2059;
    procedure InsertAssociationRole(Index: Integer; const Value: IUMLAssociationRole); dispid 2060;
    procedure DeleteAssociationRole(Index: Integer); dispid 2061;
    function IndexOfAssociationRole(const Value: IUMLAssociationRole): Integer; dispid 2062;
    function GetAssociationRoleCount: Integer; dispid 2063;
    function GetAssociationRoleAt(Index: Integer): IUMLAssociationRole; dispid 2064;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAssociationClass
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB772E46-B35C-4DAA-B63D-FD941ED2A45A}
// *********************************************************************//
  IUMLAssociationClass = interface(IUMLModelElement)
    ['{DB772E46-B35C-4DAA-B63D-FD941ED2A45A}']
    function Get_ClassSide: IUMLClass; safecall;
    procedure Set_ClassSide(const Value: IUMLClass); safecall;
    function Get_AssociationSide: IUMLAssociation; safecall;
    procedure Set_AssociationSide(const Value: IUMLAssociation); safecall;
    property ClassSide: IUMLClass read Get_ClassSide write Set_ClassSide;
    property AssociationSide: IUMLAssociation read Get_AssociationSide write Set_AssociationSide;
  end;

// *********************************************************************//
// DispIntf:  IUMLAssociationClassDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DB772E46-B35C-4DAA-B63D-FD941ED2A45A}
// *********************************************************************//
  IUMLAssociationClassDisp = dispinterface
    ['{DB772E46-B35C-4DAA-B63D-FD941ED2A45A}']
    property ClassSide: IUMLClass dispid 1792;
    property AssociationSide: IUMLAssociation dispid 1793;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLClass
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {431370B2-5084-4DF9-A195-A45B140CA708}
// *********************************************************************//
  IUMLClass = interface(IUMLClassifier)
    ['{431370B2-5084-4DF9-A195-A45B140CA708}']
    function Get_IsActive: WordBool; safecall;
    procedure Set_IsActive(Value: WordBool); safecall;
    function Get_AssociationClass: IUMLAssociationClass; safecall;
    procedure Set_AssociationClass(const Value: IUMLAssociationClass); safecall;
    property IsActive: WordBool read Get_IsActive write Set_IsActive;
    property AssociationClass: IUMLAssociationClass read Get_AssociationClass write Set_AssociationClass;
  end;

// *********************************************************************//
// DispIntf:  IUMLClassDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {431370B2-5084-4DF9-A195-A45B140CA708}
// *********************************************************************//
  IUMLClassDisp = dispinterface
    ['{431370B2-5084-4DF9-A195-A45B140CA708}']
    property IsActive: WordBool dispid 2560;
    property AssociationClass: IUMLAssociationClass dispid 2561;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLLink
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9136547D-454B-4D41-9C19-EDBC5EB125B9}
// *********************************************************************//
  IUMLLink = interface(IUMLModelElement)
    ['{9136547D-454B-4D41-9C19-EDBC5EB125B9}']
    function Get_Association: IUMLAssociation; safecall;
    procedure Set_Association(const Value: IUMLAssociation); safecall;
    function GetConnectionCount: Integer; safecall;
    function GetConnectionAt(Index: Integer): IUMLLinkEnd; safecall;
    procedure AddStimulus(const Value: IUMLStimulus); safecall;
    procedure RemoveStimulus(const Value: IUMLStimulus); safecall;
    procedure InsertStimulus(Index: Integer; const Value: IUMLStimulus); safecall;
    procedure DeleteStimulus(Index: Integer); safecall;
    function IndexOfStimulus(const Value: IUMLStimulus): Integer; safecall;
    function GetStimulusCount: Integer; safecall;
    function GetStimulusAt(Index: Integer): IUMLStimulus; safecall;
    function Get_Owner: IUMLInstance; safecall;
    function Get_LinkObject: IUMLLinkObject; safecall;
    procedure Set_LinkObject(const Value: IUMLLinkObject); safecall;
    procedure AddPlayedRole(const Value: IUMLAssociationRole); safecall;
    procedure RemovePlayedRole(const Value: IUMLAssociationRole); safecall;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLAssociationRole); safecall;
    procedure DeletePlayedRole(Index: Integer); safecall;
    function IndexOfPlayedRole(const Value: IUMLAssociationRole): Integer; safecall;
    function GetPlayedRoleCount: Integer; safecall;
    function GetPlayedRoleAt(Index: Integer): IUMLAssociationRole; safecall;
    function Get_CollaborationInstanceSet: IUMLCollaborationInstanceSet; safecall;
    property Association: IUMLAssociation read Get_Association write Set_Association;
    property Owner: IUMLInstance read Get_Owner;
    property LinkObject: IUMLLinkObject read Get_LinkObject write Set_LinkObject;
    property CollaborationInstanceSet: IUMLCollaborationInstanceSet read Get_CollaborationInstanceSet;
  end;

// *********************************************************************//
// DispIntf:  IUMLLinkDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9136547D-454B-4D41-9C19-EDBC5EB125B9}
// *********************************************************************//
  IUMLLinkDisp = dispinterface
    ['{9136547D-454B-4D41-9C19-EDBC5EB125B9}']
    property Association: IUMLAssociation dispid 1792;
    function GetConnectionCount: Integer; dispid 1793;
    function GetConnectionAt(Index: Integer): IUMLLinkEnd; dispid 1794;
    procedure AddStimulus(const Value: IUMLStimulus); dispid 1795;
    procedure RemoveStimulus(const Value: IUMLStimulus); dispid 1796;
    procedure InsertStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1797;
    procedure DeleteStimulus(Index: Integer); dispid 1798;
    function IndexOfStimulus(const Value: IUMLStimulus): Integer; dispid 1799;
    function GetStimulusCount: Integer; dispid 1800;
    function GetStimulusAt(Index: Integer): IUMLStimulus; dispid 1801;
    property Owner: IUMLInstance readonly dispid 1802;
    property LinkObject: IUMLLinkObject dispid 1803;
    procedure AddPlayedRole(const Value: IUMLAssociationRole); dispid 1804;
    procedure RemovePlayedRole(const Value: IUMLAssociationRole); dispid 1805;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLAssociationRole); dispid 1806;
    procedure DeletePlayedRole(Index: Integer); dispid 1807;
    function IndexOfPlayedRole(const Value: IUMLAssociationRole): Integer; dispid 1808;
    function GetPlayedRoleCount: Integer; dispid 1809;
    function GetPlayedRoleAt(Index: Integer): IUMLAssociationRole; dispid 1810;
    property CollaborationInstanceSet: IUMLCollaborationInstanceSet readonly dispid 1811;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLLinkEnd
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BCC69267-5D2C-4D7D-8179-C7836838B9F4}
// *********************************************************************//
  IUMLLinkEnd = interface(IUMLModelElement)
    ['{BCC69267-5D2C-4D7D-8179-C7836838B9F4}']
    function Get_Instance: IUMLInstance; safecall;
    procedure Set_Instance(const Value: IUMLInstance); safecall;
    function Get_Link: IUMLLink; safecall;
    function Get_AssociationEnd: IUMLAssociationEnd; safecall;
    procedure Set_AssociationEnd(const Value: IUMLAssociationEnd); safecall;
    function GetQualifiedValueCount: Integer; safecall;
    function GetQualifiedValueAt(Index: Integer): IUMLAttributeLink; safecall;
    function GetOtherSide: IUMLLinkEnd; safecall;
    property Instance: IUMLInstance read Get_Instance write Set_Instance;
    property Link: IUMLLink read Get_Link;
    property AssociationEnd: IUMLAssociationEnd read Get_AssociationEnd write Set_AssociationEnd;
  end;

// *********************************************************************//
// DispIntf:  IUMLLinkEndDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BCC69267-5D2C-4D7D-8179-C7836838B9F4}
// *********************************************************************//
  IUMLLinkEndDisp = dispinterface
    ['{BCC69267-5D2C-4D7D-8179-C7836838B9F4}']
    property Instance: IUMLInstance dispid 1792;
    property Link: IUMLLink readonly dispid 1793;
    property AssociationEnd: IUMLAssociationEnd dispid 1794;
    function GetQualifiedValueCount: Integer; dispid 1795;
    function GetQualifiedValueAt(Index: Integer): IUMLAttributeLink; dispid 1796;
    function GetOtherSide: IUMLLinkEnd; dispid 1797;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLLinkObject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51AE8518-0614-4110-9642-0A37B514A033}
// *********************************************************************//
  IUMLLinkObject = interface(IUMLModelElement)
    ['{51AE8518-0614-4110-9642-0A37B514A033}']
    function Get_LinkSide: IUMLLink; safecall;
    procedure Set_LinkSide(const Value: IUMLLink); safecall;
    function Get_ObjectSide: IUMLObject; safecall;
    procedure Set_ObjectSide(const Value: IUMLObject); safecall;
    property LinkSide: IUMLLink read Get_LinkSide write Set_LinkSide;
    property ObjectSide: IUMLObject read Get_ObjectSide write Set_ObjectSide;
  end;

// *********************************************************************//
// DispIntf:  IUMLLinkObjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51AE8518-0614-4110-9642-0A37B514A033}
// *********************************************************************//
  IUMLLinkObjectDisp = dispinterface
    ['{51AE8518-0614-4110-9642-0A37B514A033}']
    property LinkSide: IUMLLink dispid 1792;
    property ObjectSide: IUMLObject dispid 1793;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLObject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7CB0F94B-B944-4E35-85EF-AFDD1EB501D2}
// *********************************************************************//
  IUMLObject = interface(IUMLInstance)
    ['{7CB0F94B-B944-4E35-85EF-AFDD1EB501D2}']
    function Get_LinkObject: IUMLLinkObject; safecall;
    procedure Set_LinkObject(const Value: IUMLLinkObject); safecall;
    property LinkObject: IUMLLinkObject read Get_LinkObject write Set_LinkObject;
  end;

// *********************************************************************//
// DispIntf:  IUMLObjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7CB0F94B-B944-4E35-85EF-AFDD1EB501D2}
// *********************************************************************//
  IUMLObjectDisp = dispinterface
    ['{7CB0F94B-B944-4E35-85EF-AFDD1EB501D2}']
    property LinkObject: IUMLLinkObject dispid 2048;
    property IsMultiInstance: WordBool dispid 1792;
    property Classifier: IUMLClassifier dispid 1793;
    procedure AddAttributeLink(const Value: IUMLAttributeLink); dispid 1794;
    procedure RemoveAttributeLink(const Value: IUMLAttributeLink); dispid 1795;
    procedure InsertAttributeLink(Index: Integer; const Value: IUMLAttributeLink); dispid 1796;
    procedure DeleteAttributeLink(Index: Integer); dispid 1797;
    function IndexOfAttributeLink(const Value: IUMLAttributeLink): Integer; dispid 1798;
    function GetAttributeLinkCount: Integer; dispid 1799;
    function GetAttributeLinkAt(Index: Integer): IUMLAttributeLink; dispid 1800;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); dispid 1801;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); dispid 1802;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); dispid 1803;
    procedure DeleteLinkEnd(Index: Integer); dispid 1804;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; dispid 1805;
    function GetLinkEndCount: Integer; dispid 1806;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; dispid 1807;
    function GetSlotCount: Integer; dispid 1808;
    function GetSlotAt(Index: Integer): IUMLAttributeLink; dispid 1809;
    procedure AddSendingStimulus(const Value: IUMLStimulus); dispid 1810;
    procedure RemoveSendingStimulus(const Value: IUMLStimulus); dispid 1811;
    procedure InsertSendingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1812;
    procedure DeleteSendingStimulus(Index: Integer); dispid 1813;
    function IndexOfSendingStimulus(const Value: IUMLStimulus): Integer; dispid 1814;
    function GetSendingStimulusCount: Integer; dispid 1815;
    function GetSendingStimulusAt(Index: Integer): IUMLStimulus; dispid 1816;
    property ComponentInstance: IUMLComponentInstance dispid 1817;
    procedure AddReceivingStimulus(const Value: IUMLStimulus); dispid 1818;
    procedure RemoveReceivingStimulus(const Value: IUMLStimulus); dispid 1819;
    procedure InsertReceivingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1820;
    procedure DeleteReceivingStimulus(Index: Integer); dispid 1821;
    function IndexOfReceivingStimulus(const Value: IUMLStimulus): Integer; dispid 1822;
    function GetReceivingStimulusCount: Integer; dispid 1823;
    function GetReceivingStimulusAt(Index: Integer): IUMLStimulus; dispid 1824;
    property Owner: IUMLInstance readonly dispid 1825;
    function GetOwnedInstanceCount: Integer; dispid 1826;
    function GetOwnedInstanceAt(Index: Integer): IUMLInstance; dispid 1827;
    function GetOwnedLinkCount: Integer; dispid 1828;
    function GetOwnedLinkAt(Index: Integer): IUMLLink; dispid 1829;
    procedure AddPlayedRole(const Value: IUMLClassifierRole); dispid 1830;
    procedure RemovePlayedRole(const Value: IUMLClassifierRole); dispid 1831;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1832;
    procedure DeletePlayedRole(Index: Integer); dispid 1833;
    function IndexOfPlayedRole(const Value: IUMLClassifierRole): Integer; dispid 1834;
    function GetPlayedRoleCount: Integer; dispid 1835;
    function GetPlayedRoleAt(Index: Integer): IUMLClassifierRole; dispid 1836;
    property CollaborationInstanceSet: IUMLCollaborationInstanceSet readonly dispid 1837;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAssociationRole
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A832AAB4-48F6-4FC8-965C-9919092F14AB}
// *********************************************************************//
  IUMLAssociationRole = interface(IUMLAssociation)
    ['{A832AAB4-48F6-4FC8-965C-9919092F14AB}']
    function Get_Multiplicity: WideString; safecall;
    procedure Set_Multiplicity(const Value: WideString); safecall;
    function Get_Base: IUMLAssociation; safecall;
    procedure Set_Base(const Value: IUMLAssociation); safecall;
    procedure AddMessage(const Value: IUMLMessage); safecall;
    procedure RemoveMessage(const Value: IUMLMessage); safecall;
    procedure InsertMessage(Index: Integer; const Value: IUMLMessage); safecall;
    procedure DeleteMessage(Index: Integer); safecall;
    function IndexOfMessage(const Value: IUMLMessage): Integer; safecall;
    function GetMessageCount: Integer; safecall;
    function GetMessageAt(Index: Integer): IUMLMessage; safecall;
    procedure AddConformingLink(const Value: IUMLLink); safecall;
    procedure RemoveConformingLink(const Value: IUMLLink); safecall;
    procedure InsertConformingLink(Index: Integer; const Value: IUMLLink); safecall;
    procedure DeleteConformingLink(Index: Integer); safecall;
    function IndexOfConformingLink(const Value: IUMLLink): Integer; safecall;
    function GetConformingLinkCount: Integer; safecall;
    function GetConformingLinkAt(Index: Integer): IUMLLink; safecall;
    property Multiplicity: WideString read Get_Multiplicity write Set_Multiplicity;
    property Base: IUMLAssociation read Get_Base write Set_Base;
  end;

// *********************************************************************//
// DispIntf:  IUMLAssociationRoleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A832AAB4-48F6-4FC8-965C-9919092F14AB}
// *********************************************************************//
  IUMLAssociationRoleDisp = dispinterface
    ['{A832AAB4-48F6-4FC8-965C-9919092F14AB}']
    property Multiplicity: WideString dispid 2304;
    property Base: IUMLAssociation dispid 2305;
    procedure AddMessage(const Value: IUMLMessage); dispid 2306;
    procedure RemoveMessage(const Value: IUMLMessage); dispid 2307;
    procedure InsertMessage(Index: Integer; const Value: IUMLMessage); dispid 2308;
    procedure DeleteMessage(Index: Integer); dispid 2309;
    function IndexOfMessage(const Value: IUMLMessage): Integer; dispid 2310;
    function GetMessageCount: Integer; dispid 2311;
    function GetMessageAt(Index: Integer): IUMLMessage; dispid 2312;
    procedure AddConformingLink(const Value: IUMLLink); dispid 2313;
    procedure RemoveConformingLink(const Value: IUMLLink); dispid 2314;
    procedure InsertConformingLink(Index: Integer; const Value: IUMLLink); dispid 2315;
    procedure DeleteConformingLink(Index: Integer); dispid 2316;
    function IndexOfConformingLink(const Value: IUMLLink): Integer; dispid 2317;
    function GetConformingLinkCount: Integer; dispid 2318;
    function GetConformingLinkAt(Index: Integer): IUMLLink; dispid 2319;
    function GetConnectionCount: Integer; dispid 2048;
    function GetConnectionAt(Index: Integer): IUMLAssociationEnd; dispid 2049;
    property AssociationClass: IUMLAssociationClass dispid 2050;
    procedure AddLink(const Value: IUMLLink); dispid 2051;
    procedure RemoveLink(const Value: IUMLLink); dispid 2052;
    procedure InsertLink(Index: Integer; const Value: IUMLLink); dispid 2053;
    procedure DeleteLink(Index: Integer); dispid 2054;
    function IndexOfLink(const Value: IUMLLink): Integer; dispid 2055;
    function GetLinkCount: Integer; dispid 2056;
    function GetLinkAt(Index: Integer): IUMLLink; dispid 2057;
    procedure AddAssociationRole(const Value: IUMLAssociationRole); dispid 2058;
    procedure RemoveAssociationRole(const Value: IUMLAssociationRole); dispid 2059;
    procedure InsertAssociationRole(Index: Integer; const Value: IUMLAssociationRole); dispid 2060;
    procedure DeleteAssociationRole(Index: Integer); dispid 2061;
    function IndexOfAssociationRole(const Value: IUMLAssociationRole): Integer; dispid 2062;
    function GetAssociationRoleCount: Integer; dispid 2063;
    function GetAssociationRoleAt(Index: Integer): IUMLAssociationRole; dispid 2064;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAssociationEndRole
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46C497C3-8F19-4DEB-8EBA-45E6A6BAF521}
// *********************************************************************//
  IUMLAssociationEndRole = interface(IUMLAssociationEnd)
    ['{46C497C3-8F19-4DEB-8EBA-45E6A6BAF521}']
    function Get_CollaborationMultiplicity: WideString; safecall;
    procedure Set_CollaborationMultiplicity(const Value: WideString); safecall;
    function Get_Base: IUMLAssociationEnd; safecall;
    procedure Set_Base(const Value: IUMLAssociationEnd); safecall;
    procedure AddAvailableQualifier(const Value: IUMLAttribute); safecall;
    procedure RemoveAvailableQualifier(const Value: IUMLAttribute); safecall;
    procedure InsertAvailableQualifier(Index: Integer; const Value: IUMLAttribute); safecall;
    procedure DeleteAvailableQualifier(Index: Integer); safecall;
    function IndexOfAvailableQualifier(const Value: IUMLAttribute): Integer; safecall;
    function GetAvailableQualifierCount: Integer; safecall;
    function GetAvailableQualifierAt(Index: Integer): IUMLAttribute; safecall;
    property CollaborationMultiplicity: WideString read Get_CollaborationMultiplicity write Set_CollaborationMultiplicity;
    property Base: IUMLAssociationEnd read Get_Base write Set_Base;
  end;

// *********************************************************************//
// DispIntf:  IUMLAssociationEndRoleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {46C497C3-8F19-4DEB-8EBA-45E6A6BAF521}
// *********************************************************************//
  IUMLAssociationEndRoleDisp = dispinterface
    ['{46C497C3-8F19-4DEB-8EBA-45E6A6BAF521}']
    property CollaborationMultiplicity: WideString dispid 2048;
    property Base: IUMLAssociationEnd dispid 2049;
    procedure AddAvailableQualifier(const Value: IUMLAttribute); dispid 2050;
    procedure RemoveAvailableQualifier(const Value: IUMLAttribute); dispid 2051;
    procedure InsertAvailableQualifier(Index: Integer; const Value: IUMLAttribute); dispid 2052;
    procedure DeleteAvailableQualifier(Index: Integer); dispid 2053;
    function IndexOfAvailableQualifier(const Value: IUMLAttribute): Integer; dispid 2054;
    function GetAvailableQualifierCount: Integer; dispid 2055;
    function GetAvailableQualifierAt(Index: Integer): IUMLAttribute; dispid 2056;
    property IsNavigable: WordBool dispid 1792;
    property Ordering: UMLOrderingKind dispid 1793;
    property Aggregation: UMLAggregationKind dispid 1794;
    property TargetScope: UMLScopeKind dispid 1795;
    property Multiplicity: WideString dispid 1796;
    property Changeability: UMLChangeableKind dispid 1797;
    property Association: IUMLAssociation readonly dispid 1798;
    function GetQualifierCount: Integer; dispid 1799;
    function GetQualifierAt(Index: Integer): IUMLAttribute; dispid 1800;
    property Participant: IUMLClassifier dispid 1801;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); dispid 1802;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); dispid 1803;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); dispid 1804;
    procedure DeleteLinkEnd(Index: Integer); dispid 1805;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; dispid 1806;
    function GetLinkEndCount: Integer; dispid 1807;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; dispid 1808;
    procedure AddAssociationEndRole(const Value: IUMLAssociationEndRole); dispid 1809;
    procedure RemoveAssociationEndRole(const Value: IUMLAssociationEndRole); dispid 1810;
    procedure InsertAssociationEndRole(Index: Integer; const Value: IUMLAssociationEndRole); dispid 1811;
    procedure DeleteAssociationEndRole(Index: Integer); dispid 1812;
    function IndexOfAssociationEndRole(const Value: IUMLAssociationEndRole): Integer; dispid 1813;
    function GetAssociationEndRoleCount: Integer; dispid 1814;
    function GetAssociationEndRoleAt(Index: Integer): IUMLAssociationEndRole; dispid 1815;
    function GetOtherSide: IUMLAssociationEnd; dispid 1816;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLComponentInstance
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7F78782-5579-496A-8024-97F3F7958176}
// *********************************************************************//
  IUMLComponentInstance = interface(IUMLInstance)
    ['{A7F78782-5579-496A-8024-97F3F7958176}']
    function Get_NodeInstance: IUMLNodeInstance; safecall;
    procedure Set_NodeInstance(const Value: IUMLNodeInstance); safecall;
    procedure AddResident(const Value: IUMLInstance); safecall;
    procedure RemoveResident(const Value: IUMLInstance); safecall;
    procedure InsertResident(Index: Integer; const Value: IUMLInstance); safecall;
    procedure DeleteResident(Index: Integer); safecall;
    function IndexOfResident(const Value: IUMLInstance): Integer; safecall;
    function GetResidentCount: Integer; safecall;
    function GetResidentAt(Index: Integer): IUMLInstance; safecall;
    property NodeInstance: IUMLNodeInstance read Get_NodeInstance write Set_NodeInstance;
  end;

// *********************************************************************//
// DispIntf:  IUMLComponentInstanceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7F78782-5579-496A-8024-97F3F7958176}
// *********************************************************************//
  IUMLComponentInstanceDisp = dispinterface
    ['{A7F78782-5579-496A-8024-97F3F7958176}']
    property NodeInstance: IUMLNodeInstance dispid 2048;
    procedure AddResident(const Value: IUMLInstance); dispid 2049;
    procedure RemoveResident(const Value: IUMLInstance); dispid 2050;
    procedure InsertResident(Index: Integer; const Value: IUMLInstance); dispid 2051;
    procedure DeleteResident(Index: Integer); dispid 2052;
    function IndexOfResident(const Value: IUMLInstance): Integer; dispid 2053;
    function GetResidentCount: Integer; dispid 2054;
    function GetResidentAt(Index: Integer): IUMLInstance; dispid 2055;
    property IsMultiInstance: WordBool dispid 1792;
    property Classifier: IUMLClassifier dispid 1793;
    procedure AddAttributeLink(const Value: IUMLAttributeLink); dispid 1794;
    procedure RemoveAttributeLink(const Value: IUMLAttributeLink); dispid 1795;
    procedure InsertAttributeLink(Index: Integer; const Value: IUMLAttributeLink); dispid 1796;
    procedure DeleteAttributeLink(Index: Integer); dispid 1797;
    function IndexOfAttributeLink(const Value: IUMLAttributeLink): Integer; dispid 1798;
    function GetAttributeLinkCount: Integer; dispid 1799;
    function GetAttributeLinkAt(Index: Integer): IUMLAttributeLink; dispid 1800;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); dispid 1801;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); dispid 1802;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); dispid 1803;
    procedure DeleteLinkEnd(Index: Integer); dispid 1804;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; dispid 1805;
    function GetLinkEndCount: Integer; dispid 1806;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; dispid 1807;
    function GetSlotCount: Integer; dispid 1808;
    function GetSlotAt(Index: Integer): IUMLAttributeLink; dispid 1809;
    procedure AddSendingStimulus(const Value: IUMLStimulus); dispid 1810;
    procedure RemoveSendingStimulus(const Value: IUMLStimulus); dispid 1811;
    procedure InsertSendingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1812;
    procedure DeleteSendingStimulus(Index: Integer); dispid 1813;
    function IndexOfSendingStimulus(const Value: IUMLStimulus): Integer; dispid 1814;
    function GetSendingStimulusCount: Integer; dispid 1815;
    function GetSendingStimulusAt(Index: Integer): IUMLStimulus; dispid 1816;
    property ComponentInstance: IUMLComponentInstance dispid 1817;
    procedure AddReceivingStimulus(const Value: IUMLStimulus); dispid 1818;
    procedure RemoveReceivingStimulus(const Value: IUMLStimulus); dispid 1819;
    procedure InsertReceivingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1820;
    procedure DeleteReceivingStimulus(Index: Integer); dispid 1821;
    function IndexOfReceivingStimulus(const Value: IUMLStimulus): Integer; dispid 1822;
    function GetReceivingStimulusCount: Integer; dispid 1823;
    function GetReceivingStimulusAt(Index: Integer): IUMLStimulus; dispid 1824;
    property Owner: IUMLInstance readonly dispid 1825;
    function GetOwnedInstanceCount: Integer; dispid 1826;
    function GetOwnedInstanceAt(Index: Integer): IUMLInstance; dispid 1827;
    function GetOwnedLinkCount: Integer; dispid 1828;
    function GetOwnedLinkAt(Index: Integer): IUMLLink; dispid 1829;
    procedure AddPlayedRole(const Value: IUMLClassifierRole); dispid 1830;
    procedure RemovePlayedRole(const Value: IUMLClassifierRole); dispid 1831;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1832;
    procedure DeletePlayedRole(Index: Integer); dispid 1833;
    function IndexOfPlayedRole(const Value: IUMLClassifierRole): Integer; dispid 1834;
    function GetPlayedRoleCount: Integer; dispid 1835;
    function GetPlayedRoleAt(Index: Integer): IUMLClassifierRole; dispid 1836;
    property CollaborationInstanceSet: IUMLCollaborationInstanceSet readonly dispid 1837;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLNodeInstance
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B3CF8528-8D11-4099-818C-7C40B71F96B2}
// *********************************************************************//
  IUMLNodeInstance = interface(IUMLInstance)
    ['{B3CF8528-8D11-4099-818C-7C40B71F96B2}']
    procedure AddResident(const Value: IUMLComponentInstance); safecall;
    procedure RemoveResident(const Value: IUMLComponentInstance); safecall;
    procedure InsertResident(Index: Integer; const Value: IUMLComponentInstance); safecall;
    procedure DeleteResident(Index: Integer); safecall;
    function IndexOfResident(const Value: IUMLComponentInstance): Integer; safecall;
    function GetResidentCount: Integer; safecall;
    function GetResidentAt(Index: Integer): IUMLComponentInstance; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLNodeInstanceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B3CF8528-8D11-4099-818C-7C40B71F96B2}
// *********************************************************************//
  IUMLNodeInstanceDisp = dispinterface
    ['{B3CF8528-8D11-4099-818C-7C40B71F96B2}']
    procedure AddResident(const Value: IUMLComponentInstance); dispid 2048;
    procedure RemoveResident(const Value: IUMLComponentInstance); dispid 2049;
    procedure InsertResident(Index: Integer; const Value: IUMLComponentInstance); dispid 2050;
    procedure DeleteResident(Index: Integer); dispid 2051;
    function IndexOfResident(const Value: IUMLComponentInstance): Integer; dispid 2052;
    function GetResidentCount: Integer; dispid 2053;
    function GetResidentAt(Index: Integer): IUMLComponentInstance; dispid 2054;
    property IsMultiInstance: WordBool dispid 1792;
    property Classifier: IUMLClassifier dispid 1793;
    procedure AddAttributeLink(const Value: IUMLAttributeLink); dispid 1794;
    procedure RemoveAttributeLink(const Value: IUMLAttributeLink); dispid 1795;
    procedure InsertAttributeLink(Index: Integer; const Value: IUMLAttributeLink); dispid 1796;
    procedure DeleteAttributeLink(Index: Integer); dispid 1797;
    function IndexOfAttributeLink(const Value: IUMLAttributeLink): Integer; dispid 1798;
    function GetAttributeLinkCount: Integer; dispid 1799;
    function GetAttributeLinkAt(Index: Integer): IUMLAttributeLink; dispid 1800;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); dispid 1801;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); dispid 1802;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); dispid 1803;
    procedure DeleteLinkEnd(Index: Integer); dispid 1804;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; dispid 1805;
    function GetLinkEndCount: Integer; dispid 1806;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; dispid 1807;
    function GetSlotCount: Integer; dispid 1808;
    function GetSlotAt(Index: Integer): IUMLAttributeLink; dispid 1809;
    procedure AddSendingStimulus(const Value: IUMLStimulus); dispid 1810;
    procedure RemoveSendingStimulus(const Value: IUMLStimulus); dispid 1811;
    procedure InsertSendingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1812;
    procedure DeleteSendingStimulus(Index: Integer); dispid 1813;
    function IndexOfSendingStimulus(const Value: IUMLStimulus): Integer; dispid 1814;
    function GetSendingStimulusCount: Integer; dispid 1815;
    function GetSendingStimulusAt(Index: Integer): IUMLStimulus; dispid 1816;
    property ComponentInstance: IUMLComponentInstance dispid 1817;
    procedure AddReceivingStimulus(const Value: IUMLStimulus); dispid 1818;
    procedure RemoveReceivingStimulus(const Value: IUMLStimulus); dispid 1819;
    procedure InsertReceivingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1820;
    procedure DeleteReceivingStimulus(Index: Integer); dispid 1821;
    function IndexOfReceivingStimulus(const Value: IUMLStimulus): Integer; dispid 1822;
    function GetReceivingStimulusCount: Integer; dispid 1823;
    function GetReceivingStimulusAt(Index: Integer): IUMLStimulus; dispid 1824;
    property Owner: IUMLInstance readonly dispid 1825;
    function GetOwnedInstanceCount: Integer; dispid 1826;
    function GetOwnedInstanceAt(Index: Integer): IUMLInstance; dispid 1827;
    function GetOwnedLinkCount: Integer; dispid 1828;
    function GetOwnedLinkAt(Index: Integer): IUMLLink; dispid 1829;
    procedure AddPlayedRole(const Value: IUMLClassifierRole); dispid 1830;
    procedure RemovePlayedRole(const Value: IUMLClassifierRole); dispid 1831;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1832;
    procedure DeletePlayedRole(Index: Integer); dispid 1833;
    function IndexOfPlayedRole(const Value: IUMLClassifierRole): Integer; dispid 1834;
    function GetPlayedRoleCount: Integer; dispid 1835;
    function GetPlayedRoleAt(Index: Integer): IUMLClassifierRole; dispid 1836;
    property CollaborationInstanceSet: IUMLCollaborationInstanceSet readonly dispid 1837;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C6181AF-6079-4AFB-B615-2E46F95BA12D}
// *********************************************************************//
  IUMLAction = interface(IUMLModelElement)
    ['{0C6181AF-6079-4AFB-B615-2E46F95BA12D}']
    function Get_Recurrence: WideString; safecall;
    procedure Set_Recurrence(const Value: WideString); safecall;
    function Get_Target: WideString; safecall;
    procedure Set_Target(const Value: WideString); safecall;
    function Get_IsAsynchronous: WordBool; safecall;
    procedure Set_IsAsynchronous(Value: WordBool); safecall;
    function Get_Script: WideString; safecall;
    procedure Set_Script(const Value: WideString); safecall;
    function GetActualArgumentCount: Integer; safecall;
    function GetActualArgumentAt(Index: Integer): IUMLArgument; safecall;
    function Get_ActionSequence: IUMLActionSequence; safecall;
    function Get_Stimulus: IUMLStimulus; safecall;
    function Get_EntryState: IUMLState; safecall;
    function Get_ExitState: IUMLState; safecall;
    function Get_Transition: IUMLTransition; safecall;
    function Get_DoActivityState: IUMLState; safecall;
    function Get_Message: IUMLMessage; safecall;
    property Recurrence: WideString read Get_Recurrence write Set_Recurrence;
    property Target: WideString read Get_Target write Set_Target;
    property IsAsynchronous: WordBool read Get_IsAsynchronous write Set_IsAsynchronous;
    property Script: WideString read Get_Script write Set_Script;
    property ActionSequence: IUMLActionSequence read Get_ActionSequence;
    property Stimulus: IUMLStimulus read Get_Stimulus;
    property EntryState: IUMLState read Get_EntryState;
    property ExitState: IUMLState read Get_ExitState;
    property Transition: IUMLTransition read Get_Transition;
    property DoActivityState: IUMLState read Get_DoActivityState;
    property Message: IUMLMessage read Get_Message;
  end;

// *********************************************************************//
// DispIntf:  IUMLActionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C6181AF-6079-4AFB-B615-2E46F95BA12D}
// *********************************************************************//
  IUMLActionDisp = dispinterface
    ['{0C6181AF-6079-4AFB-B615-2E46F95BA12D}']
    property Recurrence: WideString dispid 1792;
    property Target: WideString dispid 1793;
    property IsAsynchronous: WordBool dispid 1794;
    property Script: WideString dispid 1795;
    function GetActualArgumentCount: Integer; dispid 1796;
    function GetActualArgumentAt(Index: Integer): IUMLArgument; dispid 1797;
    property ActionSequence: IUMLActionSequence readonly dispid 1798;
    property Stimulus: IUMLStimulus readonly dispid 1799;
    property EntryState: IUMLState readonly dispid 1800;
    property ExitState: IUMLState readonly dispid 1801;
    property Transition: IUMLTransition readonly dispid 1802;
    property DoActivityState: IUMLState readonly dispid 1803;
    property Message: IUMLMessage readonly dispid 1804;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLArgument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {77275B26-6D9A-4CAD-839F-77F9AF3687BE}
// *********************************************************************//
  IUMLArgument = interface(IUMLModelElement)
    ['{77275B26-6D9A-4CAD-839F-77F9AF3687BE}']
    function Get_Value: WideString; safecall;
    procedure Set_Value(const Value: WideString); safecall;
    function Get_Action: IUMLAction; safecall;
    property Value: WideString read Get_Value write Set_Value;
    property Action: IUMLAction read Get_Action;
  end;

// *********************************************************************//
// DispIntf:  IUMLArgumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {77275B26-6D9A-4CAD-839F-77F9AF3687BE}
// *********************************************************************//
  IUMLArgumentDisp = dispinterface
    ['{77275B26-6D9A-4CAD-839F-77F9AF3687BE}']
    property Value: WideString dispid 1792;
    property Action: IUMLAction readonly dispid 1793;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLActionSequence
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ABECC17C-64A1-435D-BB5C-7928B9D1CB27}
// *********************************************************************//
  IUMLActionSequence = interface(IUMLAction)
    ['{ABECC17C-64A1-435D-BB5C-7928B9D1CB27}']
    function GetActionCount: Integer; safecall;
    function GetActionAt(Index: Integer): IUMLAction; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLActionSequenceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ABECC17C-64A1-435D-BB5C-7928B9D1CB27}
// *********************************************************************//
  IUMLActionSequenceDisp = dispinterface
    ['{ABECC17C-64A1-435D-BB5C-7928B9D1CB27}']
    function GetActionCount: Integer; dispid 2048;
    function GetActionAt(Index: Integer): IUMLAction; dispid 2049;
    property Recurrence: WideString dispid 1792;
    property Target: WideString dispid 1793;
    property IsAsynchronous: WordBool dispid 1794;
    property Script: WideString dispid 1795;
    function GetActualArgumentCount: Integer; dispid 1796;
    function GetActualArgumentAt(Index: Integer): IUMLArgument; dispid 1797;
    property ActionSequence: IUMLActionSequence readonly dispid 1798;
    property Stimulus: IUMLStimulus readonly dispid 1799;
    property EntryState: IUMLState readonly dispid 1800;
    property ExitState: IUMLState readonly dispid 1801;
    property Transition: IUMLTransition readonly dispid 1802;
    property DoActivityState: IUMLState readonly dispid 1803;
    property Message: IUMLMessage readonly dispid 1804;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLStateVertex
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20599819-F8BA-4B33-B730-2FDA7C90BA82}
// *********************************************************************//
  IUMLStateVertex = interface(IUMLModelElement)
    ['{20599819-F8BA-4B33-B730-2FDA7C90BA82}']
    function Get_ContainerState: IUMLCompositeState; safecall;
    procedure AddOutgoing(const Value: IUMLTransition); safecall;
    procedure RemoveOutgoing(const Value: IUMLTransition); safecall;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); safecall;
    procedure DeleteOutgoing(Index: Integer); safecall;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; safecall;
    function GetOutgoingCount: Integer; safecall;
    function GetOutgoingAt(Index: Integer): IUMLTransition; safecall;
    procedure AddIncoming(const Value: IUMLTransition); safecall;
    procedure RemoveIncoming(const Value: IUMLTransition); safecall;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); safecall;
    procedure DeleteIncoming(Index: Integer); safecall;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; safecall;
    function GetIncomingCount: Integer; safecall;
    function GetIncomingAt(Index: Integer): IUMLTransition; safecall;
    property ContainerState: IUMLCompositeState read Get_ContainerState;
  end;

// *********************************************************************//
// DispIntf:  IUMLStateVertexDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {20599819-F8BA-4B33-B730-2FDA7C90BA82}
// *********************************************************************//
  IUMLStateVertexDisp = dispinterface
    ['{20599819-F8BA-4B33-B730-2FDA7C90BA82}']
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70E2E0F6-6213-4B92-8403-85C2B42D2A71}
// *********************************************************************//
  IUMLState = interface(IUMLStateVertex)
    ['{70E2E0F6-6213-4B92-8403-85C2B42D2A71}']
    function GetEntryActionCount: Integer; safecall;
    function GetEntryActionAt(Index: Integer): IUMLAction; safecall;
    function GetExitActionCount: Integer; safecall;
    function GetExitActionAt(Index: Integer): IUMLAction; safecall;
    function Get_StateMachine: IUMLStateMachine; safecall;
    procedure AddDeferrableEvent(const Value: IUMLEvent); safecall;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); safecall;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); safecall;
    procedure DeleteDeferrableEvent(Index: Integer); safecall;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; safecall;
    function GetDeferrableEventCount: Integer; safecall;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; safecall;
    function GetInternalTransitionCount: Integer; safecall;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; safecall;
    function GetDoActivityCount: Integer; safecall;
    function GetDoActivityAt(Index: Integer): IUMLAction; safecall;
    procedure AddClassifierState(const Value: IUMLClassifierInState); safecall;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); safecall;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); safecall;
    procedure DeleteClassifierState(Index: Integer); safecall;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; safecall;
    function GetClassifierStateCount: Integer; safecall;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; safecall;
    property StateMachine: IUMLStateMachine read Get_StateMachine;
  end;

// *********************************************************************//
// DispIntf:  IUMLStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70E2E0F6-6213-4B92-8403-85C2B42D2A71}
// *********************************************************************//
  IUMLStateDisp = dispinterface
    ['{70E2E0F6-6213-4B92-8403-85C2B42D2A71}']
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCompositeState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82AE9960-8719-4D2D-97FA-974A2AE989D4}
// *********************************************************************//
  IUMLCompositeState = interface(IUMLState)
    ['{82AE9960-8719-4D2D-97FA-974A2AE989D4}']
    function Get_IsConcurrent: WordBool; safecall;
    procedure Set_IsConcurrent(Value: WordBool); safecall;
    function GetSubvertexCount: Integer; safecall;
    function GetSubvertexAt(Index: Integer): IUMLStateVertex; safecall;
    property IsConcurrent: WordBool read Get_IsConcurrent write Set_IsConcurrent;
  end;

// *********************************************************************//
// DispIntf:  IUMLCompositeStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {82AE9960-8719-4D2D-97FA-974A2AE989D4}
// *********************************************************************//
  IUMLCompositeStateDisp = dispinterface
    ['{82AE9960-8719-4D2D-97FA-974A2AE989D4}']
    property IsConcurrent: WordBool dispid 2304;
    function GetSubvertexCount: Integer; dispid 2305;
    function GetSubvertexAt(Index: Integer): IUMLStateVertex; dispid 2306;
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLTransition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1501F2CE-B231-4FE8-938A-A976E9D35930}
// *********************************************************************//
  IUMLTransition = interface(IUMLModelElement)
    ['{1501F2CE-B231-4FE8-938A-A976E9D35930}']
    function Get_GuardCondition: WideString; safecall;
    procedure Set_GuardCondition(const Value: WideString); safecall;
    function GetEffectCount: Integer; safecall;
    function GetEffectAt(Index: Integer): IUMLAction; safecall;
    function Get_State: IUMLState; safecall;
    function GetTriggerCount: Integer; safecall;
    function GetTriggerAt(Index: Integer): IUMLEvent; safecall;
    function Get_StateMachine: IUMLStateMachine; safecall;
    function Get_Source: IUMLStateVertex; safecall;
    procedure Set_Source(const Value: IUMLStateVertex); safecall;
    function Get_Target: IUMLStateVertex; safecall;
    procedure Set_Target(const Value: IUMLStateVertex); safecall;
    property GuardCondition: WideString read Get_GuardCondition write Set_GuardCondition;
    property State: IUMLState read Get_State;
    property StateMachine: IUMLStateMachine read Get_StateMachine;
    property Source: IUMLStateVertex read Get_Source write Set_Source;
    property Target: IUMLStateVertex read Get_Target write Set_Target;
  end;

// *********************************************************************//
// DispIntf:  IUMLTransitionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1501F2CE-B231-4FE8-938A-A976E9D35930}
// *********************************************************************//
  IUMLTransitionDisp = dispinterface
    ['{1501F2CE-B231-4FE8-938A-A976E9D35930}']
    property GuardCondition: WideString dispid 1792;
    function GetEffectCount: Integer; dispid 1793;
    function GetEffectAt(Index: Integer): IUMLAction; dispid 1794;
    property State: IUMLState readonly dispid 1795;
    function GetTriggerCount: Integer; dispid 1796;
    function GetTriggerAt(Index: Integer): IUMLEvent; dispid 1797;
    property StateMachine: IUMLStateMachine readonly dispid 1798;
    property Source: IUMLStateVertex dispid 1799;
    property Target: IUMLStateVertex dispid 1800;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1380ED56-E228-4758-BC25-4660679BBE38}
// *********************************************************************//
  IUMLEvent = interface(IUMLModelElement)
    ['{1380ED56-E228-4758-BC25-4660679BBE38}']
    function GetParameterCount: Integer; safecall;
    function GetParameterAt(Index: Integer): IUMLParameter; safecall;
    procedure AddState(const Value: IUMLState); safecall;
    procedure RemoveState(const Value: IUMLState); safecall;
    procedure InsertState(Index: Integer; const Value: IUMLState); safecall;
    procedure DeleteState(Index: Integer); safecall;
    function IndexOfState(const Value: IUMLState): Integer; safecall;
    function GetStateCount: Integer; safecall;
    function GetStateAt(Index: Integer): IUMLState; safecall;
    function Get_Transition: IUMLTransition; safecall;
    property Transition: IUMLTransition read Get_Transition;
  end;

// *********************************************************************//
// DispIntf:  IUMLEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1380ED56-E228-4758-BC25-4660679BBE38}
// *********************************************************************//
  IUMLEventDisp = dispinterface
    ['{1380ED56-E228-4758-BC25-4660679BBE38}']
    function GetParameterCount: Integer; dispid 1792;
    function GetParameterAt(Index: Integer): IUMLParameter; dispid 1793;
    procedure AddState(const Value: IUMLState); dispid 1794;
    procedure RemoveState(const Value: IUMLState); dispid 1795;
    procedure InsertState(Index: Integer; const Value: IUMLState); dispid 1796;
    procedure DeleteState(Index: Integer); dispid 1797;
    function IndexOfState(const Value: IUMLState): Integer; dispid 1798;
    function GetStateCount: Integer; dispid 1799;
    function GetStateAt(Index: Integer): IUMLState; dispid 1800;
    property Transition: IUMLTransition readonly dispid 1801;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLParameter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85014DB9-4743-4407-87C8-89A56D8E7950}
// *********************************************************************//
  IUMLParameter = interface(IUMLModelElement)
    ['{85014DB9-4743-4407-87C8-89A56D8E7950}']
    function Get_DefaultValue: WideString; safecall;
    procedure Set_DefaultValue(const Value: WideString); safecall;
    function Get_DirectionKind: UMLParameterDirectionKind; safecall;
    procedure Set_DirectionKind(Value: UMLParameterDirectionKind); safecall;
    function Get_TypeExpression: WideString; safecall;
    procedure Set_TypeExpression(const Value: WideString); safecall;
    function Get_BehavioralFeature: IUMLBehavioralFeature; safecall;
    function Get_Type_: IUMLClassifier; safecall;
    procedure Set_Type_(const Value: IUMLClassifier); safecall;
    function Get_Event: IUMLEvent; safecall;
    procedure AddState(const Value: IUMLObjectFlowState); safecall;
    procedure RemoveState(const Value: IUMLObjectFlowState); safecall;
    procedure InsertState(Index: Integer; const Value: IUMLObjectFlowState); safecall;
    procedure DeleteState(Index: Integer); safecall;
    function IndexOfState(const Value: IUMLObjectFlowState): Integer; safecall;
    function GetStateCount: Integer; safecall;
    function GetStateAt(Index: Integer): IUMLObjectFlowState; safecall;
    procedure SetType(const Value: IUMLClassifier); safecall;
    procedure SetType2(const Value: WideString); safecall;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property DirectionKind: UMLParameterDirectionKind read Get_DirectionKind write Set_DirectionKind;
    property TypeExpression: WideString read Get_TypeExpression write Set_TypeExpression;
    property BehavioralFeature: IUMLBehavioralFeature read Get_BehavioralFeature;
    property Type_: IUMLClassifier read Get_Type_ write Set_Type_;
    property Event: IUMLEvent read Get_Event;
  end;

// *********************************************************************//
// DispIntf:  IUMLParameterDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {85014DB9-4743-4407-87C8-89A56D8E7950}
// *********************************************************************//
  IUMLParameterDisp = dispinterface
    ['{85014DB9-4743-4407-87C8-89A56D8E7950}']
    property DefaultValue: WideString dispid 1792;
    property DirectionKind: UMLParameterDirectionKind dispid 1793;
    property TypeExpression: WideString dispid 1794;
    property BehavioralFeature: IUMLBehavioralFeature readonly dispid 1795;
    property Type_: IUMLClassifier dispid 1796;
    property Event: IUMLEvent readonly dispid 1797;
    procedure AddState(const Value: IUMLObjectFlowState); dispid 1798;
    procedure RemoveState(const Value: IUMLObjectFlowState); dispid 1799;
    procedure InsertState(Index: Integer; const Value: IUMLObjectFlowState); dispid 1800;
    procedure DeleteState(Index: Integer); dispid 1801;
    function IndexOfState(const Value: IUMLObjectFlowState): Integer; dispid 1802;
    function GetStateCount: Integer; dispid 1803;
    function GetStateAt(Index: Integer): IUMLObjectFlowState; dispid 1804;
    procedure SetType(const Value: IUMLClassifier); dispid 1805;
    procedure SetType2(const Value: WideString); dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSimpleState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {255FA2B2-F808-4DE1-9315-A36DBD85B44F}
// *********************************************************************//
  IUMLSimpleState = interface(IUMLState)
    ['{255FA2B2-F808-4DE1-9315-A36DBD85B44F}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSimpleStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {255FA2B2-F808-4DE1-9315-A36DBD85B44F}
// *********************************************************************//
  IUMLSimpleStateDisp = dispinterface
    ['{255FA2B2-F808-4DE1-9315-A36DBD85B44F}']
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLObjectFlowState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4D77BEAB-BB54-4261-8FEE-E2386AC4E40B}
// *********************************************************************//
  IUMLObjectFlowState = interface(IUMLSimpleState)
    ['{4D77BEAB-BB54-4261-8FEE-E2386AC4E40B}']
    function Get_IsSynch: WordBool; safecall;
    procedure Set_IsSynch(Value: WordBool); safecall;
    procedure AddParameter(const Value: IUMLParameter); safecall;
    procedure RemoveParameter(const Value: IUMLParameter); safecall;
    procedure InsertParameter(Index: Integer; const Value: IUMLParameter); safecall;
    procedure DeleteParameter(Index: Integer); safecall;
    function IndexOfParameter(const Value: IUMLParameter): Integer; safecall;
    function GetParameterCount: Integer; safecall;
    function GetParameterAt(Index: Integer): IUMLParameter; safecall;
    function Get_Type_: IUMLClassifier; safecall;
    procedure Set_Type_(const Value: IUMLClassifier); safecall;
    property IsSynch: WordBool read Get_IsSynch write Set_IsSynch;
    property Type_: IUMLClassifier read Get_Type_ write Set_Type_;
  end;

// *********************************************************************//
// DispIntf:  IUMLObjectFlowStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4D77BEAB-BB54-4261-8FEE-E2386AC4E40B}
// *********************************************************************//
  IUMLObjectFlowStateDisp = dispinterface
    ['{4D77BEAB-BB54-4261-8FEE-E2386AC4E40B}']
    property IsSynch: WordBool dispid 2560;
    procedure AddParameter(const Value: IUMLParameter); dispid 2561;
    procedure RemoveParameter(const Value: IUMLParameter); dispid 2562;
    procedure InsertParameter(Index: Integer; const Value: IUMLParameter); dispid 2563;
    procedure DeleteParameter(Index: Integer); dispid 2564;
    function IndexOfParameter(const Value: IUMLParameter): Integer; dispid 2565;
    function GetParameterCount: Integer; dispid 2566;
    function GetParameterAt(Index: Integer): IUMLParameter; dispid 2567;
    property Type_: IUMLClassifier dispid 2568;
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLStateMachine
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A87F363C-03E7-4BCC-B9B5-596CA4A69732}
// *********************************************************************//
  IUMLStateMachine = interface(IUMLModelElement)
    ['{A87F363C-03E7-4BCC-B9B5-596CA4A69732}']
    function Get_Context: IUMLModelElement; safecall;
    function Get_Top: IUMLState; safecall;
    function GetTransitionCount: Integer; safecall;
    function GetTransitionAt(Index: Integer): IUMLTransition; safecall;
    procedure AddSubmachineState(const Value: IUMLSubmachineState); safecall;
    procedure RemoveSubmachineState(const Value: IUMLSubmachineState); safecall;
    procedure InsertSubmachineState(Index: Integer; const Value: IUMLSubmachineState); safecall;
    procedure DeleteSubmachineState(Index: Integer); safecall;
    function IndexOfSubmachineState(const Value: IUMLSubmachineState): Integer; safecall;
    function GetSubmachineStateCount: Integer; safecall;
    function GetSubmachineStateAt(Index: Integer): IUMLSubmachineState; safecall;
    property Context: IUMLModelElement read Get_Context;
    property Top: IUMLState read Get_Top;
  end;

// *********************************************************************//
// DispIntf:  IUMLStateMachineDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A87F363C-03E7-4BCC-B9B5-596CA4A69732}
// *********************************************************************//
  IUMLStateMachineDisp = dispinterface
    ['{A87F363C-03E7-4BCC-B9B5-596CA4A69732}']
    property Context: IUMLModelElement readonly dispid 1792;
    property Top: IUMLState readonly dispid 1793;
    function GetTransitionCount: Integer; dispid 1794;
    function GetTransitionAt(Index: Integer): IUMLTransition; dispid 1795;
    procedure AddSubmachineState(const Value: IUMLSubmachineState); dispid 1796;
    procedure RemoveSubmachineState(const Value: IUMLSubmachineState); dispid 1797;
    procedure InsertSubmachineState(Index: Integer; const Value: IUMLSubmachineState); dispid 1798;
    procedure DeleteSubmachineState(Index: Integer); dispid 1799;
    function IndexOfSubmachineState(const Value: IUMLSubmachineState): Integer; dispid 1800;
    function GetSubmachineStateCount: Integer; dispid 1801;
    function GetSubmachineStateAt(Index: Integer): IUMLSubmachineState; dispid 1802;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSubmachineState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB1395AA-ED84-43B2-A19E-4DA00A7B4EAA}
// *********************************************************************//
  IUMLSubmachineState = interface(IUMLCompositeState)
    ['{EB1395AA-ED84-43B2-A19E-4DA00A7B4EAA}']
    function Get_Submachine: IUMLStateMachine; safecall;
    procedure Set_Submachine(const Value: IUMLStateMachine); safecall;
    property Submachine: IUMLStateMachine read Get_Submachine write Set_Submachine;
  end;

// *********************************************************************//
// DispIntf:  IUMLSubmachineStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EB1395AA-ED84-43B2-A19E-4DA00A7B4EAA}
// *********************************************************************//
  IUMLSubmachineStateDisp = dispinterface
    ['{EB1395AA-ED84-43B2-A19E-4DA00A7B4EAA}']
    property Submachine: IUMLStateMachine dispid 2560;
    property IsConcurrent: WordBool dispid 2304;
    function GetSubvertexCount: Integer; dispid 2305;
    function GetSubvertexAt(Index: Integer): IUMLStateVertex; dispid 2306;
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLClassifierInState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC44B44D-8F14-402C-80DD-0F936DC60BC1}
// *********************************************************************//
  IUMLClassifierInState = interface(IUMLClassifier)
    ['{BC44B44D-8F14-402C-80DD-0F936DC60BC1}']
    function Get_Type_: IUMLClassifier; safecall;
    procedure Set_Type_(const Value: IUMLClassifier); safecall;
    procedure AddInState(const Value: IUMLState); safecall;
    procedure RemoveInState(const Value: IUMLState); safecall;
    procedure InsertInState(Index: Integer; const Value: IUMLState); safecall;
    procedure DeleteInState(Index: Integer); safecall;
    function IndexOfInState(const Value: IUMLState): Integer; safecall;
    function GetInStateCount: Integer; safecall;
    function GetInStateAt(Index: Integer): IUMLState; safecall;
    property Type_: IUMLClassifier read Get_Type_ write Set_Type_;
  end;

// *********************************************************************//
// DispIntf:  IUMLClassifierInStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BC44B44D-8F14-402C-80DD-0F936DC60BC1}
// *********************************************************************//
  IUMLClassifierInStateDisp = dispinterface
    ['{BC44B44D-8F14-402C-80DD-0F936DC60BC1}']
    property Type_: IUMLClassifier dispid 2560;
    procedure AddInState(const Value: IUMLState); dispid 2561;
    procedure RemoveInState(const Value: IUMLState); dispid 2562;
    procedure InsertInState(Index: Integer; const Value: IUMLState); dispid 2563;
    procedure DeleteInState(Index: Integer); dispid 2564;
    function IndexOfInState(const Value: IUMLState): Integer; dispid 2565;
    function GetInStateCount: Integer; dispid 2566;
    function GetInStateAt(Index: Integer): IUMLState; dispid 2567;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLInteractionFragment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7D010090-0FAA-40CF-8395-839767834C77}
// *********************************************************************//
  IUMLInteractionFragment = interface(IUMLModelElement)
    ['{7D010090-0FAA-40CF-8395-839767834C77}']
    function Get_EnclosingOperand: IUMLInteractionOperand; safecall;
    procedure Set_EnclosingOperand(const Value: IUMLInteractionOperand); safecall;
    function Get_EnclosingInteraction: IUMLInteraction; safecall;
    procedure Set_EnclosingInteraction(const Value: IUMLInteraction); safecall;
    function Get_EnclosingInteractionInstanceSet: IUMLInteractionInstanceSet; safecall;
    procedure Set_EnclosingInteractionInstanceSet(const Value: IUMLInteractionInstanceSet); safecall;
    property EnclosingOperand: IUMLInteractionOperand read Get_EnclosingOperand write Set_EnclosingOperand;
    property EnclosingInteraction: IUMLInteraction read Get_EnclosingInteraction write Set_EnclosingInteraction;
    property EnclosingInteractionInstanceSet: IUMLInteractionInstanceSet read Get_EnclosingInteractionInstanceSet write Set_EnclosingInteractionInstanceSet;
  end;

// *********************************************************************//
// DispIntf:  IUMLInteractionFragmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7D010090-0FAA-40CF-8395-839767834C77}
// *********************************************************************//
  IUMLInteractionFragmentDisp = dispinterface
    ['{7D010090-0FAA-40CF-8395-839767834C77}']
    property EnclosingOperand: IUMLInteractionOperand dispid 1792;
    property EnclosingInteraction: IUMLInteraction dispid 1793;
    property EnclosingInteractionInstanceSet: IUMLInteractionInstanceSet dispid 1794;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLInteractionOperand
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {257B3B46-B74E-4316-8298-5902B9181EB5}
// *********************************************************************//
  IUMLInteractionOperand = interface(IUMLInteractionFragment)
    ['{257B3B46-B74E-4316-8298-5902B9181EB5}']
    function Get_Guard: WideString; safecall;
    procedure Set_Guard(const Value: WideString); safecall;
    function Get_CombinedFragment: IUMLCombinedFragment; safecall;
    procedure Set_CombinedFragment(const Value: IUMLCombinedFragment); safecall;
    procedure AddFragment(const Value: IUMLInteractionFragment); safecall;
    procedure RemoveFragment(const Value: IUMLInteractionFragment); safecall;
    procedure InsertFragment(Index: Integer; const Value: IUMLInteractionFragment); safecall;
    procedure DeleteFragment(Index: Integer); safecall;
    function IndexOfFragment(const Value: IUMLInteractionFragment): Integer; safecall;
    function GetFragmentCount: Integer; safecall;
    function GetFragmentAt(Index: Integer): IUMLInteractionFragment; safecall;
    property Guard: WideString read Get_Guard write Set_Guard;
    property CombinedFragment: IUMLCombinedFragment read Get_CombinedFragment write Set_CombinedFragment;
  end;

// *********************************************************************//
// DispIntf:  IUMLInteractionOperandDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {257B3B46-B74E-4316-8298-5902B9181EB5}
// *********************************************************************//
  IUMLInteractionOperandDisp = dispinterface
    ['{257B3B46-B74E-4316-8298-5902B9181EB5}']
    property Guard: WideString dispid 2048;
    property CombinedFragment: IUMLCombinedFragment dispid 2049;
    procedure AddFragment(const Value: IUMLInteractionFragment); dispid 2050;
    procedure RemoveFragment(const Value: IUMLInteractionFragment); dispid 2051;
    procedure InsertFragment(Index: Integer; const Value: IUMLInteractionFragment); dispid 2052;
    procedure DeleteFragment(Index: Integer); dispid 2053;
    function IndexOfFragment(const Value: IUMLInteractionFragment): Integer; dispid 2054;
    function GetFragmentCount: Integer; dispid 2055;
    function GetFragmentAt(Index: Integer): IUMLInteractionFragment; dispid 2056;
    property EnclosingOperand: IUMLInteractionOperand dispid 1792;
    property EnclosingInteraction: IUMLInteraction dispid 1793;
    property EnclosingInteractionInstanceSet: IUMLInteractionInstanceSet dispid 1794;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCombinedFragment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F61418C9-FED0-4485-9FC6-B312532EA26F}
// *********************************************************************//
  IUMLCombinedFragment = interface(IUMLInteractionFragment)
    ['{F61418C9-FED0-4485-9FC6-B312532EA26F}']
    function Get_InteractionOperator: UMLInteractionOperatorKind; safecall;
    procedure Set_InteractionOperator(Value: UMLInteractionOperatorKind); safecall;
    procedure AddOperand(const Value: IUMLInteractionOperand); safecall;
    procedure RemoveOperand(const Value: IUMLInteractionOperand); safecall;
    procedure InsertOperand(Index: Integer; const Value: IUMLInteractionOperand); safecall;
    procedure DeleteOperand(Index: Integer); safecall;
    function IndexOfOperand(const Value: IUMLInteractionOperand): Integer; safecall;
    function GetOperandCount: Integer; safecall;
    function GetOperandAt(Index: Integer): IUMLInteractionOperand; safecall;
    property InteractionOperator: UMLInteractionOperatorKind read Get_InteractionOperator write Set_InteractionOperator;
  end;

// *********************************************************************//
// DispIntf:  IUMLCombinedFragmentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F61418C9-FED0-4485-9FC6-B312532EA26F}
// *********************************************************************//
  IUMLCombinedFragmentDisp = dispinterface
    ['{F61418C9-FED0-4485-9FC6-B312532EA26F}']
    property InteractionOperator: UMLInteractionOperatorKind dispid 2048;
    procedure AddOperand(const Value: IUMLInteractionOperand); dispid 2049;
    procedure RemoveOperand(const Value: IUMLInteractionOperand); dispid 2050;
    procedure InsertOperand(Index: Integer; const Value: IUMLInteractionOperand); dispid 2051;
    procedure DeleteOperand(Index: Integer); dispid 2052;
    function IndexOfOperand(const Value: IUMLInteractionOperand): Integer; dispid 2053;
    function GetOperandCount: Integer; dispid 2054;
    function GetOperandAt(Index: Integer): IUMLInteractionOperand; dispid 2055;
    property EnclosingOperand: IUMLInteractionOperand dispid 1792;
    property EnclosingInteraction: IUMLInteraction dispid 1793;
    property EnclosingInteractionInstanceSet: IUMLInteractionInstanceSet dispid 1794;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSignal
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD4E6A26-3410-46B4-A606-B53F2A0F2AB5}
// *********************************************************************//
  IUMLSignal = interface(IUMLClassifier)
    ['{BD4E6A26-3410-46B4-A606-B53F2A0F2AB5}']
    procedure AddReception(const Value: IUMLReception); safecall;
    procedure RemoveReception(const Value: IUMLReception); safecall;
    procedure InsertReception(Index: Integer; const Value: IUMLReception); safecall;
    procedure DeleteReception(Index: Integer); safecall;
    function IndexOfReception(const Value: IUMLReception): Integer; safecall;
    function GetReceptionCount: Integer; safecall;
    function GetReceptionAt(Index: Integer): IUMLReception; safecall;
    procedure AddContext(const Value: IUMLBehavioralFeature); safecall;
    procedure RemoveContext(const Value: IUMLBehavioralFeature); safecall;
    procedure InsertContext(Index: Integer; const Value: IUMLBehavioralFeature); safecall;
    procedure DeleteContext(Index: Integer); safecall;
    function IndexOfContext(const Value: IUMLBehavioralFeature): Integer; safecall;
    function GetContextCount: Integer; safecall;
    function GetContextAt(Index: Integer): IUMLBehavioralFeature; safecall;
    procedure AddSendAction(const Value: IUMLSendAction); safecall;
    procedure RemoveSendAction(const Value: IUMLSendAction); safecall;
    procedure InsertSendAction(Index: Integer; const Value: IUMLSendAction); safecall;
    procedure DeleteSendAction(Index: Integer); safecall;
    function IndexOfSendAction(const Value: IUMLSendAction): Integer; safecall;
    function GetSendActionCount: Integer; safecall;
    function GetSendActionAt(Index: Integer): IUMLSendAction; safecall;
    procedure AddOccurrence(const Value: IUMLSignalEvent); safecall;
    procedure RemoveOccurrence(const Value: IUMLSignalEvent); safecall;
    procedure InsertOccurrence(Index: Integer; const Value: IUMLSignalEvent); safecall;
    procedure DeleteOccurrence(Index: Integer); safecall;
    function IndexOfOccurrence(const Value: IUMLSignalEvent): Integer; safecall;
    function GetOccurrenceCount: Integer; safecall;
    function GetOccurrenceAt(Index: Integer): IUMLSignalEvent; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLSignalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BD4E6A26-3410-46B4-A606-B53F2A0F2AB5}
// *********************************************************************//
  IUMLSignalDisp = dispinterface
    ['{BD4E6A26-3410-46B4-A606-B53F2A0F2AB5}']
    procedure AddReception(const Value: IUMLReception); dispid 2560;
    procedure RemoveReception(const Value: IUMLReception); dispid 2561;
    procedure InsertReception(Index: Integer; const Value: IUMLReception); dispid 2562;
    procedure DeleteReception(Index: Integer); dispid 2563;
    function IndexOfReception(const Value: IUMLReception): Integer; dispid 2564;
    function GetReceptionCount: Integer; dispid 2565;
    function GetReceptionAt(Index: Integer): IUMLReception; dispid 2566;
    procedure AddContext(const Value: IUMLBehavioralFeature); dispid 2567;
    procedure RemoveContext(const Value: IUMLBehavioralFeature); dispid 2568;
    procedure InsertContext(Index: Integer; const Value: IUMLBehavioralFeature); dispid 2569;
    procedure DeleteContext(Index: Integer); dispid 2570;
    function IndexOfContext(const Value: IUMLBehavioralFeature): Integer; dispid 2571;
    function GetContextCount: Integer; dispid 2572;
    function GetContextAt(Index: Integer): IUMLBehavioralFeature; dispid 2573;
    procedure AddSendAction(const Value: IUMLSendAction); dispid 2574;
    procedure RemoveSendAction(const Value: IUMLSendAction); dispid 2575;
    procedure InsertSendAction(Index: Integer; const Value: IUMLSendAction); dispid 2576;
    procedure DeleteSendAction(Index: Integer); dispid 2577;
    function IndexOfSendAction(const Value: IUMLSendAction): Integer; dispid 2578;
    function GetSendActionCount: Integer; dispid 2579;
    function GetSendActionAt(Index: Integer): IUMLSendAction; dispid 2580;
    procedure AddOccurrence(const Value: IUMLSignalEvent); dispid 2581;
    procedure RemoveOccurrence(const Value: IUMLSignalEvent); dispid 2582;
    procedure InsertOccurrence(Index: Integer; const Value: IUMLSignalEvent); dispid 2583;
    procedure DeleteOccurrence(Index: Integer); dispid 2584;
    function IndexOfOccurrence(const Value: IUMLSignalEvent): Integer; dispid 2585;
    function GetOccurrenceCount: Integer; dispid 2586;
    function GetOccurrenceAt(Index: Integer): IUMLSignalEvent; dispid 2587;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLReception
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FD66F18E-C5A3-4138-9D82-4A3B4A8E696F}
// *********************************************************************//
  IUMLReception = interface(IUMLBehavioralFeature)
    ['{FD66F18E-C5A3-4138-9D82-4A3B4A8E696F}']
    function Get_Specification: WideString; safecall;
    procedure Set_Specification(const Value: WideString); safecall;
    function Get_IsRoot: WordBool; safecall;
    procedure Set_IsRoot(Value: WordBool); safecall;
    function Get_IsLeaf: WordBool; safecall;
    procedure Set_IsLeaf(Value: WordBool); safecall;
    function Get_IsAbstract: WordBool; safecall;
    procedure Set_IsAbstract(Value: WordBool); safecall;
    function Get_Signal: IUMLSignal; safecall;
    procedure Set_Signal(const Value: IUMLSignal); safecall;
    property Specification: WideString read Get_Specification write Set_Specification;
    property IsRoot: WordBool read Get_IsRoot write Set_IsRoot;
    property IsLeaf: WordBool read Get_IsLeaf write Set_IsLeaf;
    property IsAbstract: WordBool read Get_IsAbstract write Set_IsAbstract;
    property Signal: IUMLSignal read Get_Signal write Set_Signal;
  end;

// *********************************************************************//
// DispIntf:  IUMLReceptionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FD66F18E-C5A3-4138-9D82-4A3B4A8E696F}
// *********************************************************************//
  IUMLReceptionDisp = dispinterface
    ['{FD66F18E-C5A3-4138-9D82-4A3B4A8E696F}']
    property Specification: WideString dispid 2304;
    property IsRoot: WordBool dispid 2305;
    property IsLeaf: WordBool dispid 2306;
    property IsAbstract: WordBool dispid 2307;
    property Signal: IUMLSignal dispid 2308;
    property IsQuery: WordBool dispid 2048;
    function GetParameterCount: Integer; dispid 2049;
    function GetParameterAt(Index: Integer): IUMLParameter; dispid 2050;
    procedure AddRaisedSignal(const Value: IUMLSignal); dispid 2051;
    procedure RemoveRaisedSignal(const Value: IUMLSignal); dispid 2052;
    procedure InsertRaisedSignal(Index: Integer; const Value: IUMLSignal); dispid 2053;
    procedure DeleteRaisedSignal(Index: Integer); dispid 2054;
    function IndexOfRaisedSignal(const Value: IUMLSignal): Integer; dispid 2055;
    function GetRaisedSignalCount: Integer; dispid 2056;
    function GetRaisedSignalAt(Index: Integer): IUMLSignal; dispid 2057;
    property OwnerScope: UMLScopeKind dispid 1792;
    procedure AddConnectorEnd(const Value: IUMLConnectorEnd); dispid 1793;
    procedure RemoveConnectorEnd(const Value: IUMLConnectorEnd); dispid 1794;
    procedure InsertConnectorEnd(Index: Integer; const Value: IUMLConnectorEnd); dispid 1795;
    procedure DeleteConnectorEnd(Index: Integer); dispid 1796;
    function IndexOfConnectorEnd(const Value: IUMLConnectorEnd): Integer; dispid 1797;
    function GetConnectorEndCount: Integer; dispid 1798;
    function GetConnectorEndAt(Index: Integer): IUMLConnectorEnd; dispid 1799;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 1800;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 1801;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1802;
    procedure DeleteClassifierRole(Index: Integer); dispid 1803;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 1804;
    function GetClassifierRoleCount: Integer; dispid 1805;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSendAction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0B98EDFA-BB54-42F2-A011-0E8E99AE0ACA}
// *********************************************************************//
  IUMLSendAction = interface(IUMLAction)
    ['{0B98EDFA-BB54-42F2-A011-0E8E99AE0ACA}']
    function Get_Signal: IUMLSignal; safecall;
    procedure Set_Signal(const Value: IUMLSignal); safecall;
    property Signal: IUMLSignal read Get_Signal write Set_Signal;
  end;

// *********************************************************************//
// DispIntf:  IUMLSendActionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0B98EDFA-BB54-42F2-A011-0E8E99AE0ACA}
// *********************************************************************//
  IUMLSendActionDisp = dispinterface
    ['{0B98EDFA-BB54-42F2-A011-0E8E99AE0ACA}']
    property Signal: IUMLSignal dispid 2048;
    property Recurrence: WideString dispid 1792;
    property Target: WideString dispid 1793;
    property IsAsynchronous: WordBool dispid 1794;
    property Script: WideString dispid 1795;
    function GetActualArgumentCount: Integer; dispid 1796;
    function GetActualArgumentAt(Index: Integer): IUMLArgument; dispid 1797;
    property ActionSequence: IUMLActionSequence readonly dispid 1798;
    property Stimulus: IUMLStimulus readonly dispid 1799;
    property EntryState: IUMLState readonly dispid 1800;
    property ExitState: IUMLState readonly dispid 1801;
    property Transition: IUMLTransition readonly dispid 1802;
    property DoActivityState: IUMLState readonly dispid 1803;
    property Message: IUMLMessage readonly dispid 1804;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSignalEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9C3362FD-01D3-457D-968A-C31F12877E62}
// *********************************************************************//
  IUMLSignalEvent = interface(IUMLEvent)
    ['{9C3362FD-01D3-457D-968A-C31F12877E62}']
    function Get_Signal: IUMLSignal; safecall;
    procedure Set_Signal(const Value: IUMLSignal); safecall;
    property Signal: IUMLSignal read Get_Signal write Set_Signal;
  end;

// *********************************************************************//
// DispIntf:  IUMLSignalEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9C3362FD-01D3-457D-968A-C31F12877E62}
// *********************************************************************//
  IUMLSignalEventDisp = dispinterface
    ['{9C3362FD-01D3-457D-968A-C31F12877E62}']
    property Signal: IUMLSignal dispid 2048;
    function GetParameterCount: Integer; dispid 1792;
    function GetParameterAt(Index: Integer): IUMLParameter; dispid 1793;
    procedure AddState(const Value: IUMLState); dispid 1794;
    procedure RemoveState(const Value: IUMLState); dispid 1795;
    procedure InsertState(Index: Integer; const Value: IUMLState); dispid 1796;
    procedure DeleteState(Index: Integer); dispid 1797;
    function IndexOfState(const Value: IUMLState): Integer; dispid 1798;
    function GetStateCount: Integer; dispid 1799;
    function GetStateAt(Index: Integer): IUMLState; dispid 1800;
    property Transition: IUMLTransition readonly dispid 1801;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLMethod
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E95BC808-931D-40E1-ABBE-C812E22D3897}
// *********************************************************************//
  IUMLMethod = interface(IUMLBehavioralFeature)
    ['{E95BC808-931D-40E1-ABBE-C812E22D3897}']
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Value: WideString); safecall;
    function Get_Specification: IUMLOperation; safecall;
    procedure Set_Specification(const Value: IUMLOperation); safecall;
    property Body: WideString read Get_Body write Set_Body;
    property Specification: IUMLOperation read Get_Specification write Set_Specification;
  end;

// *********************************************************************//
// DispIntf:  IUMLMethodDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E95BC808-931D-40E1-ABBE-C812E22D3897}
// *********************************************************************//
  IUMLMethodDisp = dispinterface
    ['{E95BC808-931D-40E1-ABBE-C812E22D3897}']
    property Body: WideString dispid 2304;
    property Specification: IUMLOperation dispid 2305;
    property IsQuery: WordBool dispid 2048;
    function GetParameterCount: Integer; dispid 2049;
    function GetParameterAt(Index: Integer): IUMLParameter; dispid 2050;
    procedure AddRaisedSignal(const Value: IUMLSignal); dispid 2051;
    procedure RemoveRaisedSignal(const Value: IUMLSignal); dispid 2052;
    procedure InsertRaisedSignal(Index: Integer; const Value: IUMLSignal); dispid 2053;
    procedure DeleteRaisedSignal(Index: Integer); dispid 2054;
    function IndexOfRaisedSignal(const Value: IUMLSignal): Integer; dispid 2055;
    function GetRaisedSignalCount: Integer; dispid 2056;
    function GetRaisedSignalAt(Index: Integer): IUMLSignal; dispid 2057;
    property OwnerScope: UMLScopeKind dispid 1792;
    procedure AddConnectorEnd(const Value: IUMLConnectorEnd); dispid 1793;
    procedure RemoveConnectorEnd(const Value: IUMLConnectorEnd); dispid 1794;
    procedure InsertConnectorEnd(Index: Integer; const Value: IUMLConnectorEnd); dispid 1795;
    procedure DeleteConnectorEnd(Index: Integer); dispid 1796;
    function IndexOfConnectorEnd(const Value: IUMLConnectorEnd): Integer; dispid 1797;
    function GetConnectorEndCount: Integer; dispid 1798;
    function GetConnectorEndAt(Index: Integer): IUMLConnectorEnd; dispid 1799;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 1800;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 1801;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1802;
    procedure DeleteClassifierRole(Index: Integer); dispid 1803;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 1804;
    function GetClassifierRoleCount: Integer; dispid 1805;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCallAction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7664ACBF-A8E1-4992-BC19-5C05CF5046DE}
// *********************************************************************//
  IUMLCallAction = interface(IUMLAction)
    ['{7664ACBF-A8E1-4992-BC19-5C05CF5046DE}']
    function Get_Operation: IUMLOperation; safecall;
    procedure Set_Operation(const Value: IUMLOperation); safecall;
    property Operation: IUMLOperation read Get_Operation write Set_Operation;
  end;

// *********************************************************************//
// DispIntf:  IUMLCallActionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7664ACBF-A8E1-4992-BC19-5C05CF5046DE}
// *********************************************************************//
  IUMLCallActionDisp = dispinterface
    ['{7664ACBF-A8E1-4992-BC19-5C05CF5046DE}']
    property Operation: IUMLOperation dispid 2048;
    property Recurrence: WideString dispid 1792;
    property Target: WideString dispid 1793;
    property IsAsynchronous: WordBool dispid 1794;
    property Script: WideString dispid 1795;
    function GetActualArgumentCount: Integer; dispid 1796;
    function GetActualArgumentAt(Index: Integer): IUMLArgument; dispid 1797;
    property ActionSequence: IUMLActionSequence readonly dispid 1798;
    property Stimulus: IUMLStimulus readonly dispid 1799;
    property EntryState: IUMLState readonly dispid 1800;
    property ExitState: IUMLState readonly dispid 1801;
    property Transition: IUMLTransition readonly dispid 1802;
    property DoActivityState: IUMLState readonly dispid 1803;
    property Message: IUMLMessage readonly dispid 1804;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCallEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7FBCE306-35A0-432A-BB7D-BEAD89D15D77}
// *********************************************************************//
  IUMLCallEvent = interface(IUMLEvent)
    ['{7FBCE306-35A0-432A-BB7D-BEAD89D15D77}']
    function Get_Operation: IUMLOperation; safecall;
    procedure Set_Operation(const Value: IUMLOperation); safecall;
    property Operation: IUMLOperation read Get_Operation write Set_Operation;
  end;

// *********************************************************************//
// DispIntf:  IUMLCallEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7FBCE306-35A0-432A-BB7D-BEAD89D15D77}
// *********************************************************************//
  IUMLCallEventDisp = dispinterface
    ['{7FBCE306-35A0-432A-BB7D-BEAD89D15D77}']
    property Operation: IUMLOperation dispid 2048;
    function GetParameterCount: Integer; dispid 1792;
    function GetParameterAt(Index: Integer): IUMLParameter; dispid 1793;
    procedure AddState(const Value: IUMLState); dispid 1794;
    procedure RemoveState(const Value: IUMLState); dispid 1795;
    procedure InsertState(Index: Integer; const Value: IUMLState); dispid 1796;
    procedure DeleteState(Index: Integer); dispid 1797;
    function IndexOfState(const Value: IUMLState): Integer; dispid 1798;
    function GetStateCount: Integer; dispid 1799;
    function GetStateAt(Index: Integer): IUMLState; dispid 1800;
    property Transition: IUMLTransition readonly dispid 1801;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLGeneralization
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {460F9540-6624-4834-92CF-A12ACF76043D}
// *********************************************************************//
  IUMLGeneralization = interface(IUMLRelationship)
    ['{460F9540-6624-4834-92CF-A12ACF76043D}']
    function Get_Discriminator: WideString; safecall;
    procedure Set_Discriminator(const Value: WideString); safecall;
    function Get_Child: IUMLGeneralizableElement; safecall;
    procedure Set_Child(const Value: IUMLGeneralizableElement); safecall;
    function Get_Parent: IUMLGeneralizableElement; safecall;
    procedure Set_Parent(const Value: IUMLGeneralizableElement); safecall;
    function Get_Powertype: IUMLClassifier; safecall;
    procedure Set_Powertype(const Value: IUMLClassifier); safecall;
    property Discriminator: WideString read Get_Discriminator write Set_Discriminator;
    property Child: IUMLGeneralizableElement read Get_Child write Set_Child;
    property Parent: IUMLGeneralizableElement read Get_Parent write Set_Parent;
    property Powertype: IUMLClassifier read Get_Powertype write Set_Powertype;
  end;

// *********************************************************************//
// DispIntf:  IUMLGeneralizationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {460F9540-6624-4834-92CF-A12ACF76043D}
// *********************************************************************//
  IUMLGeneralizationDisp = dispinterface
    ['{460F9540-6624-4834-92CF-A12ACF76043D}']
    property Discriminator: WideString dispid 2048;
    property Child: IUMLGeneralizableElement dispid 2049;
    property Parent: IUMLGeneralizableElement dispid 2050;
    property Powertype: IUMLClassifier dispid 2051;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLPort
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41CA8B62-459D-4A72-AE2E-0E504A01A721}
// *********************************************************************//
  IUMLPort = interface(IUMLStructuralFeature)
    ['{41CA8B62-459D-4A72-AE2E-0E504A01A721}']
    function Get_IsBehavior: WordBool; safecall;
    procedure Set_IsBehavior(Value: WordBool); safecall;
    function Get_IsService: WordBool; safecall;
    procedure Set_IsService(Value: WordBool); safecall;
    function Get_Owner: IUMLClassifier; safecall;
    procedure Set_Owner(const Value: IUMLClassifier); safecall;
    property IsBehavior: WordBool read Get_IsBehavior write Set_IsBehavior;
    property IsService: WordBool read Get_IsService write Set_IsService;
    property Owner: IUMLClassifier read Get_Owner write Set_Owner;
  end;

// *********************************************************************//
// DispIntf:  IUMLPortDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {41CA8B62-459D-4A72-AE2E-0E504A01A721}
// *********************************************************************//
  IUMLPortDisp = dispinterface
    ['{41CA8B62-459D-4A72-AE2E-0E504A01A721}']
    property IsBehavior: WordBool dispid 2304;
    property IsService: WordBool dispid 2305;
    property Owner: IUMLClassifier dispid 2306;
    property Multiplicity: WideString dispid 2048;
    property Changeability: UMLChangeableKind dispid 2049;
    property TargetScope: UMLScopeKind dispid 2050;
    property Ordering: UMLOrderingKind dispid 2051;
    property TypeExpression: WideString dispid 2052;
    property Type_: IUMLClassifier dispid 2053;
    procedure SetType(const Value: IUMLClassifier); dispid 2054;
    procedure SetType2(const Value: WideString); dispid 2055;
    property OwnerScope: UMLScopeKind dispid 1792;
    procedure AddConnectorEnd(const Value: IUMLConnectorEnd); dispid 1793;
    procedure RemoveConnectorEnd(const Value: IUMLConnectorEnd); dispid 1794;
    procedure InsertConnectorEnd(Index: Integer; const Value: IUMLConnectorEnd); dispid 1795;
    procedure DeleteConnectorEnd(Index: Integer); dispid 1796;
    function IndexOfConnectorEnd(const Value: IUMLConnectorEnd): Integer; dispid 1797;
    function GetConnectorEndCount: Integer; dispid 1798;
    function GetConnectorEndAt(Index: Integer): IUMLConnectorEnd; dispid 1799;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 1800;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 1801;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1802;
    procedure DeleteClassifierRole(Index: Integer); dispid 1803;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 1804;
    function GetClassifierRoleCount: Integer; dispid 1805;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCreateAction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D648A4D-9E11-4379-B2B7-A8B1B2C59414}
// *********************************************************************//
  IUMLCreateAction = interface(IUMLAction)
    ['{0D648A4D-9E11-4379-B2B7-A8B1B2C59414}']
    function Get_Instantiation: IUMLClassifier; safecall;
    procedure Set_Instantiation(const Value: IUMLClassifier); safecall;
    property Instantiation: IUMLClassifier read Get_Instantiation write Set_Instantiation;
  end;

// *********************************************************************//
// DispIntf:  IUMLCreateActionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D648A4D-9E11-4379-B2B7-A8B1B2C59414}
// *********************************************************************//
  IUMLCreateActionDisp = dispinterface
    ['{0D648A4D-9E11-4379-B2B7-A8B1B2C59414}']
    property Instantiation: IUMLClassifier dispid 2048;
    property Recurrence: WideString dispid 1792;
    property Target: WideString dispid 1793;
    property IsAsynchronous: WordBool dispid 1794;
    property Script: WideString dispid 1795;
    function GetActualArgumentCount: Integer; dispid 1796;
    function GetActualArgumentAt(Index: Integer): IUMLArgument; dispid 1797;
    property ActionSequence: IUMLActionSequence readonly dispid 1798;
    property Stimulus: IUMLStimulus readonly dispid 1799;
    property EntryState: IUMLState readonly dispid 1800;
    property ExitState: IUMLState readonly dispid 1801;
    property Transition: IUMLTransition readonly dispid 1802;
    property DoActivityState: IUMLState readonly dispid 1803;
    property Message: IUMLMessage readonly dispid 1804;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLDependency
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E22F30D-0FAC-4833-9A90-6CAEEAD115B1}
// *********************************************************************//
  IUMLDependency = interface(IUMLRelationship)
    ['{5E22F30D-0FAC-4833-9A90-6CAEEAD115B1}']
    function Get_Mapping: WideString; safecall;
    procedure Set_Mapping(const Value: WideString); safecall;
    function Get_Client: IUMLModelElement; safecall;
    procedure Set_Client(const Value: IUMLModelElement); safecall;
    function Get_Supplier: IUMLModelElement; safecall;
    procedure Set_Supplier(const Value: IUMLModelElement); safecall;
    property Mapping: WideString read Get_Mapping write Set_Mapping;
    property Client: IUMLModelElement read Get_Client write Set_Client;
    property Supplier: IUMLModelElement read Get_Supplier write Set_Supplier;
  end;

// *********************************************************************//
// DispIntf:  IUMLDependencyDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5E22F30D-0FAC-4833-9A90-6CAEEAD115B1}
// *********************************************************************//
  IUMLDependencyDisp = dispinterface
    ['{5E22F30D-0FAC-4833-9A90-6CAEEAD115B1}']
    property Mapping: WideString dispid 2048;
    property Client: IUMLModelElement dispid 2049;
    property Supplier: IUMLModelElement dispid 2050;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLTemplateParameter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C3278B29-50AF-412A-8F1F-3B3B153BB29E}
// *********************************************************************//
  IUMLTemplateParameter = interface(IUMLElement)
    ['{C3278B29-50AF-412A-8F1F-3B3B153BB29E}']
    function Get_ParameterType: WideString; safecall;
    procedure Set_ParameterType(const Value: WideString); safecall;
    function Get_DefaultValue: WideString; safecall;
    procedure Set_DefaultValue(const Value: WideString); safecall;
    function Get_DefaultElement: IUMLModelElement; safecall;
    procedure Set_DefaultElement(const Value: IUMLModelElement); safecall;
    function Get_Template: IUMLModelElement; safecall;
    function Get_Parameter: IUMLModelElement; safecall;
    property ParameterType: WideString read Get_ParameterType write Set_ParameterType;
    property DefaultValue: WideString read Get_DefaultValue write Set_DefaultValue;
    property DefaultElement: IUMLModelElement read Get_DefaultElement write Set_DefaultElement;
    property Template: IUMLModelElement read Get_Template;
    property Parameter: IUMLModelElement read Get_Parameter;
  end;

// *********************************************************************//
// DispIntf:  IUMLTemplateParameterDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C3278B29-50AF-412A-8F1F-3B3B153BB29E}
// *********************************************************************//
  IUMLTemplateParameterDisp = dispinterface
    ['{C3278B29-50AF-412A-8F1F-3B3B153BB29E}']
    property ParameterType: WideString dispid 1536;
    property DefaultValue: WideString dispid 1537;
    property DefaultElement: IUMLModelElement dispid 1538;
    property Template: IUMLModelElement readonly dispid 1539;
    property Parameter: IUMLModelElement readonly dispid 1540;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLComment
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2374D4CA-67EF-409E-A922-47391351B911}
// *********************************************************************//
  IUMLComment = interface(IUMLModelElement)
    ['{2374D4CA-67EF-409E-A922-47391351B911}']
    function Get_Body: WideString; safecall;
    procedure Set_Body(const Value: WideString); safecall;
    procedure AddAnnotatedElement(const Value: IUMLModelElement); safecall;
    procedure RemoveAnnotatedElement(const Value: IUMLModelElement); safecall;
    procedure InsertAnnotatedElement(Index: Integer; const Value: IUMLModelElement); safecall;
    procedure DeleteAnnotatedElement(Index: Integer); safecall;
    function IndexOfAnnotatedElement(const Value: IUMLModelElement): Integer; safecall;
    function GetAnnotatedElementCount: Integer; safecall;
    function GetAnnotatedElementAt(Index: Integer): IUMLModelElement; safecall;
    property Body: WideString read Get_Body write Set_Body;
  end;

// *********************************************************************//
// DispIntf:  IUMLCommentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2374D4CA-67EF-409E-A922-47391351B911}
// *********************************************************************//
  IUMLCommentDisp = dispinterface
    ['{2374D4CA-67EF-409E-A922-47391351B911}']
    property Body: WideString dispid 1792;
    procedure AddAnnotatedElement(const Value: IUMLModelElement); dispid 1793;
    procedure RemoveAnnotatedElement(const Value: IUMLModelElement); dispid 1794;
    procedure InsertAnnotatedElement(Index: Integer; const Value: IUMLModelElement); dispid 1795;
    procedure DeleteAnnotatedElement(Index: Integer); dispid 1796;
    function IndexOfAnnotatedElement(const Value: IUMLModelElement): Integer; dispid 1797;
    function GetAnnotatedElementCount: Integer; dispid 1798;
    function GetAnnotatedElementAt(Index: Integer): IUMLModelElement; dispid 1799;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLComponent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7DC0875-B168-4737-926B-2189774996FF}
// *********************************************************************//
  IUMLComponent = interface(IUMLClassifier)
    ['{A7DC0875-B168-4737-926B-2189774996FF}']
    procedure AddDeploymentLocation(const Value: IUMLNode); safecall;
    procedure RemoveDeploymentLocation(const Value: IUMLNode); safecall;
    procedure InsertDeploymentLocation(Index: Integer; const Value: IUMLNode); safecall;
    procedure DeleteDeploymentLocation(Index: Integer); safecall;
    function IndexOfDeploymentLocation(const Value: IUMLNode): Integer; safecall;
    function GetDeploymentLocationCount: Integer; safecall;
    function GetDeploymentLocationAt(Index: Integer): IUMLNode; safecall;
    procedure AddResident(const Value: IUMLModelElement); safecall;
    procedure RemoveResident(const Value: IUMLModelElement); safecall;
    procedure InsertResident(Index: Integer; const Value: IUMLModelElement); safecall;
    procedure DeleteResident(Index: Integer); safecall;
    function IndexOfResident(const Value: IUMLModelElement): Integer; safecall;
    function GetResidentCount: Integer; safecall;
    function GetResidentAt(Index: Integer): IUMLModelElement; safecall;
    procedure AddImplementation(const Value: IUMLArtifact); safecall;
    procedure RemoveImplementation(const Value: IUMLArtifact); safecall;
    procedure InsertImplementation(Index: Integer; const Value: IUMLArtifact); safecall;
    procedure DeleteImplementation(Index: Integer); safecall;
    function IndexOfImplementation(const Value: IUMLArtifact): Integer; safecall;
    function GetImplementationCount: Integer; safecall;
    function GetImplementationAt(Index: Integer): IUMLArtifact; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLComponentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7DC0875-B168-4737-926B-2189774996FF}
// *********************************************************************//
  IUMLComponentDisp = dispinterface
    ['{A7DC0875-B168-4737-926B-2189774996FF}']
    procedure AddDeploymentLocation(const Value: IUMLNode); dispid 2560;
    procedure RemoveDeploymentLocation(const Value: IUMLNode); dispid 2561;
    procedure InsertDeploymentLocation(Index: Integer; const Value: IUMLNode); dispid 2562;
    procedure DeleteDeploymentLocation(Index: Integer); dispid 2563;
    function IndexOfDeploymentLocation(const Value: IUMLNode): Integer; dispid 2564;
    function GetDeploymentLocationCount: Integer; dispid 2565;
    function GetDeploymentLocationAt(Index: Integer): IUMLNode; dispid 2566;
    procedure AddResident(const Value: IUMLModelElement); dispid 2567;
    procedure RemoveResident(const Value: IUMLModelElement); dispid 2568;
    procedure InsertResident(Index: Integer; const Value: IUMLModelElement); dispid 2569;
    procedure DeleteResident(Index: Integer); dispid 2570;
    function IndexOfResident(const Value: IUMLModelElement): Integer; dispid 2571;
    function GetResidentCount: Integer; dispid 2572;
    function GetResidentAt(Index: Integer): IUMLModelElement; dispid 2573;
    procedure AddImplementation(const Value: IUMLArtifact); dispid 2574;
    procedure RemoveImplementation(const Value: IUMLArtifact); dispid 2575;
    procedure InsertImplementation(Index: Integer; const Value: IUMLArtifact); dispid 2576;
    procedure DeleteImplementation(Index: Integer); dispid 2577;
    function IndexOfImplementation(const Value: IUMLArtifact): Integer; dispid 2578;
    function GetImplementationCount: Integer; dispid 2579;
    function GetImplementationAt(Index: Integer): IUMLArtifact; dispid 2580;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C95EE915-2020-4A2E-A64C-3864047582E0}
// *********************************************************************//
  IUMLNode = interface(IUMLClassifier)
    ['{C95EE915-2020-4A2E-A64C-3864047582E0}']
    procedure AddDeployedComponent(const Value: IUMLComponent); safecall;
    procedure RemoveDeployedComponent(const Value: IUMLComponent); safecall;
    procedure InsertDeployedComponent(Index: Integer; const Value: IUMLComponent); safecall;
    procedure DeleteDeployedComponent(Index: Integer); safecall;
    function IndexOfDeployedComponent(const Value: IUMLComponent): Integer; safecall;
    function GetDeployedComponentCount: Integer; safecall;
    function GetDeployedComponentAt(Index: Integer): IUMLComponent; safecall;
    procedure AddDeployedArtifact(const Value: IUMLArtifact); safecall;
    procedure RemoveDeployedArtifact(const Value: IUMLArtifact); safecall;
    procedure InsertDeployedArtifact(Index: Integer; const Value: IUMLArtifact); safecall;
    procedure DeleteDeployedArtifact(Index: Integer); safecall;
    function IndexOfDeployedArtifact(const Value: IUMLArtifact): Integer; safecall;
    function GetDeployedArtifactCount: Integer; safecall;
    function GetDeployedArtifactAt(Index: Integer): IUMLArtifact; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLNodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C95EE915-2020-4A2E-A64C-3864047582E0}
// *********************************************************************//
  IUMLNodeDisp = dispinterface
    ['{C95EE915-2020-4A2E-A64C-3864047582E0}']
    procedure AddDeployedComponent(const Value: IUMLComponent); dispid 2560;
    procedure RemoveDeployedComponent(const Value: IUMLComponent); dispid 2561;
    procedure InsertDeployedComponent(Index: Integer; const Value: IUMLComponent); dispid 2562;
    procedure DeleteDeployedComponent(Index: Integer); dispid 2563;
    function IndexOfDeployedComponent(const Value: IUMLComponent): Integer; dispid 2564;
    function GetDeployedComponentCount: Integer; dispid 2565;
    function GetDeployedComponentAt(Index: Integer): IUMLComponent; dispid 2566;
    procedure AddDeployedArtifact(const Value: IUMLArtifact); dispid 2567;
    procedure RemoveDeployedArtifact(const Value: IUMLArtifact); dispid 2568;
    procedure InsertDeployedArtifact(Index: Integer; const Value: IUMLArtifact); dispid 2569;
    procedure DeleteDeployedArtifact(Index: Integer); dispid 2570;
    function IndexOfDeployedArtifact(const Value: IUMLArtifact): Integer; dispid 2571;
    function GetDeployedArtifactCount: Integer; dispid 2572;
    function GetDeployedArtifactAt(Index: Integer): IUMLArtifact; dispid 2573;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLArtifact
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99725A79-45E9-4FE9-BC4E-32007154B941}
// *********************************************************************//
  IUMLArtifact = interface(IUMLClassifier)
    ['{99725A79-45E9-4FE9-BC4E-32007154B941}']
    procedure AddImplementationLocation(const Value: IUMLComponent); safecall;
    procedure RemoveImplementationLocation(const Value: IUMLComponent); safecall;
    procedure InsertImplementationLocation(Index: Integer; const Value: IUMLComponent); safecall;
    procedure DeleteImplementationLocation(Index: Integer); safecall;
    function IndexOfImplementationLocation(const Value: IUMLComponent): Integer; safecall;
    function GetImplementationLocationCount: Integer; safecall;
    function GetImplementationLocationAt(Index: Integer): IUMLComponent; safecall;
    procedure AddDeploymentLocation(const Value: IUMLNode); safecall;
    procedure RemoveDeploymentLocation(const Value: IUMLNode); safecall;
    procedure InsertDeploymentLocation(Index: Integer; const Value: IUMLNode); safecall;
    procedure DeleteDeploymentLocation(Index: Integer); safecall;
    function IndexOfDeploymentLocation(const Value: IUMLNode): Integer; safecall;
    function GetDeploymentLocationCount: Integer; safecall;
    function GetDeploymentLocationAt(Index: Integer): IUMLNode; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLArtifactDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {99725A79-45E9-4FE9-BC4E-32007154B941}
// *********************************************************************//
  IUMLArtifactDisp = dispinterface
    ['{99725A79-45E9-4FE9-BC4E-32007154B941}']
    procedure AddImplementationLocation(const Value: IUMLComponent); dispid 2560;
    procedure RemoveImplementationLocation(const Value: IUMLComponent); dispid 2561;
    procedure InsertImplementationLocation(Index: Integer; const Value: IUMLComponent); dispid 2562;
    procedure DeleteImplementationLocation(Index: Integer); dispid 2563;
    function IndexOfImplementationLocation(const Value: IUMLComponent): Integer; dispid 2564;
    function GetImplementationLocationCount: Integer; dispid 2565;
    function GetImplementationLocationAt(Index: Integer): IUMLComponent; dispid 2566;
    procedure AddDeploymentLocation(const Value: IUMLNode); dispid 2567;
    procedure RemoveDeploymentLocation(const Value: IUMLNode); dispid 2568;
    procedure InsertDeploymentLocation(Index: Integer; const Value: IUMLNode); dispid 2569;
    procedure DeleteDeploymentLocation(Index: Integer); dispid 2570;
    function IndexOfDeploymentLocation(const Value: IUMLNode): Integer; dispid 2571;
    function GetDeploymentLocationCount: Integer; dispid 2572;
    function GetDeploymentLocationAt(Index: Integer): IUMLNode; dispid 2573;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLTemplateArgument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {982CA266-1790-4411-8385-3F90F4E544A4}
// *********************************************************************//
  IUMLTemplateArgument = interface(IUMLElement)
    ['{982CA266-1790-4411-8385-3F90F4E544A4}']
    function Get_ModelElement: IUMLModelElement; safecall;
    procedure Set_ModelElement(const Value: IUMLModelElement); safecall;
    property ModelElement: IUMLModelElement read Get_ModelElement write Set_ModelElement;
  end;

// *********************************************************************//
// DispIntf:  IUMLTemplateArgumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {982CA266-1790-4411-8385-3F90F4E544A4}
// *********************************************************************//
  IUMLTemplateArgumentDisp = dispinterface
    ['{982CA266-1790-4411-8385-3F90F4E544A4}']
    property ModelElement: IUMLModelElement dispid 1536;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLPartition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97EB99FD-8F4D-4028-806E-75393ED3B924}
// *********************************************************************//
  IUMLPartition = interface(IUMLModelElement)
    ['{97EB99FD-8F4D-4028-806E-75393ED3B924}']
    procedure AddContent(const Value: IUMLModelElement); safecall;
    procedure RemoveContent(const Value: IUMLModelElement); safecall;
    procedure InsertContent(Index: Integer; const Value: IUMLModelElement); safecall;
    procedure DeleteContent(Index: Integer); safecall;
    function IndexOfContent(const Value: IUMLModelElement): Integer; safecall;
    function GetContentCount: Integer; safecall;
    function GetContentAt(Index: Integer): IUMLModelElement; safecall;
    function Get_ActivityGraph: IUMLActivityGraph; safecall;
    property ActivityGraph: IUMLActivityGraph read Get_ActivityGraph;
  end;

// *********************************************************************//
// DispIntf:  IUMLPartitionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {97EB99FD-8F4D-4028-806E-75393ED3B924}
// *********************************************************************//
  IUMLPartitionDisp = dispinterface
    ['{97EB99FD-8F4D-4028-806E-75393ED3B924}']
    procedure AddContent(const Value: IUMLModelElement); dispid 1792;
    procedure RemoveContent(const Value: IUMLModelElement); dispid 1793;
    procedure InsertContent(Index: Integer; const Value: IUMLModelElement); dispid 1794;
    procedure DeleteContent(Index: Integer); dispid 1795;
    function IndexOfContent(const Value: IUMLModelElement): Integer; dispid 1796;
    function GetContentCount: Integer; dispid 1797;
    function GetContentAt(Index: Integer): IUMLModelElement; dispid 1798;
    property ActivityGraph: IUMLActivityGraph readonly dispid 1799;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLActivityGraph
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B75D3480-F635-4BBE-B9C9-D603A3E52217}
// *********************************************************************//
  IUMLActivityGraph = interface(IUMLStateMachine)
    ['{B75D3480-F635-4BBE-B9C9-D603A3E52217}']
    function GetPartitionCount: Integer; safecall;
    function GetPartitionAt(Index: Integer): IUMLPartition; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLActivityGraphDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B75D3480-F635-4BBE-B9C9-D603A3E52217}
// *********************************************************************//
  IUMLActivityGraphDisp = dispinterface
    ['{B75D3480-F635-4BBE-B9C9-D603A3E52217}']
    function GetPartitionCount: Integer; dispid 2048;
    function GetPartitionAt(Index: Integer): IUMLPartition; dispid 2049;
    property Context: IUMLModelElement readonly dispid 1792;
    property Top: IUMLState readonly dispid 1793;
    function GetTransitionCount: Integer; dispid 1794;
    function GetTransitionAt(Index: Integer): IUMLTransition; dispid 1795;
    procedure AddSubmachineState(const Value: IUMLSubmachineState); dispid 1796;
    procedure RemoveSubmachineState(const Value: IUMLSubmachineState); dispid 1797;
    procedure InsertSubmachineState(Index: Integer; const Value: IUMLSubmachineState); dispid 1798;
    procedure DeleteSubmachineState(Index: Integer); dispid 1799;
    function IndexOfSubmachineState(const Value: IUMLSubmachineState): Integer; dispid 1800;
    function GetSubmachineStateCount: Integer; dispid 1801;
    function GetSubmachineStateAt(Index: Integer): IUMLSubmachineState; dispid 1802;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D6FDDD80-92BF-4258-843E-BCEB8E459C7C}
// *********************************************************************//
  IUMLModel = interface(IUMLPackage)
    ['{D6FDDD80-92BF-4258-843E-BCEB8E459C7C}']
  end;

// *********************************************************************//
// DispIntf:  IUMLModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D6FDDD80-92BF-4258-843E-BCEB8E459C7C}
// *********************************************************************//
  IUMLModelDisp = dispinterface
    ['{D6FDDD80-92BF-4258-843E-BCEB8E459C7C}']
    function GetElementImportItemCount: Integer; dispid 2560;
    function GetElementImportItemAt(Index: Integer): IUMLElementImport; dispid 2561;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSubsystem
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {32C56643-6609-4CD4-A5BC-33EEC84E85A7}
// *********************************************************************//
  IUMLSubsystem = interface(IUMLPackage)
    ['{32C56643-6609-4CD4-A5BC-33EEC84E85A7}']
    function Get_IsInstantiable: WordBool; safecall;
    procedure Set_IsInstantiable(Value: WordBool); safecall;
    property IsInstantiable: WordBool read Get_IsInstantiable write Set_IsInstantiable;
  end;

// *********************************************************************//
// DispIntf:  IUMLSubsystemDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {32C56643-6609-4CD4-A5BC-33EEC84E85A7}
// *********************************************************************//
  IUMLSubsystemDisp = dispinterface
    ['{32C56643-6609-4CD4-A5BC-33EEC84E85A7}']
    property IsInstantiable: WordBool dispid 2816;
    function GetElementImportItemCount: Integer; dispid 2560;
    function GetElementImportItemAt(Index: Integer): IUMLElementImport; dispid 2561;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLInterface
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5E4E1BA-DB5E-4D44-8A0F-A8DDF9FA3E31}
// *********************************************************************//
  IUMLInterface = interface(IUMLClassifier)
    ['{C5E4E1BA-DB5E-4D44-8A0F-A8DDF9FA3E31}']
  end;

// *********************************************************************//
// DispIntf:  IUMLInterfaceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5E4E1BA-DB5E-4D44-8A0F-A8DDF9FA3E31}
// *********************************************************************//
  IUMLInterfaceDisp = dispinterface
    ['{C5E4E1BA-DB5E-4D44-8A0F-A8DDF9FA3E31}']
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLDataType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C970F1CD-49A0-407E-B678-C9B9FDE7B261}
// *********************************************************************//
  IUMLDataType = interface(IUMLClassifier)
    ['{C970F1CD-49A0-407E-B678-C9B9FDE7B261}']
  end;

// *********************************************************************//
// DispIntf:  IUMLDataTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C970F1CD-49A0-407E-B678-C9B9FDE7B261}
// *********************************************************************//
  IUMLDataTypeDisp = dispinterface
    ['{C970F1CD-49A0-407E-B678-C9B9FDE7B261}']
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLEnumeration
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {321B7E63-FD4A-4828-A5D6-9B986240E129}
// *********************************************************************//
  IUMLEnumeration = interface(IUMLDataType)
    ['{321B7E63-FD4A-4828-A5D6-9B986240E129}']
    function GetLiteralCount: Integer; safecall;
    function GetLiteralAt(Index: Integer): IUMLEnumerationLiteral; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLEnumerationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {321B7E63-FD4A-4828-A5D6-9B986240E129}
// *********************************************************************//
  IUMLEnumerationDisp = dispinterface
    ['{321B7E63-FD4A-4828-A5D6-9B986240E129}']
    function GetLiteralCount: Integer; dispid 2816;
    function GetLiteralAt(Index: Integer): IUMLEnumerationLiteral; dispid 2817;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLEnumerationLiteral
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8CA5B43A-F0A7-479F-8E96-606FAA493380}
// *********************************************************************//
  IUMLEnumerationLiteral = interface(IUMLModelElement)
    ['{8CA5B43A-F0A7-479F-8E96-606FAA493380}']
    function Get_Enumeration: IUMLEnumeration; safecall;
    property Enumeration: IUMLEnumeration read Get_Enumeration;
  end;

// *********************************************************************//
// DispIntf:  IUMLEnumerationLiteralDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8CA5B43A-F0A7-479F-8E96-606FAA493380}
// *********************************************************************//
  IUMLEnumerationLiteralDisp = dispinterface
    ['{8CA5B43A-F0A7-479F-8E96-606FAA493380}']
    property Enumeration: IUMLEnumeration readonly dispid 1792;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLException
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {592D17B9-9EC3-48C3-A604-1C91B55FA12F}
// *********************************************************************//
  IUMLException = interface(IUMLSignal)
    ['{592D17B9-9EC3-48C3-A604-1C91B55FA12F}']
  end;

// *********************************************************************//
// DispIntf:  IUMLExceptionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {592D17B9-9EC3-48C3-A604-1C91B55FA12F}
// *********************************************************************//
  IUMLExceptionDisp = dispinterface
    ['{592D17B9-9EC3-48C3-A604-1C91B55FA12F}']
    procedure AddReception(const Value: IUMLReception); dispid 2560;
    procedure RemoveReception(const Value: IUMLReception); dispid 2561;
    procedure InsertReception(Index: Integer; const Value: IUMLReception); dispid 2562;
    procedure DeleteReception(Index: Integer); dispid 2563;
    function IndexOfReception(const Value: IUMLReception): Integer; dispid 2564;
    function GetReceptionCount: Integer; dispid 2565;
    function GetReceptionAt(Index: Integer): IUMLReception; dispid 2566;
    procedure AddContext(const Value: IUMLBehavioralFeature); dispid 2567;
    procedure RemoveContext(const Value: IUMLBehavioralFeature); dispid 2568;
    procedure InsertContext(Index: Integer; const Value: IUMLBehavioralFeature); dispid 2569;
    procedure DeleteContext(Index: Integer); dispid 2570;
    function IndexOfContext(const Value: IUMLBehavioralFeature): Integer; dispid 2571;
    function GetContextCount: Integer; dispid 2572;
    function GetContextAt(Index: Integer): IUMLBehavioralFeature; dispid 2573;
    procedure AddSendAction(const Value: IUMLSendAction); dispid 2574;
    procedure RemoveSendAction(const Value: IUMLSendAction); dispid 2575;
    procedure InsertSendAction(Index: Integer; const Value: IUMLSendAction); dispid 2576;
    procedure DeleteSendAction(Index: Integer); dispid 2577;
    function IndexOfSendAction(const Value: IUMLSendAction): Integer; dispid 2578;
    function GetSendActionCount: Integer; dispid 2579;
    function GetSendActionAt(Index: Integer): IUMLSendAction; dispid 2580;
    procedure AddOccurrence(const Value: IUMLSignalEvent); dispid 2581;
    procedure RemoveOccurrence(const Value: IUMLSignalEvent); dispid 2582;
    procedure InsertOccurrence(Index: Integer; const Value: IUMLSignalEvent); dispid 2583;
    procedure DeleteOccurrence(Index: Integer); dispid 2584;
    function IndexOfOccurrence(const Value: IUMLSignalEvent): Integer; dispid 2585;
    function GetOccurrenceCount: Integer; dispid 2586;
    function GetOccurrenceAt(Index: Integer): IUMLSignalEvent; dispid 2587;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLUseCase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CD897DE7-61AC-4495-800F-85171E320D82}
// *********************************************************************//
  IUMLUseCase = interface(IUMLClassifier)
    ['{CD897DE7-61AC-4495-800F-85171E320D82}']
    procedure AddExtender(const Value: IUMLExtend); safecall;
    procedure RemoveExtender(const Value: IUMLExtend); safecall;
    procedure InsertExtender(Index: Integer; const Value: IUMLExtend); safecall;
    procedure DeleteExtender(Index: Integer); safecall;
    function IndexOfExtender(const Value: IUMLExtend): Integer; safecall;
    function GetExtenderCount: Integer; safecall;
    function GetExtenderAt(Index: Integer): IUMLExtend; safecall;
    procedure AddExtend(const Value: IUMLExtend); safecall;
    procedure RemoveExtend(const Value: IUMLExtend); safecall;
    procedure InsertExtend(Index: Integer; const Value: IUMLExtend); safecall;
    procedure DeleteExtend(Index: Integer); safecall;
    function IndexOfExtend(const Value: IUMLExtend): Integer; safecall;
    function GetExtendCount: Integer; safecall;
    function GetExtendAt(Index: Integer): IUMLExtend; safecall;
    procedure AddIncluder(const Value: IUMLInclude); safecall;
    procedure RemoveIncluder(const Value: IUMLInclude); safecall;
    procedure InsertIncluder(Index: Integer; const Value: IUMLInclude); safecall;
    procedure DeleteIncluder(Index: Integer); safecall;
    function IndexOfIncluder(const Value: IUMLInclude): Integer; safecall;
    function GetIncluderCount: Integer; safecall;
    function GetIncluderAt(Index: Integer): IUMLInclude; safecall;
    procedure AddInclude(const Value: IUMLInclude); safecall;
    procedure RemoveInclude(const Value: IUMLInclude); safecall;
    procedure InsertInclude(Index: Integer; const Value: IUMLInclude); safecall;
    procedure DeleteInclude(Index: Integer); safecall;
    function IndexOfInclude(const Value: IUMLInclude): Integer; safecall;
    function GetIncludeCount: Integer; safecall;
    function GetIncludeAt(Index: Integer): IUMLInclude; safecall;
    function GetExtensionPointCount: Integer; safecall;
    function GetExtensionPointAt(Index: Integer): IUMLExtensionPoint; safecall;
  end;

// *********************************************************************//
// DispIntf:  IUMLUseCaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CD897DE7-61AC-4495-800F-85171E320D82}
// *********************************************************************//
  IUMLUseCaseDisp = dispinterface
    ['{CD897DE7-61AC-4495-800F-85171E320D82}']
    procedure AddExtender(const Value: IUMLExtend); dispid 2560;
    procedure RemoveExtender(const Value: IUMLExtend); dispid 2561;
    procedure InsertExtender(Index: Integer; const Value: IUMLExtend); dispid 2562;
    procedure DeleteExtender(Index: Integer); dispid 2563;
    function IndexOfExtender(const Value: IUMLExtend): Integer; dispid 2564;
    function GetExtenderCount: Integer; dispid 2565;
    function GetExtenderAt(Index: Integer): IUMLExtend; dispid 2566;
    procedure AddExtend(const Value: IUMLExtend); dispid 2567;
    procedure RemoveExtend(const Value: IUMLExtend); dispid 2568;
    procedure InsertExtend(Index: Integer; const Value: IUMLExtend); dispid 2569;
    procedure DeleteExtend(Index: Integer); dispid 2570;
    function IndexOfExtend(const Value: IUMLExtend): Integer; dispid 2571;
    function GetExtendCount: Integer; dispid 2572;
    function GetExtendAt(Index: Integer): IUMLExtend; dispid 2573;
    procedure AddIncluder(const Value: IUMLInclude); dispid 2574;
    procedure RemoveIncluder(const Value: IUMLInclude); dispid 2575;
    procedure InsertIncluder(Index: Integer; const Value: IUMLInclude); dispid 2576;
    procedure DeleteIncluder(Index: Integer); dispid 2577;
    function IndexOfIncluder(const Value: IUMLInclude): Integer; dispid 2578;
    function GetIncluderCount: Integer; dispid 2579;
    function GetIncluderAt(Index: Integer): IUMLInclude; dispid 2580;
    procedure AddInclude(const Value: IUMLInclude); dispid 2581;
    procedure RemoveInclude(const Value: IUMLInclude); dispid 2582;
    procedure InsertInclude(Index: Integer; const Value: IUMLInclude); dispid 2583;
    procedure DeleteInclude(Index: Integer); dispid 2584;
    function IndexOfInclude(const Value: IUMLInclude): Integer; dispid 2585;
    function GetIncludeCount: Integer; dispid 2586;
    function GetIncludeAt(Index: Integer): IUMLInclude; dispid 2587;
    function GetExtensionPointCount: Integer; dispid 2588;
    function GetExtensionPointAt(Index: Integer): IUMLExtensionPoint; dispid 2589;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLExtend
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {605077AF-BB57-4058-B09A-C9620AD24D10}
// *********************************************************************//
  IUMLExtend = interface(IUMLRelationship)
    ['{605077AF-BB57-4058-B09A-C9620AD24D10}']
    function Get_Condition: WideString; safecall;
    procedure Set_Condition(const Value: WideString); safecall;
    function Get_Base: IUMLUseCase; safecall;
    procedure Set_Base(const Value: IUMLUseCase); safecall;
    function Get_Extension: IUMLUseCase; safecall;
    procedure Set_Extension(const Value: IUMLUseCase); safecall;
    procedure AddExtensionPoint(const Value: IUMLExtensionPoint); safecall;
    procedure RemoveExtensionPoint(const Value: IUMLExtensionPoint); safecall;
    procedure InsertExtensionPoint(Index: Integer; const Value: IUMLExtensionPoint); safecall;
    procedure DeleteExtensionPoint(Index: Integer); safecall;
    function IndexOfExtensionPoint(const Value: IUMLExtensionPoint): Integer; safecall;
    function GetExtensionPointCount: Integer; safecall;
    function GetExtensionPointAt(Index: Integer): IUMLExtensionPoint; safecall;
    property Condition: WideString read Get_Condition write Set_Condition;
    property Base: IUMLUseCase read Get_Base write Set_Base;
    property Extension: IUMLUseCase read Get_Extension write Set_Extension;
  end;

// *********************************************************************//
// DispIntf:  IUMLExtendDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {605077AF-BB57-4058-B09A-C9620AD24D10}
// *********************************************************************//
  IUMLExtendDisp = dispinterface
    ['{605077AF-BB57-4058-B09A-C9620AD24D10}']
    property Condition: WideString dispid 2048;
    property Base: IUMLUseCase dispid 2049;
    property Extension: IUMLUseCase dispid 2050;
    procedure AddExtensionPoint(const Value: IUMLExtensionPoint); dispid 2051;
    procedure RemoveExtensionPoint(const Value: IUMLExtensionPoint); dispid 2052;
    procedure InsertExtensionPoint(Index: Integer; const Value: IUMLExtensionPoint); dispid 2053;
    procedure DeleteExtensionPoint(Index: Integer); dispid 2054;
    function IndexOfExtensionPoint(const Value: IUMLExtensionPoint): Integer; dispid 2055;
    function GetExtensionPointCount: Integer; dispid 2056;
    function GetExtensionPointAt(Index: Integer): IUMLExtensionPoint; dispid 2057;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLExtensionPoint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCD8C3D7-F2E9-4A96-A6BA-D350882E52FC}
// *********************************************************************//
  IUMLExtensionPoint = interface(IUMLModelElement)
    ['{DCD8C3D7-F2E9-4A96-A6BA-D350882E52FC}']
    function Get_Location: WideString; safecall;
    procedure Set_Location(const Value: WideString); safecall;
    function Get_UseCase: IUMLUseCase; safecall;
    procedure AddExtend(const Value: IUMLExtend); safecall;
    procedure RemoveExtend(const Value: IUMLExtend); safecall;
    procedure InsertExtend(Index: Integer; const Value: IUMLExtend); safecall;
    procedure DeleteExtend(Index: Integer); safecall;
    function IndexOfExtend(const Value: IUMLExtend): Integer; safecall;
    function GetExtendCount: Integer; safecall;
    function GetExtendAt(Index: Integer): IUMLExtend; safecall;
    property Location: WideString read Get_Location write Set_Location;
    property UseCase: IUMLUseCase read Get_UseCase;
  end;

// *********************************************************************//
// DispIntf:  IUMLExtensionPointDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DCD8C3D7-F2E9-4A96-A6BA-D350882E52FC}
// *********************************************************************//
  IUMLExtensionPointDisp = dispinterface
    ['{DCD8C3D7-F2E9-4A96-A6BA-D350882E52FC}']
    property Location: WideString dispid 1792;
    property UseCase: IUMLUseCase readonly dispid 1793;
    procedure AddExtend(const Value: IUMLExtend); dispid 1794;
    procedure RemoveExtend(const Value: IUMLExtend); dispid 1795;
    procedure InsertExtend(Index: Integer; const Value: IUMLExtend); dispid 1796;
    procedure DeleteExtend(Index: Integer); dispid 1797;
    function IndexOfExtend(const Value: IUMLExtend): Integer; dispid 1798;
    function GetExtendCount: Integer; dispid 1799;
    function GetExtendAt(Index: Integer): IUMLExtend; dispid 1800;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLInclude
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C67F41D0-7FDE-4738-AB7C-128C6D13B19D}
// *********************************************************************//
  IUMLInclude = interface(IUMLRelationship)
    ['{C67F41D0-7FDE-4738-AB7C-128C6D13B19D}']
    function Get_Addition: IUMLUseCase; safecall;
    procedure Set_Addition(const Value: IUMLUseCase); safecall;
    function Get_Base: IUMLUseCase; safecall;
    procedure Set_Base(const Value: IUMLUseCase); safecall;
    property Addition: IUMLUseCase read Get_Addition write Set_Addition;
    property Base: IUMLUseCase read Get_Base write Set_Base;
  end;

// *********************************************************************//
// DispIntf:  IUMLIncludeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C67F41D0-7FDE-4738-AB7C-128C6D13B19D}
// *********************************************************************//
  IUMLIncludeDisp = dispinterface
    ['{C67F41D0-7FDE-4738-AB7C-128C6D13B19D}']
    property Addition: IUMLUseCase dispid 2048;
    property Base: IUMLUseCase dispid 2049;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLActor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C1A691C9-C5DA-465E-A1B7-1FBBF93429A4}
// *********************************************************************//
  IUMLActor = interface(IUMLClassifier)
    ['{C1A691C9-C5DA-465E-A1B7-1FBBF93429A4}']
  end;

// *********************************************************************//
// DispIntf:  IUMLActorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C1A691C9-C5DA-465E-A1B7-1FBBF93429A4}
// *********************************************************************//
  IUMLActorDisp = dispinterface
    ['{C1A691C9-C5DA-465E-A1B7-1FBBF93429A4}']
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLActionState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8B779E95-4691-43E3-AB1B-75D3E50B6194}
// *********************************************************************//
  IUMLActionState = interface(IUMLSimpleState)
    ['{8B779E95-4691-43E3-AB1B-75D3E50B6194}']
    function Get_IsDynamic: WordBool; safecall;
    procedure Set_IsDynamic(Value: WordBool); safecall;
    function Get_DynamicArguments: WideString; safecall;
    procedure Set_DynamicArguments(const Value: WideString); safecall;
    function Get_DynamicMultiplicity: WideString; safecall;
    procedure Set_DynamicMultiplicity(const Value: WideString); safecall;
    property IsDynamic: WordBool read Get_IsDynamic write Set_IsDynamic;
    property DynamicArguments: WideString read Get_DynamicArguments write Set_DynamicArguments;
    property DynamicMultiplicity: WideString read Get_DynamicMultiplicity write Set_DynamicMultiplicity;
  end;

// *********************************************************************//
// DispIntf:  IUMLActionStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8B779E95-4691-43E3-AB1B-75D3E50B6194}
// *********************************************************************//
  IUMLActionStateDisp = dispinterface
    ['{8B779E95-4691-43E3-AB1B-75D3E50B6194}']
    property IsDynamic: WordBool dispid 2560;
    property DynamicArguments: WideString dispid 2561;
    property DynamicMultiplicity: WideString dispid 2562;
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSubactivityState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4ACA0449-1731-46B5-9DD5-D743E45C08D9}
// *********************************************************************//
  IUMLSubactivityState = interface(IUMLSubmachineState)
    ['{4ACA0449-1731-46B5-9DD5-D743E45C08D9}']
    function Get_IsDynamic: WordBool; safecall;
    procedure Set_IsDynamic(Value: WordBool); safecall;
    function Get_DynamicArguments: WideString; safecall;
    procedure Set_DynamicArguments(const Value: WideString); safecall;
    function Get_DynamicMultiplicity: WideString; safecall;
    procedure Set_DynamicMultiplicity(const Value: WideString); safecall;
    property IsDynamic: WordBool read Get_IsDynamic write Set_IsDynamic;
    property DynamicArguments: WideString read Get_DynamicArguments write Set_DynamicArguments;
    property DynamicMultiplicity: WideString read Get_DynamicMultiplicity write Set_DynamicMultiplicity;
  end;

// *********************************************************************//
// DispIntf:  IUMLSubactivityStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4ACA0449-1731-46B5-9DD5-D743E45C08D9}
// *********************************************************************//
  IUMLSubactivityStateDisp = dispinterface
    ['{4ACA0449-1731-46B5-9DD5-D743E45C08D9}']
    property IsDynamic: WordBool dispid 2816;
    property DynamicArguments: WideString dispid 2817;
    property DynamicMultiplicity: WideString dispid 2818;
    property Submachine: IUMLStateMachine dispid 2560;
    property IsConcurrent: WordBool dispid 2304;
    function GetSubvertexCount: Integer; dispid 2305;
    function GetSubvertexAt(Index: Integer): IUMLStateVertex; dispid 2306;
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLPseudostate
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7DDE6B0B-E3F2-48DC-ADD4-365AB0B1F146}
// *********************************************************************//
  IUMLPseudostate = interface(IUMLStateVertex)
    ['{7DDE6B0B-E3F2-48DC-ADD4-365AB0B1F146}']
    function Get_PseudostateKind: UMLPseudostateKind; safecall;
    procedure Set_PseudostateKind(Value: UMLPseudostateKind); safecall;
    property PseudostateKind: UMLPseudostateKind read Get_PseudostateKind write Set_PseudostateKind;
  end;

// *********************************************************************//
// DispIntf:  IUMLPseudostateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7DDE6B0B-E3F2-48DC-ADD4-365AB0B1F146}
// *********************************************************************//
  IUMLPseudostateDisp = dispinterface
    ['{7DDE6B0B-E3F2-48DC-ADD4-365AB0B1F146}']
    property PseudostateKind: UMLPseudostateKind dispid 2048;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLFinalState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {186475B9-E2BE-46C7-ABD9-3ED471C6064B}
// *********************************************************************//
  IUMLFinalState = interface(IUMLState)
    ['{186475B9-E2BE-46C7-ABD9-3ED471C6064B}']
  end;

// *********************************************************************//
// DispIntf:  IUMLFinalStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {186475B9-E2BE-46C7-ABD9-3ED471C6064B}
// *********************************************************************//
  IUMLFinalStateDisp = dispinterface
    ['{186475B9-E2BE-46C7-ABD9-3ED471C6064B}']
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLUninterpretedAction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {855F3EA4-2D64-4E0E-8D72-01B67A6BA420}
// *********************************************************************//
  IUMLUninterpretedAction = interface(IUMLAction)
    ['{855F3EA4-2D64-4E0E-8D72-01B67A6BA420}']
  end;

// *********************************************************************//
// DispIntf:  IUMLUninterpretedActionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {855F3EA4-2D64-4E0E-8D72-01B67A6BA420}
// *********************************************************************//
  IUMLUninterpretedActionDisp = dispinterface
    ['{855F3EA4-2D64-4E0E-8D72-01B67A6BA420}']
    property Recurrence: WideString dispid 1792;
    property Target: WideString dispid 1793;
    property IsAsynchronous: WordBool dispid 1794;
    property Script: WideString dispid 1795;
    function GetActualArgumentCount: Integer; dispid 1796;
    function GetActualArgumentAt(Index: Integer): IUMLArgument; dispid 1797;
    property ActionSequence: IUMLActionSequence readonly dispid 1798;
    property Stimulus: IUMLStimulus readonly dispid 1799;
    property EntryState: IUMLState readonly dispid 1800;
    property ExitState: IUMLState readonly dispid 1801;
    property Transition: IUMLTransition readonly dispid 1802;
    property DoActivityState: IUMLState readonly dispid 1803;
    property Message: IUMLMessage readonly dispid 1804;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLTimeEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70EE6C02-8633-4CC8-899C-6AC330A961AC}
// *********************************************************************//
  IUMLTimeEvent = interface(IUMLEvent)
    ['{70EE6C02-8633-4CC8-899C-6AC330A961AC}']
    function Get_When: WideString; safecall;
    procedure Set_When(const Value: WideString); safecall;
    property When: WideString read Get_When write Set_When;
  end;

// *********************************************************************//
// DispIntf:  IUMLTimeEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70EE6C02-8633-4CC8-899C-6AC330A961AC}
// *********************************************************************//
  IUMLTimeEventDisp = dispinterface
    ['{70EE6C02-8633-4CC8-899C-6AC330A961AC}']
    property When: WideString dispid 2048;
    function GetParameterCount: Integer; dispid 1792;
    function GetParameterAt(Index: Integer): IUMLParameter; dispid 1793;
    procedure AddState(const Value: IUMLState); dispid 1794;
    procedure RemoveState(const Value: IUMLState); dispid 1795;
    procedure InsertState(Index: Integer; const Value: IUMLState); dispid 1796;
    procedure DeleteState(Index: Integer); dispid 1797;
    function IndexOfState(const Value: IUMLState): Integer; dispid 1798;
    function GetStateCount: Integer; dispid 1799;
    function GetStateAt(Index: Integer): IUMLState; dispid 1800;
    property Transition: IUMLTransition readonly dispid 1801;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLChangeEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E46AAB05-6C9F-4A6B-A30F-6D268FAC76B5}
// *********************************************************************//
  IUMLChangeEvent = interface(IUMLEvent)
    ['{E46AAB05-6C9F-4A6B-A30F-6D268FAC76B5}']
    function Get_ChangeExpression: WideString; safecall;
    procedure Set_ChangeExpression(const Value: WideString); safecall;
    property ChangeExpression: WideString read Get_ChangeExpression write Set_ChangeExpression;
  end;

// *********************************************************************//
// DispIntf:  IUMLChangeEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E46AAB05-6C9F-4A6B-A30F-6D268FAC76B5}
// *********************************************************************//
  IUMLChangeEventDisp = dispinterface
    ['{E46AAB05-6C9F-4A6B-A30F-6D268FAC76B5}']
    property ChangeExpression: WideString dispid 2048;
    function GetParameterCount: Integer; dispid 1792;
    function GetParameterAt(Index: Integer): IUMLParameter; dispid 1793;
    procedure AddState(const Value: IUMLState); dispid 1794;
    procedure RemoveState(const Value: IUMLState); dispid 1795;
    procedure InsertState(Index: Integer; const Value: IUMLState); dispid 1796;
    procedure DeleteState(Index: Integer); dispid 1797;
    function IndexOfState(const Value: IUMLState): Integer; dispid 1798;
    function GetStateCount: Integer; dispid 1799;
    function GetStateAt(Index: Integer): IUMLState; dispid 1800;
    property Transition: IUMLTransition readonly dispid 1801;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLRealization
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9876358A-5057-463F-BA20-77281F5545A7}
// *********************************************************************//
  IUMLRealization = interface(IUMLDependency)
    ['{9876358A-5057-463F-BA20-77281F5545A7}']
  end;

// *********************************************************************//
// DispIntf:  IUMLRealizationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9876358A-5057-463F-BA20-77281F5545A7}
// *********************************************************************//
  IUMLRealizationDisp = dispinterface
    ['{9876358A-5057-463F-BA20-77281F5545A7}']
    property Mapping: WideString dispid 2048;
    property Client: IUMLModelElement dispid 2049;
    property Supplier: IUMLModelElement dispid 2050;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2B9CC497-A44C-426F-A77D-4FE7D6BCCB08}
// *********************************************************************//
  IUMLDiagram = interface(IDiagram)
    ['{2B9CC497-A44C-426F-A77D-4FE7D6BCCB08}']
  end;

// *********************************************************************//
// DispIntf:  IUMLDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2B9CC497-A44C-426F-A77D-4FE7D6BCCB08}
// *********************************************************************//
  IUMLDiagramDisp = dispinterface
    ['{2B9CC497-A44C-426F-A77D-4FE7D6BCCB08}']
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLClassDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA77C1FD-15FE-42E4-966E-3FCE78BA107A}
// *********************************************************************//
  IUMLClassDiagram = interface(IUMLDiagram)
    ['{CA77C1FD-15FE-42E4-966E-3FCE78BA107A}']
  end;

// *********************************************************************//
// DispIntf:  IUMLClassDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CA77C1FD-15FE-42E4-966E-3FCE78BA107A}
// *********************************************************************//
  IUMLClassDiagramDisp = dispinterface
    ['{CA77C1FD-15FE-42E4-966E-3FCE78BA107A}']
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLUseCaseDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B07A1760-517B-4598-A671-4595C89DFB28}
// *********************************************************************//
  IUMLUseCaseDiagram = interface(IUMLDiagram)
    ['{B07A1760-517B-4598-A671-4595C89DFB28}']
  end;

// *********************************************************************//
// DispIntf:  IUMLUseCaseDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B07A1760-517B-4598-A671-4595C89DFB28}
// *********************************************************************//
  IUMLUseCaseDiagramDisp = dispinterface
    ['{B07A1760-517B-4598-A671-4595C89DFB28}']
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSequenceDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {502A2C70-D1AF-41D0-8BAA-6C112C3AD713}
// *********************************************************************//
  IUMLSequenceDiagram = interface(IUMLDiagram)
    ['{502A2C70-D1AF-41D0-8BAA-6C112C3AD713}']
    function Get_ShowSequenceNumber: WordBool; safecall;
    procedure Set_ShowSequenceNumber(Value: WordBool); safecall;
    function Get_MessageSignature: UMLMessageSignatureKind; safecall;
    procedure Set_MessageSignature(Value: UMLMessageSignatureKind); safecall;
    function Get_ShowActivation: WordBool; safecall;
    procedure Set_ShowActivation(Value: WordBool); safecall;
    property ShowSequenceNumber: WordBool read Get_ShowSequenceNumber write Set_ShowSequenceNumber;
    property MessageSignature: UMLMessageSignatureKind read Get_MessageSignature write Set_MessageSignature;
    property ShowActivation: WordBool read Get_ShowActivation write Set_ShowActivation;
  end;

// *********************************************************************//
// DispIntf:  IUMLSequenceDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {502A2C70-D1AF-41D0-8BAA-6C112C3AD713}
// *********************************************************************//
  IUMLSequenceDiagramDisp = dispinterface
    ['{502A2C70-D1AF-41D0-8BAA-6C112C3AD713}']
    property ShowSequenceNumber: WordBool dispid 1536;
    property MessageSignature: UMLMessageSignatureKind dispid 1537;
    property ShowActivation: WordBool dispid 1538;
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSequenceRoleDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6D037C80-5266-45DC-905E-12F977CAFE9C}
// *********************************************************************//
  IUMLSequenceRoleDiagram = interface(IUMLDiagram)
    ['{6D037C80-5266-45DC-905E-12F977CAFE9C}']
    function Get_ShowSequenceNumber: WordBool; safecall;
    procedure Set_ShowSequenceNumber(Value: WordBool); safecall;
    function Get_MessageSignature: UMLMessageSignatureKind; safecall;
    procedure Set_MessageSignature(Value: UMLMessageSignatureKind); safecall;
    function Get_ShowActivation: WordBool; safecall;
    procedure Set_ShowActivation(Value: WordBool); safecall;
    property ShowSequenceNumber: WordBool read Get_ShowSequenceNumber write Set_ShowSequenceNumber;
    property MessageSignature: UMLMessageSignatureKind read Get_MessageSignature write Set_MessageSignature;
    property ShowActivation: WordBool read Get_ShowActivation write Set_ShowActivation;
  end;

// *********************************************************************//
// DispIntf:  IUMLSequenceRoleDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6D037C80-5266-45DC-905E-12F977CAFE9C}
// *********************************************************************//
  IUMLSequenceRoleDiagramDisp = dispinterface
    ['{6D037C80-5266-45DC-905E-12F977CAFE9C}']
    property ShowSequenceNumber: WordBool dispid 1536;
    property MessageSignature: UMLMessageSignatureKind dispid 1537;
    property ShowActivation: WordBool dispid 1538;
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCollaborationDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49455F9C-24E3-4F57-88F1-9BBB513F48E0}
// *********************************************************************//
  IUMLCollaborationDiagram = interface(IUMLDiagram)
    ['{49455F9C-24E3-4F57-88F1-9BBB513F48E0}']
    function Get_ShowSequenceNumber: WordBool; safecall;
    procedure Set_ShowSequenceNumber(Value: WordBool); safecall;
    function Get_MessageSignature: UMLMessageSignatureKind; safecall;
    procedure Set_MessageSignature(Value: UMLMessageSignatureKind); safecall;
    property ShowSequenceNumber: WordBool read Get_ShowSequenceNumber write Set_ShowSequenceNumber;
    property MessageSignature: UMLMessageSignatureKind read Get_MessageSignature write Set_MessageSignature;
  end;

// *********************************************************************//
// DispIntf:  IUMLCollaborationDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {49455F9C-24E3-4F57-88F1-9BBB513F48E0}
// *********************************************************************//
  IUMLCollaborationDiagramDisp = dispinterface
    ['{49455F9C-24E3-4F57-88F1-9BBB513F48E0}']
    property ShowSequenceNumber: WordBool dispid 1536;
    property MessageSignature: UMLMessageSignatureKind dispid 1537;
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCollaborationRoleDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {933DEAAB-41B8-4878-BD29-F7AFCDBE3FF4}
// *********************************************************************//
  IUMLCollaborationRoleDiagram = interface(IUMLDiagram)
    ['{933DEAAB-41B8-4878-BD29-F7AFCDBE3FF4}']
    function Get_ShowSequenceNumber: WordBool; safecall;
    procedure Set_ShowSequenceNumber(Value: WordBool); safecall;
    function Get_MessageSignature: UMLMessageSignatureKind; safecall;
    procedure Set_MessageSignature(Value: UMLMessageSignatureKind); safecall;
    property ShowSequenceNumber: WordBool read Get_ShowSequenceNumber write Set_ShowSequenceNumber;
    property MessageSignature: UMLMessageSignatureKind read Get_MessageSignature write Set_MessageSignature;
  end;

// *********************************************************************//
// DispIntf:  IUMLCollaborationRoleDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {933DEAAB-41B8-4878-BD29-F7AFCDBE3FF4}
// *********************************************************************//
  IUMLCollaborationRoleDiagramDisp = dispinterface
    ['{933DEAAB-41B8-4878-BD29-F7AFCDBE3FF4}']
    property ShowSequenceNumber: WordBool dispid 1536;
    property MessageSignature: UMLMessageSignatureKind dispid 1537;
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLStatechartDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {398285B1-8C5B-4299-8F50-961C3CDC6B03}
// *********************************************************************//
  IUMLStatechartDiagram = interface(IUMLDiagram)
    ['{398285B1-8C5B-4299-8F50-961C3CDC6B03}']
  end;

// *********************************************************************//
// DispIntf:  IUMLStatechartDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {398285B1-8C5B-4299-8F50-961C3CDC6B03}
// *********************************************************************//
  IUMLStatechartDiagramDisp = dispinterface
    ['{398285B1-8C5B-4299-8F50-961C3CDC6B03}']
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLActivityDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {311DD0BA-9DEB-458E-970D-C14B32A8DAB1}
// *********************************************************************//
  IUMLActivityDiagram = interface(IUMLDiagram)
    ['{311DD0BA-9DEB-458E-970D-C14B32A8DAB1}']
  end;

// *********************************************************************//
// DispIntf:  IUMLActivityDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {311DD0BA-9DEB-458E-970D-C14B32A8DAB1}
// *********************************************************************//
  IUMLActivityDiagramDisp = dispinterface
    ['{311DD0BA-9DEB-458E-970D-C14B32A8DAB1}']
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLComponentDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1AA36CE-52E6-4609-8140-10A2B8726B88}
// *********************************************************************//
  IUMLComponentDiagram = interface(IUMLDiagram)
    ['{F1AA36CE-52E6-4609-8140-10A2B8726B88}']
  end;

// *********************************************************************//
// DispIntf:  IUMLComponentDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1AA36CE-52E6-4609-8140-10A2B8726B88}
// *********************************************************************//
  IUMLComponentDiagramDisp = dispinterface
    ['{F1AA36CE-52E6-4609-8140-10A2B8726B88}']
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLDeploymentDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53C5CBBF-7B1F-4E1E-8C47-996A37DFE8DB}
// *********************************************************************//
  IUMLDeploymentDiagram = interface(IUMLDiagram)
    ['{53C5CBBF-7B1F-4E1E-8C47-996A37DFE8DB}']
  end;

// *********************************************************************//
// DispIntf:  IUMLDeploymentDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {53C5CBBF-7B1F-4E1E-8C47-996A37DFE8DB}
// *********************************************************************//
  IUMLDeploymentDiagramDisp = dispinterface
    ['{53C5CBBF-7B1F-4E1E-8C47-996A37DFE8DB}']
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: INodeView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7D78E4E-C16C-4AB4-B104-63749FA618C0}
// *********************************************************************//
  INodeView = interface(IView)
    ['{C7D78E4E-C16C-4AB4-B104-63749FA618C0}']
    function Get_Left: Integer; safecall;
    procedure Set_Left(Value: Integer); safecall;
    function Get_Top: Integer; safecall;
    procedure Set_Top(Value: Integer); safecall;
    function Get_Width: Integer; safecall;
    procedure Set_Width(Value: Integer); safecall;
    function Get_Height: Integer; safecall;
    procedure Set_Height(Value: Integer); safecall;
    function Get_MinWidth: Integer; safecall;
    function Get_MinHeight: Integer; safecall;
    function Get_AutoResize: WordBool; safecall;
    procedure Set_AutoResize(Value: WordBool); safecall;
    property Left: Integer read Get_Left write Set_Left;
    property Top: Integer read Get_Top write Set_Top;
    property Width: Integer read Get_Width write Set_Width;
    property Height: Integer read Get_Height write Set_Height;
    property MinWidth: Integer read Get_MinWidth;
    property MinHeight: Integer read Get_MinHeight;
    property AutoResize: WordBool read Get_AutoResize write Set_AutoResize;
  end;

// *********************************************************************//
// DispIntf:  INodeViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C7D78E4E-C16C-4AB4-B104-63749FA618C0}
// *********************************************************************//
  INodeViewDisp = dispinterface
    ['{C7D78E4E-C16C-4AB4-B104-63749FA618C0}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCustomTextView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {486A14B6-0BD2-4A0D-B9B7-F3E348D76E80}
// *********************************************************************//
  IUMLCustomTextView = interface(INodeView)
    ['{486A14B6-0BD2-4A0D-B9B7-F3E348D76E80}']
    function Get_Text: WideString; safecall;
    procedure Set_Text(const Value: WideString); safecall;
    property Text: WideString read Get_Text write Set_Text;
  end;

// *********************************************************************//
// DispIntf:  IUMLCustomTextViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {486A14B6-0BD2-4A0D-B9B7-F3E348D76E80}
// *********************************************************************//
  IUMLCustomTextViewDisp = dispinterface
    ['{486A14B6-0BD2-4A0D-B9B7-F3E348D76E80}']
    property Text: WideString dispid 1280;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLNoteView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {68D058A9-4660-4760-AF61-0490301FD435}
// *********************************************************************//
  IUMLNoteView = interface(IUMLCustomTextView)
    ['{68D058A9-4660-4760-AF61-0490301FD435}']
  end;

// *********************************************************************//
// DispIntf:  IUMLNoteViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {68D058A9-4660-4760-AF61-0490301FD435}
// *********************************************************************//
  IUMLNoteViewDisp = dispinterface
    ['{68D058A9-4660-4760-AF61-0490301FD435}']
    property Text: WideString dispid 1280;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IEdgeView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {52A711DA-D714-48FB-AD09-FCB30BE90397}
// *********************************************************************//
  IEdgeView = interface(IView)
    ['{52A711DA-D714-48FB-AD09-FCB30BE90397}']
    function Get_LineStyle: LineStyleKind; safecall;
    procedure Set_LineStyle(Value: LineStyleKind); safecall;
    function Get_Points: IPoints; safecall;
    function Get_Tail: IView; safecall;
    function Get_Head: IView; safecall;
    property LineStyle: LineStyleKind read Get_LineStyle write Set_LineStyle;
    property Points: IPoints read Get_Points;
    property Tail: IView read Get_Tail;
    property Head: IView read Get_Head;
  end;

// *********************************************************************//
// DispIntf:  IEdgeViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {52A711DA-D714-48FB-AD09-FCB30BE90397}
// *********************************************************************//
  IEdgeViewDisp = dispinterface
    ['{52A711DA-D714-48FB-AD09-FCB30BE90397}']
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLNoteLinkView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {950FAFA7-3426-4E19-9CB4-2B835B0A61F2}
// *********************************************************************//
  IUMLNoteLinkView = interface(IEdgeView)
    ['{950FAFA7-3426-4E19-9CB4-2B835B0A61F2}']
  end;

// *********************************************************************//
// DispIntf:  IUMLNoteLinkViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {950FAFA7-3426-4E19-9CB4-2B835B0A61F2}
// *********************************************************************//
  IUMLNoteLinkViewDisp = dispinterface
    ['{950FAFA7-3426-4E19-9CB4-2B835B0A61F2}']
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IPoints
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {126FD957-69D8-4491-845E-E4D11827A788}
// *********************************************************************//
  IPoints = interface(IDispatch)
    ['{126FD957-69D8-4491-845E-E4D11827A788}']
    procedure ClearPoints; safecall;
    procedure AddPoint(X: Integer; Y: Integer); safecall;
    procedure InsertPoint(Index: Integer; X: Integer; Y: Integer); safecall;
    procedure DeletePoint(Index: Integer); safecall;
    procedure BeginUpdate; safecall;
    procedure EndUpdate; safecall;
    function GetPointX(Index: Integer): Integer; safecall;
    function GetPointY(Index: Integer): Integer; safecall;
    function GetPointCount: Integer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPointsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {126FD957-69D8-4491-845E-E4D11827A788}
// *********************************************************************//
  IPointsDisp = dispinterface
    ['{126FD957-69D8-4491-845E-E4D11827A788}']
    procedure ClearPoints; dispid 512;
    procedure AddPoint(X: Integer; Y: Integer); dispid 513;
    procedure InsertPoint(Index: Integer; X: Integer; Y: Integer); dispid 514;
    procedure DeletePoint(Index: Integer); dispid 515;
    procedure BeginUpdate; dispid 516;
    procedure EndUpdate; dispid 517;
    function GetPointX(Index: Integer): Integer; dispid 518;
    function GetPointY(Index: Integer): Integer; dispid 519;
    function GetPointCount: Integer; dispid 520;
  end;

// *********************************************************************//
// Interface: IUMLTextView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDA85E7E-50DD-4DB4-97C2-637BCBF83A1C}
// *********************************************************************//
  IUMLTextView = interface(IUMLCustomTextView)
    ['{DDA85E7E-50DD-4DB4-97C2-637BCBF83A1C}']
  end;

// *********************************************************************//
// DispIntf:  IUMLTextViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DDA85E7E-50DD-4DB4-97C2-637BCBF83A1C}
// *********************************************************************//
  IUMLTextViewDisp = dispinterface
    ['{DDA85E7E-50DD-4DB4-97C2-637BCBF83A1C}']
    property Text: WideString dispid 1280;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLGeneralNodeView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B045C105-4F8A-4787-828E-784BFAF03ACC}
// *********************************************************************//
  IUMLGeneralNodeView = interface(INodeView)
    ['{B045C105-4F8A-4787-828E-784BFAF03ACC}']
    function Get_StereotypeDisplay: UMLStereotypeDisplayKind; safecall;
    procedure Set_StereotypeDisplay(Value: UMLStereotypeDisplayKind); safecall;
    function Get_ShowParentName: WordBool; safecall;
    procedure Set_ShowParentName(Value: WordBool); safecall;
    function Get_NameCompartment: IUMLNameCompartmentView; safecall;
    property StereotypeDisplay: UMLStereotypeDisplayKind read Get_StereotypeDisplay write Set_StereotypeDisplay;
    property ShowParentName: WordBool read Get_ShowParentName write Set_ShowParentName;
    property NameCompartment: IUMLNameCompartmentView read Get_NameCompartment;
  end;

// *********************************************************************//
// DispIntf:  IUMLGeneralNodeViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B045C105-4F8A-4787-828E-784BFAF03ACC}
// *********************************************************************//
  IUMLGeneralNodeViewDisp = dispinterface
    ['{B045C105-4F8A-4787-828E-784BFAF03ACC}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLPackageView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {57051984-95C5-4B2E-B496-78CB438F0AB3}
// *********************************************************************//
  IUMLPackageView = interface(IUMLGeneralNodeView)
    ['{57051984-95C5-4B2E-B496-78CB438F0AB3}']
  end;

// *********************************************************************//
// DispIntf:  IUMLPackageViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {57051984-95C5-4B2E-B496-78CB438F0AB3}
// *********************************************************************//
  IUMLPackageViewDisp = dispinterface
    ['{57051984-95C5-4B2E-B496-78CB438F0AB3}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLModelView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0DFD223-DFD3-49DE-918B-06C6A75891C0}
// *********************************************************************//
  IUMLModelView = interface(IUMLPackageView)
    ['{F0DFD223-DFD3-49DE-918B-06C6A75891C0}']
  end;

// *********************************************************************//
// DispIntf:  IUMLModelViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0DFD223-DFD3-49DE-918B-06C6A75891C0}
// *********************************************************************//
  IUMLModelViewDisp = dispinterface
    ['{F0DFD223-DFD3-49DE-918B-06C6A75891C0}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLNameCompartmentView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9D391A60-F42E-4DF3-AD9C-C6FE6245935F}
// *********************************************************************//
  IUMLNameCompartmentView = interface(INodeView)
    ['{9D391A60-F42E-4DF3-AD9C-C6FE6245935F}']
    function Get_NameLabel: ILabelView; safecall;
    function Get_StereotypeLabel: ILabelView; safecall;
    property NameLabel: ILabelView read Get_NameLabel;
    property StereotypeLabel: ILabelView read Get_StereotypeLabel;
  end;

// *********************************************************************//
// DispIntf:  IUMLNameCompartmentViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {9D391A60-F42E-4DF3-AD9C-C6FE6245935F}
// *********************************************************************//
  IUMLNameCompartmentViewDisp = dispinterface
    ['{9D391A60-F42E-4DF3-AD9C-C6FE6245935F}']
    property NameLabel: ILabelView readonly dispid 1280;
    property StereotypeLabel: ILabelView readonly dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: ILabelView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C755D7C-0C48-4E55-835D-304103090950}
// *********************************************************************//
  ILabelView = interface(INodeView)
    ['{0C755D7C-0C48-4E55-835D-304103090950}']
    function Get_Text: WideString; safecall;
    property Text: WideString read Get_Text;
  end;

// *********************************************************************//
// DispIntf:  ILabelViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C755D7C-0C48-4E55-835D-304103090950}
// *********************************************************************//
  ILabelViewDisp = dispinterface
    ['{0C755D7C-0C48-4E55-835D-304103090950}']
    property Text: WideString readonly dispid 1280;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSubsystemView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5FCC824-AFF3-4039-A903-3D90D67A70ED}
// *********************************************************************//
  IUMLSubsystemView = interface(IUMLPackageView)
    ['{C5FCC824-AFF3-4039-A903-3D90D67A70ED}']
    function Get_SuppressOperations: WordBool; safecall;
    procedure Set_SuppressOperations(Value: WordBool); safecall;
    function Get_ShowOperationSignature: WordBool; safecall;
    procedure Set_ShowOperationSignature(Value: WordBool); safecall;
    function Get_ShowCompartmentStereotype: WordBool; safecall;
    procedure Set_ShowCompartmentStereotype(Value: WordBool); safecall;
    function Get_ShowCompartmentVisibility: WordBool; safecall;
    procedure Set_ShowCompartmentVisibility(Value: WordBool); safecall;
    function Get_OperationCompartment: IUMLOperationCompartmentView; safecall;
    property SuppressOperations: WordBool read Get_SuppressOperations write Set_SuppressOperations;
    property ShowOperationSignature: WordBool read Get_ShowOperationSignature write Set_ShowOperationSignature;
    property ShowCompartmentStereotype: WordBool read Get_ShowCompartmentStereotype write Set_ShowCompartmentStereotype;
    property ShowCompartmentVisibility: WordBool read Get_ShowCompartmentVisibility write Set_ShowCompartmentVisibility;
    property OperationCompartment: IUMLOperationCompartmentView read Get_OperationCompartment;
  end;

// *********************************************************************//
// DispIntf:  IUMLSubsystemViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5FCC824-AFF3-4039-A903-3D90D67A70ED}
// *********************************************************************//
  IUMLSubsystemViewDisp = dispinterface
    ['{C5FCC824-AFF3-4039-A903-3D90D67A70ED}']
    property SuppressOperations: WordBool dispid 1792;
    property ShowOperationSignature: WordBool dispid 1793;
    property ShowCompartmentStereotype: WordBool dispid 1794;
    property ShowCompartmentVisibility: WordBool dispid 1795;
    property OperationCompartment: IUMLOperationCompartmentView readonly dispid 1796;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLListCompartmentView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D02D2EB5-5F1B-4222-BF9F-4AF710E6FC61}
// *********************************************************************//
  IUMLListCompartmentView = interface(INodeView)
    ['{D02D2EB5-5F1B-4222-BF9F-4AF710E6FC61}']
  end;

// *********************************************************************//
// DispIntf:  IUMLListCompartmentViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D02D2EB5-5F1B-4222-BF9F-4AF710E6FC61}
// *********************************************************************//
  IUMLListCompartmentViewDisp = dispinterface
    ['{D02D2EB5-5F1B-4222-BF9F-4AF710E6FC61}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLOperationCompartmentView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BCD28A7F-3FBD-4597-BF81-789E7A300832}
// *********************************************************************//
  IUMLOperationCompartmentView = interface(IUMLListCompartmentView)
    ['{BCD28A7F-3FBD-4597-BF81-789E7A300832}']
  end;

// *********************************************************************//
// DispIntf:  IUMLOperationCompartmentViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BCD28A7F-3FBD-4597-BF81-789E7A300832}
// *********************************************************************//
  IUMLOperationCompartmentViewDisp = dispinterface
    ['{BCD28A7F-3FBD-4597-BF81-789E7A300832}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLClassifierView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F620BE5-CD08-454E-8894-263827DF5A07}
// *********************************************************************//
  IUMLClassifierView = interface(IUMLGeneralNodeView)
    ['{2F620BE5-CD08-454E-8894-263827DF5A07}']
    function Get_SuppressAttributes: WordBool; safecall;
    procedure Set_SuppressAttributes(Value: WordBool); safecall;
    function Get_SuppressOperations: WordBool; safecall;
    procedure Set_SuppressOperations(Value: WordBool); safecall;
    function Get_ShowOperationSignature: WordBool; safecall;
    procedure Set_ShowOperationSignature(Value: WordBool); safecall;
    function Get_ShowCompartmentStereotype: WordBool; safecall;
    procedure Set_ShowCompartmentStereotype(Value: WordBool); safecall;
    function Get_ShowCompartmentVisibility: WordBool; safecall;
    procedure Set_ShowCompartmentVisibility(Value: WordBool); safecall;
    function Get_OperationCompartment: IUMLOperationCompartmentView; safecall;
    function Get_AttributeCompartment: IUMLAttributeCompartmentView; safecall;
    property SuppressAttributes: WordBool read Get_SuppressAttributes write Set_SuppressAttributes;
    property SuppressOperations: WordBool read Get_SuppressOperations write Set_SuppressOperations;
    property ShowOperationSignature: WordBool read Get_ShowOperationSignature write Set_ShowOperationSignature;
    property ShowCompartmentStereotype: WordBool read Get_ShowCompartmentStereotype write Set_ShowCompartmentStereotype;
    property ShowCompartmentVisibility: WordBool read Get_ShowCompartmentVisibility write Set_ShowCompartmentVisibility;
    property OperationCompartment: IUMLOperationCompartmentView read Get_OperationCompartment;
    property AttributeCompartment: IUMLAttributeCompartmentView read Get_AttributeCompartment;
  end;

// *********************************************************************//
// DispIntf:  IUMLClassifierViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2F620BE5-CD08-454E-8894-263827DF5A07}
// *********************************************************************//
  IUMLClassifierViewDisp = dispinterface
    ['{2F620BE5-CD08-454E-8894-263827DF5A07}']
    property SuppressAttributes: WordBool dispid 1536;
    property SuppressOperations: WordBool dispid 1537;
    property ShowOperationSignature: WordBool dispid 1538;
    property ShowCompartmentStereotype: WordBool dispid 1539;
    property ShowCompartmentVisibility: WordBool dispid 1540;
    property OperationCompartment: IUMLOperationCompartmentView readonly dispid 1541;
    property AttributeCompartment: IUMLAttributeCompartmentView readonly dispid 1542;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLClassView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6FE2F2EC-12DE-4DAA-AE4F-AA8D26BFE805}
// *********************************************************************//
  IUMLClassView = interface(IUMLClassifierView)
    ['{6FE2F2EC-12DE-4DAA-AE4F-AA8D26BFE805}']
    function Get_TemplateParameterCompartment: IUMLTemplateParameterCompartmentView; safecall;
    property TemplateParameterCompartment: IUMLTemplateParameterCompartmentView read Get_TemplateParameterCompartment;
  end;

// *********************************************************************//
// DispIntf:  IUMLClassViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6FE2F2EC-12DE-4DAA-AE4F-AA8D26BFE805}
// *********************************************************************//
  IUMLClassViewDisp = dispinterface
    ['{6FE2F2EC-12DE-4DAA-AE4F-AA8D26BFE805}']
    property TemplateParameterCompartment: IUMLTemplateParameterCompartmentView readonly dispid 1792;
    property SuppressAttributes: WordBool dispid 1536;
    property SuppressOperations: WordBool dispid 1537;
    property ShowOperationSignature: WordBool dispid 1538;
    property ShowCompartmentStereotype: WordBool dispid 1539;
    property ShowCompartmentVisibility: WordBool dispid 1540;
    property OperationCompartment: IUMLOperationCompartmentView readonly dispid 1541;
    property AttributeCompartment: IUMLAttributeCompartmentView readonly dispid 1542;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAttributeCompartmentView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64705E84-9117-4CB6-AE1D-60A7A6FB19F5}
// *********************************************************************//
  IUMLAttributeCompartmentView = interface(IUMLListCompartmentView)
    ['{64705E84-9117-4CB6-AE1D-60A7A6FB19F5}']
  end;

// *********************************************************************//
// DispIntf:  IUMLAttributeCompartmentViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64705E84-9117-4CB6-AE1D-60A7A6FB19F5}
// *********************************************************************//
  IUMLAttributeCompartmentViewDisp = dispinterface
    ['{64705E84-9117-4CB6-AE1D-60A7A6FB19F5}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLTemplateParameterCompartmentView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4DF037E5-ECD5-4BEA-9E13-0094C44AF164}
// *********************************************************************//
  IUMLTemplateParameterCompartmentView = interface(IUMLListCompartmentView)
    ['{4DF037E5-ECD5-4BEA-9E13-0094C44AF164}']
  end;

// *********************************************************************//
// DispIntf:  IUMLTemplateParameterCompartmentViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4DF037E5-ECD5-4BEA-9E13-0094C44AF164}
// *********************************************************************//
  IUMLTemplateParameterCompartmentViewDisp = dispinterface
    ['{4DF037E5-ECD5-4BEA-9E13-0094C44AF164}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLInterfaceView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FB3A0DB3-4A94-4CE1-BDA6-D4D11A68723A}
// *********************************************************************//
  IUMLInterfaceView = interface(IUMLClassifierView)
    ['{FB3A0DB3-4A94-4CE1-BDA6-D4D11A68723A}']
  end;

// *********************************************************************//
// DispIntf:  IUMLInterfaceViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FB3A0DB3-4A94-4CE1-BDA6-D4D11A68723A}
// *********************************************************************//
  IUMLInterfaceViewDisp = dispinterface
    ['{FB3A0DB3-4A94-4CE1-BDA6-D4D11A68723A}']
    property SuppressAttributes: WordBool dispid 1536;
    property SuppressOperations: WordBool dispid 1537;
    property ShowOperationSignature: WordBool dispid 1538;
    property ShowCompartmentStereotype: WordBool dispid 1539;
    property ShowCompartmentVisibility: WordBool dispid 1540;
    property OperationCompartment: IUMLOperationCompartmentView readonly dispid 1541;
    property AttributeCompartment: IUMLAttributeCompartmentView readonly dispid 1542;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLEnumerationView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD624304-76F9-46DF-A34F-4C5418A1F7D5}
// *********************************************************************//
  IUMLEnumerationView = interface(IUMLGeneralNodeView)
    ['{DD624304-76F9-46DF-A34F-4C5418A1F7D5}']
    function Get_SuppressLiterals: WordBool; safecall;
    procedure Set_SuppressLiterals(Value: WordBool); safecall;
    function Get_SuppressOperations: WordBool; safecall;
    procedure Set_SuppressOperations(Value: WordBool); safecall;
    function Get_ShowOperationSignature: WordBool; safecall;
    procedure Set_ShowOperationSignature(Value: WordBool); safecall;
    function Get_ShowCompartmentStereotype: WordBool; safecall;
    procedure Set_ShowCompartmentStereotype(Value: WordBool); safecall;
    function Get_ShowCompartmentVisibility: WordBool; safecall;
    procedure Set_ShowCompartmentVisibility(Value: WordBool); safecall;
    function Get_EnumerationLiteralCompartment: IUMLEnumerationLiteralCompartmentView; safecall;
    function Get_OperationCompartment: IUMLOperationCompartmentView; safecall;
    property SuppressLiterals: WordBool read Get_SuppressLiterals write Set_SuppressLiterals;
    property SuppressOperations: WordBool read Get_SuppressOperations write Set_SuppressOperations;
    property ShowOperationSignature: WordBool read Get_ShowOperationSignature write Set_ShowOperationSignature;
    property ShowCompartmentStereotype: WordBool read Get_ShowCompartmentStereotype write Set_ShowCompartmentStereotype;
    property ShowCompartmentVisibility: WordBool read Get_ShowCompartmentVisibility write Set_ShowCompartmentVisibility;
    property EnumerationLiteralCompartment: IUMLEnumerationLiteralCompartmentView read Get_EnumerationLiteralCompartment;
    property OperationCompartment: IUMLOperationCompartmentView read Get_OperationCompartment;
  end;

// *********************************************************************//
// DispIntf:  IUMLEnumerationViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DD624304-76F9-46DF-A34F-4C5418A1F7D5}
// *********************************************************************//
  IUMLEnumerationViewDisp = dispinterface
    ['{DD624304-76F9-46DF-A34F-4C5418A1F7D5}']
    property SuppressLiterals: WordBool dispid 1536;
    property SuppressOperations: WordBool dispid 1537;
    property ShowOperationSignature: WordBool dispid 1538;
    property ShowCompartmentStereotype: WordBool dispid 1539;
    property ShowCompartmentVisibility: WordBool dispid 1540;
    property EnumerationLiteralCompartment: IUMLEnumerationLiteralCompartmentView readonly dispid 1541;
    property OperationCompartment: IUMLOperationCompartmentView readonly dispid 1542;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLEnumerationLiteralCompartmentView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2CFC5BD-F486-4426-9FB4-A42BD9B55693}
// *********************************************************************//
  IUMLEnumerationLiteralCompartmentView = interface(IUMLListCompartmentView)
    ['{D2CFC5BD-F486-4426-9FB4-A42BD9B55693}']
  end;

// *********************************************************************//
// DispIntf:  IUMLEnumerationLiteralCompartmentViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2CFC5BD-F486-4426-9FB4-A42BD9B55693}
// *********************************************************************//
  IUMLEnumerationLiteralCompartmentViewDisp = dispinterface
    ['{D2CFC5BD-F486-4426-9FB4-A42BD9B55693}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSignalView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C873801-92C7-41EA-B028-9F77673124C0}
// *********************************************************************//
  IUMLSignalView = interface(IUMLClassifierView)
    ['{0C873801-92C7-41EA-B028-9F77673124C0}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSignalViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C873801-92C7-41EA-B028-9F77673124C0}
// *********************************************************************//
  IUMLSignalViewDisp = dispinterface
    ['{0C873801-92C7-41EA-B028-9F77673124C0}']
    property SuppressAttributes: WordBool dispid 1536;
    property SuppressOperations: WordBool dispid 1537;
    property ShowOperationSignature: WordBool dispid 1538;
    property ShowCompartmentStereotype: WordBool dispid 1539;
    property ShowCompartmentVisibility: WordBool dispid 1540;
    property OperationCompartment: IUMLOperationCompartmentView readonly dispid 1541;
    property AttributeCompartment: IUMLAttributeCompartmentView readonly dispid 1542;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLExceptionView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3671CB0-A740-4F7C-85C3-8FDCA2A259CE}
// *********************************************************************//
  IUMLExceptionView = interface(IUMLSignalView)
    ['{E3671CB0-A740-4F7C-85C3-8FDCA2A259CE}']
  end;

// *********************************************************************//
// DispIntf:  IUMLExceptionViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E3671CB0-A740-4F7C-85C3-8FDCA2A259CE}
// *********************************************************************//
  IUMLExceptionViewDisp = dispinterface
    ['{E3671CB0-A740-4F7C-85C3-8FDCA2A259CE}']
    property SuppressAttributes: WordBool dispid 1536;
    property SuppressOperations: WordBool dispid 1537;
    property ShowOperationSignature: WordBool dispid 1538;
    property ShowCompartmentStereotype: WordBool dispid 1539;
    property ShowCompartmentVisibility: WordBool dispid 1540;
    property OperationCompartment: IUMLOperationCompartmentView readonly dispid 1541;
    property AttributeCompartment: IUMLAttributeCompartmentView readonly dispid 1542;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCustomComponentView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DABA74F5-B17F-493E-A026-C910C6D03D9B}
// *********************************************************************//
  IUMLCustomComponentView = interface(IUMLGeneralNodeView)
    ['{DABA74F5-B17F-493E-A026-C910C6D03D9B}']
  end;

// *********************************************************************//
// DispIntf:  IUMLCustomComponentViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DABA74F5-B17F-493E-A026-C910C6D03D9B}
// *********************************************************************//
  IUMLCustomComponentViewDisp = dispinterface
    ['{DABA74F5-B17F-493E-A026-C910C6D03D9B}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLComponentView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE3A8A08-3DBE-4398-BFD4-B1DAEA732A2F}
// *********************************************************************//
  IUMLComponentView = interface(IUMLCustomComponentView)
    ['{FE3A8A08-3DBE-4398-BFD4-B1DAEA732A2F}']
  end;

// *********************************************************************//
// DispIntf:  IUMLComponentViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE3A8A08-3DBE-4398-BFD4-B1DAEA732A2F}
// *********************************************************************//
  IUMLComponentViewDisp = dispinterface
    ['{FE3A8A08-3DBE-4398-BFD4-B1DAEA732A2F}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLComponentInstanceView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3836CB6B-38F9-4D61-90C5-5CD633892B85}
// *********************************************************************//
  IUMLComponentInstanceView = interface(IUMLCustomComponentView)
    ['{3836CB6B-38F9-4D61-90C5-5CD633892B85}']
  end;

// *********************************************************************//
// DispIntf:  IUMLComponentInstanceViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3836CB6B-38F9-4D61-90C5-5CD633892B85}
// *********************************************************************//
  IUMLComponentInstanceViewDisp = dispinterface
    ['{3836CB6B-38F9-4D61-90C5-5CD633892B85}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCustomNodeView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22684659-3327-491F-837C-D0F85E81948B}
// *********************************************************************//
  IUMLCustomNodeView = interface(IUMLGeneralNodeView)
    ['{22684659-3327-491F-837C-D0F85E81948B}']
  end;

// *********************************************************************//
// DispIntf:  IUMLCustomNodeViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22684659-3327-491F-837C-D0F85E81948B}
// *********************************************************************//
  IUMLCustomNodeViewDisp = dispinterface
    ['{22684659-3327-491F-837C-D0F85E81948B}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLNodeView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5308B1D8-2616-439F-93D3-1F02A60CB9B7}
// *********************************************************************//
  IUMLNodeView = interface(IUMLCustomNodeView)
    ['{5308B1D8-2616-439F-93D3-1F02A60CB9B7}']
  end;

// *********************************************************************//
// DispIntf:  IUMLNodeViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5308B1D8-2616-439F-93D3-1F02A60CB9B7}
// *********************************************************************//
  IUMLNodeViewDisp = dispinterface
    ['{5308B1D8-2616-439F-93D3-1F02A60CB9B7}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLNodeInstanceView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5B6B755-FF51-4C43-B3BB-84598426E15C}
// *********************************************************************//
  IUMLNodeInstanceView = interface(IUMLCustomNodeView)
    ['{A5B6B755-FF51-4C43-B3BB-84598426E15C}']
  end;

// *********************************************************************//
// DispIntf:  IUMLNodeInstanceViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5B6B755-FF51-4C43-B3BB-84598426E15C}
// *********************************************************************//
  IUMLNodeInstanceViewDisp = dispinterface
    ['{A5B6B755-FF51-4C43-B3BB-84598426E15C}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLActorView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2109A6D0-4843-4D1B-B0FE-275A1B138FCE}
// *********************************************************************//
  IUMLActorView = interface(IUMLClassifierView)
    ['{2109A6D0-4843-4D1B-B0FE-275A1B138FCE}']
  end;

// *********************************************************************//
// DispIntf:  IUMLActorViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {2109A6D0-4843-4D1B-B0FE-275A1B138FCE}
// *********************************************************************//
  IUMLActorViewDisp = dispinterface
    ['{2109A6D0-4843-4D1B-B0FE-275A1B138FCE}']
    property SuppressAttributes: WordBool dispid 1536;
    property SuppressOperations: WordBool dispid 1537;
    property ShowOperationSignature: WordBool dispid 1538;
    property ShowCompartmentStereotype: WordBool dispid 1539;
    property ShowCompartmentVisibility: WordBool dispid 1540;
    property OperationCompartment: IUMLOperationCompartmentView readonly dispid 1541;
    property AttributeCompartment: IUMLAttributeCompartmentView readonly dispid 1542;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLUseCaseView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB2CF2ED-865A-4D83-9ED1-450D754549F5}
// *********************************************************************//
  IUMLUseCaseView = interface(IUMLClassifierView)
    ['{CB2CF2ED-865A-4D83-9ED1-450D754549F5}']
  end;

// *********************************************************************//
// DispIntf:  IUMLUseCaseViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB2CF2ED-865A-4D83-9ED1-450D754549F5}
// *********************************************************************//
  IUMLUseCaseViewDisp = dispinterface
    ['{CB2CF2ED-865A-4D83-9ED1-450D754549F5}']
    property SuppressAttributes: WordBool dispid 1536;
    property SuppressOperations: WordBool dispid 1537;
    property ShowOperationSignature: WordBool dispid 1538;
    property ShowCompartmentStereotype: WordBool dispid 1539;
    property ShowCompartmentVisibility: WordBool dispid 1540;
    property OperationCompartment: IUMLOperationCompartmentView readonly dispid 1541;
    property AttributeCompartment: IUMLAttributeCompartmentView readonly dispid 1542;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCollaborationView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C363EF95-BFC7-48A7-99F1-24330608B536}
// *********************************************************************//
  IUMLCollaborationView = interface(IUMLGeneralNodeView)
    ['{C363EF95-BFC7-48A7-99F1-24330608B536}']
    function Get_TemplateParameterCompartment: IUMLTemplateParameterCompartmentView; safecall;
    property TemplateParameterCompartment: IUMLTemplateParameterCompartmentView read Get_TemplateParameterCompartment;
  end;

// *********************************************************************//
// DispIntf:  IUMLCollaborationViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C363EF95-BFC7-48A7-99F1-24330608B536}
// *********************************************************************//
  IUMLCollaborationViewDisp = dispinterface
    ['{C363EF95-BFC7-48A7-99F1-24330608B536}']
    property TemplateParameterCompartment: IUMLTemplateParameterCompartmentView readonly dispid 1536;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCollaborationInstanceSetView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6569588B-FEC5-4A19-A461-E67C81D39EEC}
// *********************************************************************//
  IUMLCollaborationInstanceSetView = interface(IUMLGeneralNodeView)
    ['{6569588B-FEC5-4A19-A461-E67C81D39EEC}']
  end;

// *********************************************************************//
// DispIntf:  IUMLCollaborationInstanceSetViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {6569588B-FEC5-4A19-A461-E67C81D39EEC}
// *********************************************************************//
  IUMLCollaborationInstanceSetViewDisp = dispinterface
    ['{6569588B-FEC5-4A19-A461-E67C81D39EEC}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLGeneralEdgeView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1AAC9637-3A63-4371-AD7B-D405E4573F5E}
// *********************************************************************//
  IUMLGeneralEdgeView = interface(IEdgeView)
    ['{1AAC9637-3A63-4371-AD7B-D405E4573F5E}']
    function Get_NameLabel: IEdgeLabelView; safecall;
    function Get_StereotypeLabel: IEdgeLabelView; safecall;
    property NameLabel: IEdgeLabelView read Get_NameLabel;
    property StereotypeLabel: IEdgeLabelView read Get_StereotypeLabel;
  end;

// *********************************************************************//
// DispIntf:  IUMLGeneralEdgeViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1AAC9637-3A63-4371-AD7B-D405E4573F5E}
// *********************************************************************//
  IUMLGeneralEdgeViewDisp = dispinterface
    ['{1AAC9637-3A63-4371-AD7B-D405E4573F5E}']
    property NameLabel: IEdgeLabelView readonly dispid 1280;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1281;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLGeneralizationView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {10E06392-85C9-47FC-8966-FCE94CE5C121}
// *********************************************************************//
  IUMLGeneralizationView = interface(IUMLGeneralEdgeView)
    ['{10E06392-85C9-47FC-8966-FCE94CE5C121}']
  end;

// *********************************************************************//
// DispIntf:  IUMLGeneralizationViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {10E06392-85C9-47FC-8966-FCE94CE5C121}
// *********************************************************************//
  IUMLGeneralizationViewDisp = dispinterface
    ['{10E06392-85C9-47FC-8966-FCE94CE5C121}']
    property NameLabel: IEdgeLabelView readonly dispid 1280;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1281;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IParasiticView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06218FE6-D40E-4460-A3A5-CF8C33D591F1}
// *********************************************************************//
  IParasiticView = interface(INodeView)
    ['{06218FE6-D40E-4460-A3A5-CF8C33D591F1}']
    function Get_Alpha: Double; safecall;
    procedure Set_Alpha(Value: Double); safecall;
    function Get_Distance: Double; safecall;
    procedure Set_Distance(Value: Double); safecall;
    property Alpha: Double read Get_Alpha write Set_Alpha;
    property Distance: Double read Get_Distance write Set_Distance;
  end;

// *********************************************************************//
// DispIntf:  IParasiticViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06218FE6-D40E-4460-A3A5-CF8C33D591F1}
// *********************************************************************//
  IParasiticViewDisp = dispinterface
    ['{06218FE6-D40E-4460-A3A5-CF8C33D591F1}']
    property Alpha: Double dispid 1280;
    property Distance: Double dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IEdgeParasiticView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE4C988B-5A54-449C-A1F7-32A39FDBBC63}
// *********************************************************************//
  IEdgeParasiticView = interface(IParasiticView)
    ['{FE4C988B-5A54-449C-A1F7-32A39FDBBC63}']
    function Get_EdgePosition: EdgePositionKind; safecall;
    function Get_HostEdge: IEdgeView; safecall;
    property EdgePosition: EdgePositionKind read Get_EdgePosition;
    property HostEdge: IEdgeView read Get_HostEdge;
  end;

// *********************************************************************//
// DispIntf:  IEdgeParasiticViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FE4C988B-5A54-449C-A1F7-32A39FDBBC63}
// *********************************************************************//
  IEdgeParasiticViewDisp = dispinterface
    ['{FE4C988B-5A54-449C-A1F7-32A39FDBBC63}']
    property EdgePosition: EdgePositionKind readonly dispid 1536;
    property HostEdge: IEdgeView readonly dispid 1537;
    property Alpha: Double dispid 1280;
    property Distance: Double dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IEdgeLabelView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5278941B-618A-4A6B-9FA1-1845D9F99EB9}
// *********************************************************************//
  IEdgeLabelView = interface(IEdgeParasiticView)
    ['{5278941B-618A-4A6B-9FA1-1845D9F99EB9}']
    function Get_Text: WideString; safecall;
    property Text: WideString read Get_Text;
  end;

// *********************************************************************//
// DispIntf:  IEdgeLabelViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5278941B-618A-4A6B-9FA1-1845D9F99EB9}
// *********************************************************************//
  IEdgeLabelViewDisp = dispinterface
    ['{5278941B-618A-4A6B-9FA1-1845D9F99EB9}']
    property Text: WideString readonly dispid 1792;
    property EdgePosition: EdgePositionKind readonly dispid 1536;
    property HostEdge: IEdgeView readonly dispid 1537;
    property Alpha: Double dispid 1280;
    property Distance: Double dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAssociationView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F00A2103-3EAA-432A-8383-D09243F47D81}
// *********************************************************************//
  IUMLAssociationView = interface(IUMLGeneralEdgeView)
    ['{F00A2103-3EAA-432A-8383-D09243F47D81}']
    function Get_ShowCompartmentStereotype: WordBool; safecall;
    procedure Set_ShowCompartmentStereotype(Value: WordBool); safecall;
    function Get_ShowCompartmentVisibility: WordBool; safecall;
    procedure Set_ShowCompartmentVisibility(Value: WordBool); safecall;
    function Get_HeadRoleNameLabel: IEdgeLabelView; safecall;
    function Get_TailRoleNameLabel: IEdgeLabelView; safecall;
    function Get_HeadMultiplicityLabel: IEdgeLabelView; safecall;
    function Get_TailMultiplicityLabel: IEdgeLabelView; safecall;
    function Get_TailPropertyLabel: IEdgeLabelView; safecall;
    function Get_HeadPropertyLabel: IEdgeLabelView; safecall;
    function Get_HeadQualifierCompartment: IUMLQualifierCompartmentView; safecall;
    function Get_TailQualifierCompartment: IUMLQualifierCompartmentView; safecall;
    property ShowCompartmentStereotype: WordBool read Get_ShowCompartmentStereotype write Set_ShowCompartmentStereotype;
    property ShowCompartmentVisibility: WordBool read Get_ShowCompartmentVisibility write Set_ShowCompartmentVisibility;
    property HeadRoleNameLabel: IEdgeLabelView read Get_HeadRoleNameLabel;
    property TailRoleNameLabel: IEdgeLabelView read Get_TailRoleNameLabel;
    property HeadMultiplicityLabel: IEdgeLabelView read Get_HeadMultiplicityLabel;
    property TailMultiplicityLabel: IEdgeLabelView read Get_TailMultiplicityLabel;
    property TailPropertyLabel: IEdgeLabelView read Get_TailPropertyLabel;
    property HeadPropertyLabel: IEdgeLabelView read Get_HeadPropertyLabel;
    property HeadQualifierCompartment: IUMLQualifierCompartmentView read Get_HeadQualifierCompartment;
    property TailQualifierCompartment: IUMLQualifierCompartmentView read Get_TailQualifierCompartment;
  end;

// *********************************************************************//
// DispIntf:  IUMLAssociationViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F00A2103-3EAA-432A-8383-D09243F47D81}
// *********************************************************************//
  IUMLAssociationViewDisp = dispinterface
    ['{F00A2103-3EAA-432A-8383-D09243F47D81}']
    property ShowCompartmentStereotype: WordBool dispid 1536;
    property ShowCompartmentVisibility: WordBool dispid 1537;
    property HeadRoleNameLabel: IEdgeLabelView readonly dispid 1538;
    property TailRoleNameLabel: IEdgeLabelView readonly dispid 1539;
    property HeadMultiplicityLabel: IEdgeLabelView readonly dispid 1540;
    property TailMultiplicityLabel: IEdgeLabelView readonly dispid 1541;
    property TailPropertyLabel: IEdgeLabelView readonly dispid 1542;
    property HeadPropertyLabel: IEdgeLabelView readonly dispid 1543;
    property HeadQualifierCompartment: IUMLQualifierCompartmentView readonly dispid 1544;
    property TailQualifierCompartment: IUMLQualifierCompartmentView readonly dispid 1545;
    property NameLabel: IEdgeLabelView readonly dispid 1280;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1281;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLQualifierCompartmentView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F52E5AED-6522-4583-8C25-185C57532C9A}
// *********************************************************************//
  IUMLQualifierCompartmentView = interface(IUMLListCompartmentView)
    ['{F52E5AED-6522-4583-8C25-185C57532C9A}']
  end;

// *********************************************************************//
// DispIntf:  IUMLQualifierCompartmentViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F52E5AED-6522-4583-8C25-185C57532C9A}
// *********************************************************************//
  IUMLQualifierCompartmentViewDisp = dispinterface
    ['{F52E5AED-6522-4583-8C25-185C57532C9A}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAssociationClassView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A37D798D-99F1-4CF3-A5EF-22183097EF8F}
// *********************************************************************//
  IUMLAssociationClassView = interface(IEdgeView)
    ['{A37D798D-99F1-4CF3-A5EF-22183097EF8F}']
  end;

// *********************************************************************//
// DispIntf:  IUMLAssociationClassViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A37D798D-99F1-4CF3-A5EF-22183097EF8F}
// *********************************************************************//
  IUMLAssociationClassViewDisp = dispinterface
    ['{A37D798D-99F1-4CF3-A5EF-22183097EF8F}']
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLDependencyView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB2BF5BD-91A5-4D61-B84A-1C6C6B0E9558}
// *********************************************************************//
  IUMLDependencyView = interface(IUMLGeneralEdgeView)
    ['{CB2BF5BD-91A5-4D61-B84A-1C6C6B0E9558}']
  end;

// *********************************************************************//
// DispIntf:  IUMLDependencyViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CB2BF5BD-91A5-4D61-B84A-1C6C6B0E9558}
// *********************************************************************//
  IUMLDependencyViewDisp = dispinterface
    ['{CB2BF5BD-91A5-4D61-B84A-1C6C6B0E9558}']
    property NameLabel: IEdgeLabelView readonly dispid 1280;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1281;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLRealizationView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B05D874C-CEA9-496D-9356-69461615E86C}
// *********************************************************************//
  IUMLRealizationView = interface(IUMLGeneralEdgeView)
    ['{B05D874C-CEA9-496D-9356-69461615E86C}']
  end;

// *********************************************************************//
// DispIntf:  IUMLRealizationViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B05D874C-CEA9-496D-9356-69461615E86C}
// *********************************************************************//
  IUMLRealizationViewDisp = dispinterface
    ['{B05D874C-CEA9-496D-9356-69461615E86C}']
    property NameLabel: IEdgeLabelView readonly dispid 1280;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1281;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLIncludeView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C1C5A82-D0BD-4328-90C5-AA8B1A221923}
// *********************************************************************//
  IUMLIncludeView = interface(IUMLGeneralEdgeView)
    ['{0C1C5A82-D0BD-4328-90C5-AA8B1A221923}']
  end;

// *********************************************************************//
// DispIntf:  IUMLIncludeViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0C1C5A82-D0BD-4328-90C5-AA8B1A221923}
// *********************************************************************//
  IUMLIncludeViewDisp = dispinterface
    ['{0C1C5A82-D0BD-4328-90C5-AA8B1A221923}']
    property NameLabel: IEdgeLabelView readonly dispid 1280;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1281;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLExtendView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38A73FC4-9B35-40F6-B475-E228C7B10436}
// *********************************************************************//
  IUMLExtendView = interface(IUMLGeneralEdgeView)
    ['{38A73FC4-9B35-40F6-B475-E228C7B10436}']
  end;

// *********************************************************************//
// DispIntf:  IUMLExtendViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {38A73FC4-9B35-40F6-B475-E228C7B10436}
// *********************************************************************//
  IUMLExtendViewDisp = dispinterface
    ['{38A73FC4-9B35-40F6-B475-E228C7B10436}']
    property NameLabel: IEdgeLabelView readonly dispid 1280;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1281;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCustomColObjectView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B22E45C0-E802-4D21-89D8-760FE1FBFD9E}
// *********************************************************************//
  IUMLCustomColObjectView = interface(IUMLGeneralNodeView)
    ['{B22E45C0-E802-4D21-89D8-760FE1FBFD9E}']
  end;

// *********************************************************************//
// DispIntf:  IUMLCustomColObjectViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B22E45C0-E802-4D21-89D8-760FE1FBFD9E}
// *********************************************************************//
  IUMLCustomColObjectViewDisp = dispinterface
    ['{B22E45C0-E802-4D21-89D8-760FE1FBFD9E}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLColObjectView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {31F026B0-8BB5-4E95-A1CA-ADD9C25C2872}
// *********************************************************************//
  IUMLColObjectView = interface(IUMLCustomColObjectView)
    ['{31F026B0-8BB5-4E95-A1CA-ADD9C25C2872}']
  end;

// *********************************************************************//
// DispIntf:  IUMLColObjectViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {31F026B0-8BB5-4E95-A1CA-ADD9C25C2872}
// *********************************************************************//
  IUMLColObjectViewDisp = dispinterface
    ['{31F026B0-8BB5-4E95-A1CA-ADD9C25C2872}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {07D46F21-08E3-485D-B596-FA796510FC36}
// *********************************************************************//
  IUMLDiagramView = interface(IDiagramView)
    ['{07D46F21-08E3-485D-B596-FA796510FC36}']
  end;

// *********************************************************************//
// DispIntf:  IUMLDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {07D46F21-08E3-485D-B596-FA796510FC36}
// *********************************************************************//
  IUMLDiagramViewDisp = dispinterface
    ['{07D46F21-08E3-485D-B596-FA796510FC36}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSequenceDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A219F10C-EA93-447F-B3D1-86B93E27C610}
// *********************************************************************//
  IUMLSequenceDiagramView = interface(IUMLDiagramView)
    ['{A219F10C-EA93-447F-B3D1-86B93E27C610}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSequenceDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A219F10C-EA93-447F-B3D1-86B93E27C610}
// *********************************************************************//
  IUMLSequenceDiagramViewDisp = dispinterface
    ['{A219F10C-EA93-447F-B3D1-86B93E27C610}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCustomSeqObjectView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B86953E2-93B7-45D3-88C8-9FCB12187ADC}
// *********************************************************************//
  IUMLCustomSeqObjectView = interface(IUMLGeneralNodeView)
    ['{B86953E2-93B7-45D3-88C8-9FCB12187ADC}']
    function Get_LifeLine: IUMLLifeLineView; safecall;
    property LifeLine: IUMLLifeLineView read Get_LifeLine;
  end;

// *********************************************************************//
// DispIntf:  IUMLCustomSeqObjectViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B86953E2-93B7-45D3-88C8-9FCB12187ADC}
// *********************************************************************//
  IUMLCustomSeqObjectViewDisp = dispinterface
    ['{B86953E2-93B7-45D3-88C8-9FCB12187ADC}']
    property LifeLine: IUMLLifeLineView readonly dispid 1536;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSeqObjectView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBF0967F-1906-49A3-9480-6E9DB49F127A}
// *********************************************************************//
  IUMLSeqObjectView = interface(IUMLCustomSeqObjectView)
    ['{DBF0967F-1906-49A3-9480-6E9DB49F127A}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSeqObjectViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBF0967F-1906-49A3-9480-6E9DB49F127A}
// *********************************************************************//
  IUMLSeqObjectViewDisp = dispinterface
    ['{DBF0967F-1906-49A3-9480-6E9DB49F127A}']
    property LifeLine: IUMLLifeLineView readonly dispid 1536;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLLifeLineView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E0C7F21-D022-4EA7-BABE-27E389BE38E9}
// *********************************************************************//
  IUMLLifeLineView = interface(INodeView)
    ['{0E0C7F21-D022-4EA7-BABE-27E389BE38E9}']
  end;

// *********************************************************************//
// DispIntf:  IUMLLifeLineViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0E0C7F21-D022-4EA7-BABE-27E389BE38E9}
// *********************************************************************//
  IUMLLifeLineViewDisp = dispinterface
    ['{0E0C7F21-D022-4EA7-BABE-27E389BE38E9}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLColClassifierRoleView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E01827D5-F0A3-4683-8990-840E984A2673}
// *********************************************************************//
  IUMLColClassifierRoleView = interface(IUMLCustomColObjectView)
    ['{E01827D5-F0A3-4683-8990-840E984A2673}']
  end;

// *********************************************************************//
// DispIntf:  IUMLColClassifierRoleViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E01827D5-F0A3-4683-8990-840E984A2673}
// *********************************************************************//
  IUMLColClassifierRoleViewDisp = dispinterface
    ['{E01827D5-F0A3-4683-8990-840E984A2673}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSequenceRoleDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A033957-D701-49A6-86DC-875AE7FF5B90}
// *********************************************************************//
  IUMLSequenceRoleDiagramView = interface(IUMLDiagramView)
    ['{0A033957-D701-49A6-86DC-875AE7FF5B90}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSequenceRoleDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0A033957-D701-49A6-86DC-875AE7FF5B90}
// *********************************************************************//
  IUMLSequenceRoleDiagramViewDisp = dispinterface
    ['{0A033957-D701-49A6-86DC-875AE7FF5B90}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSeqClassifierRoleView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22EC10E5-34DF-4AA4-AECB-F6E1BCF82F25}
// *********************************************************************//
  IUMLSeqClassifierRoleView = interface(IUMLCustomSeqObjectView)
    ['{22EC10E5-34DF-4AA4-AECB-F6E1BCF82F25}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSeqClassifierRoleViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22EC10E5-34DF-4AA4-AECB-F6E1BCF82F25}
// *********************************************************************//
  IUMLSeqClassifierRoleViewDisp = dispinterface
    ['{22EC10E5-34DF-4AA4-AECB-F6E1BCF82F25}']
    property LifeLine: IUMLLifeLineView readonly dispid 1536;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLLinkView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {971EBD61-0B8C-48A0-8C85-F08B63FD31E7}
// *********************************************************************//
  IUMLLinkView = interface(IUMLGeneralEdgeView)
    ['{971EBD61-0B8C-48A0-8C85-F08B63FD31E7}']
    function Get_HeadEndLabel: IEdgeLabelView; safecall;
    function Get_TailEndLabel: IEdgeLabelView; safecall;
    property HeadEndLabel: IEdgeLabelView read Get_HeadEndLabel;
    property TailEndLabel: IEdgeLabelView read Get_TailEndLabel;
  end;

// *********************************************************************//
// DispIntf:  IUMLLinkViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {971EBD61-0B8C-48A0-8C85-F08B63FD31E7}
// *********************************************************************//
  IUMLLinkViewDisp = dispinterface
    ['{971EBD61-0B8C-48A0-8C85-F08B63FD31E7}']
    property HeadEndLabel: IEdgeLabelView readonly dispid 1536;
    property TailEndLabel: IEdgeLabelView readonly dispid 1537;
    property NameLabel: IEdgeLabelView readonly dispid 1280;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1281;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLAssociationRoleView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7CD8BF8-B276-4649-BCFA-3387F16FA00E}
// *********************************************************************//
  IUMLAssociationRoleView = interface(IUMLAssociationView)
    ['{A7CD8BF8-B276-4649-BCFA-3387F16FA00E}']
  end;

// *********************************************************************//
// DispIntf:  IUMLAssociationRoleViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A7CD8BF8-B276-4649-BCFA-3387F16FA00E}
// *********************************************************************//
  IUMLAssociationRoleViewDisp = dispinterface
    ['{A7CD8BF8-B276-4649-BCFA-3387F16FA00E}']
    property ShowCompartmentStereotype: WordBool dispid 1536;
    property ShowCompartmentVisibility: WordBool dispid 1537;
    property HeadRoleNameLabel: IEdgeLabelView readonly dispid 1538;
    property TailRoleNameLabel: IEdgeLabelView readonly dispid 1539;
    property HeadMultiplicityLabel: IEdgeLabelView readonly dispid 1540;
    property TailMultiplicityLabel: IEdgeLabelView readonly dispid 1541;
    property TailPropertyLabel: IEdgeLabelView readonly dispid 1542;
    property HeadPropertyLabel: IEdgeLabelView readonly dispid 1543;
    property HeadQualifierCompartment: IUMLQualifierCompartmentView readonly dispid 1544;
    property TailQualifierCompartment: IUMLQualifierCompartmentView readonly dispid 1545;
    property NameLabel: IEdgeLabelView readonly dispid 1280;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1281;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCollaborationDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93FC66C7-3238-480A-B10D-8B0818B2A8C2}
// *********************************************************************//
  IUMLCollaborationDiagramView = interface(IUMLDiagramView)
    ['{93FC66C7-3238-480A-B10D-8B0818B2A8C2}']
  end;

// *********************************************************************//
// DispIntf:  IUMLCollaborationDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {93FC66C7-3238-480A-B10D-8B0818B2A8C2}
// *********************************************************************//
  IUMLCollaborationDiagramViewDisp = dispinterface
    ['{93FC66C7-3238-480A-B10D-8B0818B2A8C2}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IEdgeNodeView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E85AB07-F320-4598-8215-D2B816B4AC6E}
// *********************************************************************//
  IEdgeNodeView = interface(IEdgeParasiticView)
    ['{7E85AB07-F320-4598-8215-D2B816B4AC6E}']
  end;

// *********************************************************************//
// DispIntf:  IEdgeNodeViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E85AB07-F320-4598-8215-D2B816B4AC6E}
// *********************************************************************//
  IEdgeNodeViewDisp = dispinterface
    ['{7E85AB07-F320-4598-8215-D2B816B4AC6E}']
    property EdgePosition: EdgePositionKind readonly dispid 1536;
    property HostEdge: IEdgeView readonly dispid 1537;
    property Alpha: Double dispid 1280;
    property Distance: Double dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCustomColMessageView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {518798B6-F785-42E5-AB6C-AE0957B2BBB7}
// *********************************************************************//
  IUMLCustomColMessageView = interface(IEdgeNodeView)
    ['{518798B6-F785-42E5-AB6C-AE0957B2BBB7}']
    function Get_NameLabel: INodeLabelView; safecall;
    function Get_StereotypeLabel: INodeLabelView; safecall;
    property NameLabel: INodeLabelView read Get_NameLabel;
    property StereotypeLabel: INodeLabelView read Get_StereotypeLabel;
  end;

// *********************************************************************//
// DispIntf:  IUMLCustomColMessageViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {518798B6-F785-42E5-AB6C-AE0957B2BBB7}
// *********************************************************************//
  IUMLCustomColMessageViewDisp = dispinterface
    ['{518798B6-F785-42E5-AB6C-AE0957B2BBB7}']
    property NameLabel: INodeLabelView readonly dispid 2048;
    property StereotypeLabel: INodeLabelView readonly dispid 2049;
    property EdgePosition: EdgePositionKind readonly dispid 1536;
    property HostEdge: IEdgeView readonly dispid 1537;
    property Alpha: Double dispid 1280;
    property Distance: Double dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLColStimulusView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B90CFBFC-9B75-4A88-9E42-D7D2BF9D88F2}
// *********************************************************************//
  IUMLColStimulusView = interface(IUMLCustomColMessageView)
    ['{B90CFBFC-9B75-4A88-9E42-D7D2BF9D88F2}']
  end;

// *********************************************************************//
// DispIntf:  IUMLColStimulusViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B90CFBFC-9B75-4A88-9E42-D7D2BF9D88F2}
// *********************************************************************//
  IUMLColStimulusViewDisp = dispinterface
    ['{B90CFBFC-9B75-4A88-9E42-D7D2BF9D88F2}']
    property NameLabel: INodeLabelView readonly dispid 2048;
    property StereotypeLabel: INodeLabelView readonly dispid 2049;
    property EdgePosition: EdgePositionKind readonly dispid 1536;
    property HostEdge: IEdgeView readonly dispid 1537;
    property Alpha: Double dispid 1280;
    property Distance: Double dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: INodeParasiticView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95D114FC-57F9-41AA-9483-8ABF4A795A51}
// *********************************************************************//
  INodeParasiticView = interface(IParasiticView)
    ['{95D114FC-57F9-41AA-9483-8ABF4A795A51}']
    function Get_HostNode: INodeView; safecall;
    property HostNode: INodeView read Get_HostNode;
  end;

// *********************************************************************//
// DispIntf:  INodeParasiticViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95D114FC-57F9-41AA-9483-8ABF4A795A51}
// *********************************************************************//
  INodeParasiticViewDisp = dispinterface
    ['{95D114FC-57F9-41AA-9483-8ABF4A795A51}']
    property HostNode: INodeView readonly dispid 1536;
    property Alpha: Double dispid 1280;
    property Distance: Double dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: INodeLabelView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {52B76932-06A2-4BE4-9180-BE77B02B3710}
// *********************************************************************//
  INodeLabelView = interface(INodeParasiticView)
    ['{52B76932-06A2-4BE4-9180-BE77B02B3710}']
    function Get_Text: WideString; safecall;
    property Text: WideString read Get_Text;
  end;

// *********************************************************************//
// DispIntf:  INodeLabelViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {52B76932-06A2-4BE4-9180-BE77B02B3710}
// *********************************************************************//
  INodeLabelViewDisp = dispinterface
    ['{52B76932-06A2-4BE4-9180-BE77B02B3710}']
    property Text: WideString readonly dispid 1792;
    property HostNode: INodeView readonly dispid 1536;
    property Alpha: Double dispid 1280;
    property Distance: Double dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCustomSeqMessageView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A3A848D6-36BC-4120-A8C5-C3E0F514010A}
// *********************************************************************//
  IUMLCustomSeqMessageView = interface(IEdgeView)
    ['{A3A848D6-36BC-4120-A8C5-C3E0F514010A}']
    function Get_Activation: IUMLActivationView; safecall;
    function Get_NameLabel: IEdgeLabelView; safecall;
    function Get_StereotypeLabel: IEdgeLabelView; safecall;
    property Activation: IUMLActivationView read Get_Activation;
    property NameLabel: IEdgeLabelView read Get_NameLabel;
    property StereotypeLabel: IEdgeLabelView read Get_StereotypeLabel;
  end;

// *********************************************************************//
// DispIntf:  IUMLCustomSeqMessageViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A3A848D6-36BC-4120-A8C5-C3E0F514010A}
// *********************************************************************//
  IUMLCustomSeqMessageViewDisp = dispinterface
    ['{A3A848D6-36BC-4120-A8C5-C3E0F514010A}']
    property Activation: IUMLActivationView readonly dispid 1280;
    property NameLabel: IEdgeLabelView readonly dispid 1281;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1282;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSeqStimulusView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5665D900-DB3D-4A22-99ED-B2F731555DCE}
// *********************************************************************//
  IUMLSeqStimulusView = interface(IUMLCustomSeqMessageView)
    ['{5665D900-DB3D-4A22-99ED-B2F731555DCE}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSeqStimulusViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {5665D900-DB3D-4A22-99ED-B2F731555DCE}
// *********************************************************************//
  IUMLSeqStimulusViewDisp = dispinterface
    ['{5665D900-DB3D-4A22-99ED-B2F731555DCE}']
    property Activation: IUMLActivationView readonly dispid 1280;
    property NameLabel: IEdgeLabelView readonly dispid 1281;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1282;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLActivationView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C72B6CBF-199E-49D0-B06C-63BD2062C21D}
// *********************************************************************//
  IUMLActivationView = interface(INodeView)
    ['{C72B6CBF-199E-49D0-B06C-63BD2062C21D}']
  end;

// *********************************************************************//
// DispIntf:  IUMLActivationViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C72B6CBF-199E-49D0-B06C-63BD2062C21D}
// *********************************************************************//
  IUMLActivationViewDisp = dispinterface
    ['{C72B6CBF-199E-49D0-B06C-63BD2062C21D}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCollaborationRoleDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A30AE46D-0AFE-4AD8-967C-F7DA4D509C31}
// *********************************************************************//
  IUMLCollaborationRoleDiagramView = interface(IUMLDiagramView)
    ['{A30AE46D-0AFE-4AD8-967C-F7DA4D509C31}']
  end;

// *********************************************************************//
// DispIntf:  IUMLCollaborationRoleDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A30AE46D-0AFE-4AD8-967C-F7DA4D509C31}
// *********************************************************************//
  IUMLCollaborationRoleDiagramViewDisp = dispinterface
    ['{A30AE46D-0AFE-4AD8-967C-F7DA4D509C31}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLColMessageView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5617B4B-56B5-42D7-AD89-037DB39579F8}
// *********************************************************************//
  IUMLColMessageView = interface(IUMLCustomColMessageView)
    ['{C5617B4B-56B5-42D7-AD89-037DB39579F8}']
  end;

// *********************************************************************//
// DispIntf:  IUMLColMessageViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C5617B4B-56B5-42D7-AD89-037DB39579F8}
// *********************************************************************//
  IUMLColMessageViewDisp = dispinterface
    ['{C5617B4B-56B5-42D7-AD89-037DB39579F8}']
    property NameLabel: INodeLabelView readonly dispid 2048;
    property StereotypeLabel: INodeLabelView readonly dispid 2049;
    property EdgePosition: EdgePositionKind readonly dispid 1536;
    property HostEdge: IEdgeView readonly dispid 1537;
    property Alpha: Double dispid 1280;
    property Distance: Double dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSeqMessageView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95830989-53EC-42C6-83E8-7A130904D171}
// *********************************************************************//
  IUMLSeqMessageView = interface(IUMLCustomSeqMessageView)
    ['{95830989-53EC-42C6-83E8-7A130904D171}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSeqMessageViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {95830989-53EC-42C6-83E8-7A130904D171}
// *********************************************************************//
  IUMLSeqMessageViewDisp = dispinterface
    ['{95830989-53EC-42C6-83E8-7A130904D171}']
    property Activation: IUMLActivationView readonly dispid 1280;
    property NameLabel: IEdgeLabelView readonly dispid 1281;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1282;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLStatechartDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BEBE4753-AD9B-4C1D-B82D-DE94BA3C9D5B}
// *********************************************************************//
  IUMLStatechartDiagramView = interface(IUMLDiagramView)
    ['{BEBE4753-AD9B-4C1D-B82D-DE94BA3C9D5B}']
  end;

// *********************************************************************//
// DispIntf:  IUMLStatechartDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BEBE4753-AD9B-4C1D-B82D-DE94BA3C9D5B}
// *********************************************************************//
  IUMLStatechartDiagramViewDisp = dispinterface
    ['{BEBE4753-AD9B-4C1D-B82D-DE94BA3C9D5B}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCustomStateView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0BE1FC45-BA96-4F0C-8DE5-8E842D7F29EE}
// *********************************************************************//
  IUMLCustomStateView = interface(IUMLGeneralNodeView)
    ['{0BE1FC45-BA96-4F0C-8DE5-8E842D7F29EE}']
    function Get_InternalTransitionCompartment: IUMLInternalTransitionCompartmentView; safecall;
    property InternalTransitionCompartment: IUMLInternalTransitionCompartmentView read Get_InternalTransitionCompartment;
  end;

// *********************************************************************//
// DispIntf:  IUMLCustomStateViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0BE1FC45-BA96-4F0C-8DE5-8E842D7F29EE}
// *********************************************************************//
  IUMLCustomStateViewDisp = dispinterface
    ['{0BE1FC45-BA96-4F0C-8DE5-8E842D7F29EE}']
    property InternalTransitionCompartment: IUMLInternalTransitionCompartmentView readonly dispid 1536;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLStateView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0601041-17EC-450C-BD2D-229DEE32FEAC}
// *********************************************************************//
  IUMLStateView = interface(IUMLCustomStateView)
    ['{F0601041-17EC-450C-BD2D-229DEE32FEAC}']
  end;

// *********************************************************************//
// DispIntf:  IUMLStateViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F0601041-17EC-450C-BD2D-229DEE32FEAC}
// *********************************************************************//
  IUMLStateViewDisp = dispinterface
    ['{F0601041-17EC-450C-BD2D-229DEE32FEAC}']
    property InternalTransitionCompartment: IUMLInternalTransitionCompartmentView readonly dispid 1536;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLInternalTransitionCompartmentView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4D2E49F0-AF47-4EE0-A7E2-BBAA0CED0376}
// *********************************************************************//
  IUMLInternalTransitionCompartmentView = interface(IUMLListCompartmentView)
    ['{4D2E49F0-AF47-4EE0-A7E2-BBAA0CED0376}']
  end;

// *********************************************************************//
// DispIntf:  IUMLInternalTransitionCompartmentViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {4D2E49F0-AF47-4EE0-A7E2-BBAA0CED0376}
// *********************************************************************//
  IUMLInternalTransitionCompartmentViewDisp = dispinterface
    ['{4D2E49F0-AF47-4EE0-A7E2-BBAA0CED0376}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSubmachineStateView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1411A64F-8CE3-41AA-B2C8-E2CA0CD75953}
// *********************************************************************//
  IUMLSubmachineStateView = interface(IUMLCustomStateView)
    ['{1411A64F-8CE3-41AA-B2C8-E2CA0CD75953}']
    function Get_IncludeLabel: ILabelView; safecall;
    property IncludeLabel: ILabelView read Get_IncludeLabel;
  end;

// *********************************************************************//
// DispIntf:  IUMLSubmachineStateViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1411A64F-8CE3-41AA-B2C8-E2CA0CD75953}
// *********************************************************************//
  IUMLSubmachineStateViewDisp = dispinterface
    ['{1411A64F-8CE3-41AA-B2C8-E2CA0CD75953}']
    property IncludeLabel: ILabelView readonly dispid 1792;
    property InternalTransitionCompartment: IUMLInternalTransitionCompartmentView readonly dispid 1536;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLPseudostateView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {152D3A04-2300-4AC5-9C95-307B2841FB71}
// *********************************************************************//
  IUMLPseudostateView = interface(INodeView)
    ['{152D3A04-2300-4AC5-9C95-307B2841FB71}']
  end;

// *********************************************************************//
// DispIntf:  IUMLPseudostateViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {152D3A04-2300-4AC5-9C95-307B2841FB71}
// *********************************************************************//
  IUMLPseudostateViewDisp = dispinterface
    ['{152D3A04-2300-4AC5-9C95-307B2841FB71}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLFinalStateView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D795CEF-FC50-4156-AC44-8892B32F9E92}
// *********************************************************************//
  IUMLFinalStateView = interface(INodeView)
    ['{0D795CEF-FC50-4156-AC44-8892B32F9E92}']
  end;

// *********************************************************************//
// DispIntf:  IUMLFinalStateViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0D795CEF-FC50-4156-AC44-8892B32F9E92}
// *********************************************************************//
  IUMLFinalStateViewDisp = dispinterface
    ['{0D795CEF-FC50-4156-AC44-8892B32F9E92}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLActivityDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F98E949-33CC-4810-A15F-F16247B67946}
// *********************************************************************//
  IUMLActivityDiagramView = interface(IUMLDiagramView)
    ['{1F98E949-33CC-4810-A15F-F16247B67946}']
  end;

// *********************************************************************//
// DispIntf:  IUMLActivityDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {1F98E949-33CC-4810-A15F-F16247B67946}
// *********************************************************************//
  IUMLActivityDiagramViewDisp = dispinterface
    ['{1F98E949-33CC-4810-A15F-F16247B67946}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLActionStateView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C55A4A15-5AAE-460C-95F9-BA08D2EECDD0}
// *********************************************************************//
  IUMLActionStateView = interface(IUMLGeneralNodeView)
    ['{C55A4A15-5AAE-460C-95F9-BA08D2EECDD0}']
  end;

// *********************************************************************//
// DispIntf:  IUMLActionStateViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C55A4A15-5AAE-460C-95F9-BA08D2EECDD0}
// *********************************************************************//
  IUMLActionStateViewDisp = dispinterface
    ['{C55A4A15-5AAE-460C-95F9-BA08D2EECDD0}']
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSubactivityStateView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CBD743CB-8318-4358-8869-0E6A4606E46E}
// *********************************************************************//
  IUMLSubactivityStateView = interface(IUMLActionStateView)
    ['{CBD743CB-8318-4358-8869-0E6A4606E46E}']
    function Get_IncludeLabel: ILabelView; safecall;
    property IncludeLabel: ILabelView read Get_IncludeLabel;
  end;

// *********************************************************************//
// DispIntf:  IUMLSubactivityStateViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {CBD743CB-8318-4358-8869-0E6A4606E46E}
// *********************************************************************//
  IUMLSubactivityStateViewDisp = dispinterface
    ['{CBD743CB-8318-4358-8869-0E6A4606E46E}']
    property IncludeLabel: ILabelView readonly dispid 1792;
    property StereotypeDisplay: UMLStereotypeDisplayKind dispid 1280;
    property ShowParentName: WordBool dispid 1281;
    property NameCompartment: IUMLNameCompartmentView readonly dispid 1282;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSwimlaneView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {404051FB-AAC3-46A5-A783-9DF40E848DCD}
// *********************************************************************//
  IUMLSwimlaneView = interface(INodeView)
    ['{404051FB-AAC3-46A5-A783-9DF40E848DCD}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSwimlaneViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {404051FB-AAC3-46A5-A783-9DF40E848DCD}
// *********************************************************************//
  IUMLSwimlaneViewDisp = dispinterface
    ['{404051FB-AAC3-46A5-A783-9DF40E848DCD}']
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLTransitionView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF173B12-C59D-4CDA-858B-A7A7CC4BFDC9}
// *********************************************************************//
  IUMLTransitionView = interface(IUMLGeneralEdgeView)
    ['{EF173B12-C59D-4CDA-858B-A7A7CC4BFDC9}']
  end;

// *********************************************************************//
// DispIntf:  IUMLTransitionViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EF173B12-C59D-4CDA-858B-A7A7CC4BFDC9}
// *********************************************************************//
  IUMLTransitionViewDisp = dispinterface
    ['{EF173B12-C59D-4CDA-858B-A7A7CC4BFDC9}']
    property NameLabel: IEdgeLabelView readonly dispid 1280;
    property StereotypeLabel: IEdgeLabelView readonly dispid 1281;
    property LineStyle: LineStyleKind dispid 1024;
    property Points: IPoints readonly dispid 1025;
    property Tail: IView readonly dispid 1026;
    property Head: IView readonly dispid 1027;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IProjectManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51D0E4E0-68D9-4982-B8A4-72BD97FBAC3A}
// *********************************************************************//
  IProjectManager = interface(IDispatch)
    ['{51D0E4E0-68D9-4982-B8A4-72BD97FBAC3A}']
    function Get_FileName: WideString; safecall;
    function Get_Modified: WordBool; safecall;
    function Get_UnitsModified: WordBool; safecall;
    function Get_Project: IUMLProject; safecall;
    function GetUnitDocumentCount: Integer; safecall;
    function GetUnitDocumentAt(Index: Integer): IUMLUnitDocument; safecall;
    function Get_ProjectDocument: IUMLProjectDocument; safecall;
    procedure NewProject; safecall;
    procedure NewProjectByApproach(const ApproachName: WideString); safecall;
    procedure OpenProject(const FileName: WideString); safecall;
    procedure SaveProject; safecall;
    procedure SaveProjectAs(const FileName: WideString); safecall;
    procedure SaveAllUnits; safecall;
    procedure CloseProject; safecall;
    procedure ImportFramework(const OwnerPackage: IUMLPackage; const FrameworkName: WideString); safecall;
    procedure ImportModelFragment(const OwnerPackage: IUMLPackage; const FileName: WideString); safecall;
    procedure ExportModelFragment(const APackage: IUMLPackage; const FileName: WideString); safecall;
    function SeparateUnit(const APackage: IUMLPackage; const FileName: WideString): IUMLUnitDocument; safecall;
    procedure MergeUnit(const APackage: IUMLPackage); safecall;
    function OpenUnit(const ABasePackage: IUMLPackage; const FileName: WideString): IUMLUnitDocument; safecall;
    procedure DeleteUnit(const APackage: IUMLPackage); safecall;
    procedure UpdateDocuments; safecall;
    function GetAvailableFrameworkAt(Index: Integer): WideString; safecall;
    function GetAvailableFrameworkCount: Integer; safecall;
    function GetAvailableApproachAt(Index: Integer): WideString; safecall;
    function GetAvailableApproachCount: Integer; safecall;
    property FileName: WideString read Get_FileName;
    property Modified: WordBool read Get_Modified;
    property UnitsModified: WordBool read Get_UnitsModified;
    property Project: IUMLProject read Get_Project;
    property ProjectDocument: IUMLProjectDocument read Get_ProjectDocument;
  end;

// *********************************************************************//
// DispIntf:  IProjectManagerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {51D0E4E0-68D9-4982-B8A4-72BD97FBAC3A}
// *********************************************************************//
  IProjectManagerDisp = dispinterface
    ['{51D0E4E0-68D9-4982-B8A4-72BD97FBAC3A}']
    property FileName: WideString readonly dispid 512;
    property Modified: WordBool readonly dispid 513;
    property UnitsModified: WordBool readonly dispid 514;
    property Project: IUMLProject readonly dispid 515;
    function GetUnitDocumentCount: Integer; dispid 516;
    function GetUnitDocumentAt(Index: Integer): IUMLUnitDocument; dispid 517;
    property ProjectDocument: IUMLProjectDocument readonly dispid 518;
    procedure NewProject; dispid 519;
    procedure NewProjectByApproach(const ApproachName: WideString); dispid 520;
    procedure OpenProject(const FileName: WideString); dispid 521;
    procedure SaveProject; dispid 522;
    procedure SaveProjectAs(const FileName: WideString); dispid 523;
    procedure SaveAllUnits; dispid 524;
    procedure CloseProject; dispid 525;
    procedure ImportFramework(const OwnerPackage: IUMLPackage; const FrameworkName: WideString); dispid 526;
    procedure ImportModelFragment(const OwnerPackage: IUMLPackage; const FileName: WideString); dispid 527;
    procedure ExportModelFragment(const APackage: IUMLPackage; const FileName: WideString); dispid 528;
    function SeparateUnit(const APackage: IUMLPackage; const FileName: WideString): IUMLUnitDocument; dispid 529;
    procedure MergeUnit(const APackage: IUMLPackage); dispid 530;
    function OpenUnit(const ABasePackage: IUMLPackage; const FileName: WideString): IUMLUnitDocument; dispid 531;
    procedure DeleteUnit(const APackage: IUMLPackage); dispid 532;
    procedure UpdateDocuments; dispid 533;
    function GetAvailableFrameworkAt(Index: Integer): WideString; dispid 534;
    function GetAvailableFrameworkCount: Integer; dispid 535;
    function GetAvailableApproachAt(Index: Integer): WideString; dispid 536;
    function GetAvailableApproachCount: Integer; dispid 537;
  end;

// *********************************************************************//
// Interface: IUMLProject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67DB81F5-D533-440B-AB73-90B5016771A3}
// *********************************************************************//
  IUMLProject = interface(IUMLPackage)
    ['{67DB81F5-D533-440B-AB73-90B5016771A3}']
    function Get_Title: WideString; safecall;
    procedure Set_Title(const Value: WideString); safecall;
    function Get_Author: WideString; safecall;
    procedure Set_Author(const Value: WideString); safecall;
    function Get_Company: WideString; safecall;
    procedure Set_Company(const Value: WideString); safecall;
    function Get_Copyright: WideString; safecall;
    procedure Set_Copyright(const Value: WideString); safecall;
    property Title: WideString read Get_Title write Set_Title;
    property Author: WideString read Get_Author write Set_Author;
    property Company: WideString read Get_Company write Set_Company;
    property Copyright: WideString read Get_Copyright write Set_Copyright;
  end;

// *********************************************************************//
// DispIntf:  IUMLProjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {67DB81F5-D533-440B-AB73-90B5016771A3}
// *********************************************************************//
  IUMLProjectDisp = dispinterface
    ['{67DB81F5-D533-440B-AB73-90B5016771A3}']
    property Title: WideString dispid 2816;
    property Author: WideString dispid 2817;
    property Company: WideString dispid 2818;
    property Copyright: WideString dispid 2819;
    function GetElementImportItemCount: Integer; dispid 2560;
    function GetElementImportItemAt(Index: Integer): IUMLElementImport; dispid 2561;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLDocument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {032B5C5C-7DBC-4D79-9824-F7964993B2E8}
// *********************************************************************//
  IUMLDocument = interface(IDocument)
    ['{032B5C5C-7DBC-4D79-9824-F7964993B2E8}']
  end;

// *********************************************************************//
// DispIntf:  IUMLDocumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {032B5C5C-7DBC-4D79-9824-F7964993B2E8}
// *********************************************************************//
  IUMLDocumentDisp = dispinterface
    ['{032B5C5C-7DBC-4D79-9824-F7964993B2E8}']
    property FileName: WideString readonly dispid 512;
    property Version: WideString readonly dispid 513;
    property Modified: WordBool readonly dispid 514;
    property ReadOnly: WordBool readonly dispid 515;
    function GetDocumentSymbol: WideString; dispid 516;
    function GetDocumentElement: IElement; dispid 517;
    procedure Save; dispid 518;
    procedure SaveAs(const FileName: WideString); dispid 519;
  end;

// *********************************************************************//
// Interface: IUMLUnitDocument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B152C58C-9891-4482-BA45-4C68AADD3CEE}
// *********************************************************************//
  IUMLUnitDocument = interface(IUMLDocument)
    ['{B152C58C-9891-4482-BA45-4C68AADD3CEE}']
    function Get_ParentUnitDocument: IUMLUnitDocument; safecall;
    function GetSubUnitDocumentCount: Integer; safecall;
    function GetSubUnitDocumentAt(Index: Integer): IUMLUnitDocument; safecall;
    property ParentUnitDocument: IUMLUnitDocument read Get_ParentUnitDocument;
  end;

// *********************************************************************//
// DispIntf:  IUMLUnitDocumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {B152C58C-9891-4482-BA45-4C68AADD3CEE}
// *********************************************************************//
  IUMLUnitDocumentDisp = dispinterface
    ['{B152C58C-9891-4482-BA45-4C68AADD3CEE}']
    property ParentUnitDocument: IUMLUnitDocument readonly dispid 1024;
    function GetSubUnitDocumentCount: Integer; dispid 1025;
    function GetSubUnitDocumentAt(Index: Integer): IUMLUnitDocument; dispid 1026;
    property FileName: WideString readonly dispid 512;
    property Version: WideString readonly dispid 513;
    property Modified: WordBool readonly dispid 514;
    property ReadOnly: WordBool readonly dispid 515;
    function GetDocumentSymbol: WideString; dispid 516;
    function GetDocumentElement: IElement; dispid 517;
    procedure Save; dispid 518;
    procedure SaveAs(const FileName: WideString); dispid 519;
  end;

// *********************************************************************//
// Interface: IUMLProjectDocument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A46A8EA6-B4A0-47EC-9600-AA3B04287026}
// *********************************************************************//
  IUMLProjectDocument = interface(IUMLUnitDocument)
    ['{A46A8EA6-B4A0-47EC-9600-AA3B04287026}']
  end;

// *********************************************************************//
// DispIntf:  IUMLProjectDocumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A46A8EA6-B4A0-47EC-9600-AA3B04287026}
// *********************************************************************//
  IUMLProjectDocumentDisp = dispinterface
    ['{A46A8EA6-B4A0-47EC-9600-AA3B04287026}']
    property ParentUnitDocument: IUMLUnitDocument readonly dispid 1024;
    function GetSubUnitDocumentCount: Integer; dispid 1025;
    function GetSubUnitDocumentAt(Index: Integer): IUMLUnitDocument; dispid 1026;
    property FileName: WideString readonly dispid 512;
    property Version: WideString readonly dispid 513;
    property Modified: WordBool readonly dispid 514;
    property ReadOnly: WordBool readonly dispid 515;
    function GetDocumentSymbol: WideString; dispid 516;
    function GetDocumentElement: IElement; dispid 517;
    procedure Save; dispid 518;
    procedure SaveAs(const FileName: WideString); dispid 519;
  end;

// *********************************************************************//
// Interface: ISelectionManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06AA1D89-25DC-4C70-B35D-507ABDF79CB5}
// *********************************************************************//
  ISelectionManager = interface(IDispatch)
    ['{06AA1D89-25DC-4C70-B35D-507ABDF79CB5}']
    function GetSelectedModelCount: Integer; safecall;
    function GetSelectedModelAt(Index: Integer): IModel; safecall;
    function GetSelectedViewCount: Integer; safecall;
    function GetSelectedViewAt(Index: Integer): IView; safecall;
    function Get_ActiveDiagram: IDiagram; safecall;
    function Get_ActiveDiagramView: IDiagramView; safecall;
    procedure SelectAll; safecall;
    procedure DeselectAll; safecall;
    procedure SelectModel(const AModel: IModel); safecall;
    procedure SelectView(const AView: IView); safecall;
    procedure SelectAdditionalModel(const AModel: IModel); safecall;
    procedure SelectAdditionalView(const AView: IView); safecall;
    procedure SelectArea(X1: Integer; Y1: Integer; X2: Integer; Y2: Integer); safecall;
    procedure SelectAdditionalArea(X1: Integer; Y1: Integer; X2: Integer; Y2: Integer); safecall;
    procedure DeselectModel(const AModel: IModel); safecall;
    procedure DeselectView(const AView: IView); safecall;
    procedure DeselectAllModels; safecall;
    procedure DeselectAllViews; safecall;
    property ActiveDiagram: IDiagram read Get_ActiveDiagram;
    property ActiveDiagramView: IDiagramView read Get_ActiveDiagramView;
  end;

// *********************************************************************//
// DispIntf:  ISelectionManagerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {06AA1D89-25DC-4C70-B35D-507ABDF79CB5}
// *********************************************************************//
  ISelectionManagerDisp = dispinterface
    ['{06AA1D89-25DC-4C70-B35D-507ABDF79CB5}']
    function GetSelectedModelCount: Integer; dispid 512;
    function GetSelectedModelAt(Index: Integer): IModel; dispid 513;
    function GetSelectedViewCount: Integer; dispid 514;
    function GetSelectedViewAt(Index: Integer): IView; dispid 515;
    property ActiveDiagram: IDiagram readonly dispid 516;
    property ActiveDiagramView: IDiagramView readonly dispid 517;
    procedure SelectAll; dispid 518;
    procedure DeselectAll; dispid 519;
    procedure SelectModel(const AModel: IModel); dispid 520;
    procedure SelectView(const AView: IView); dispid 521;
    procedure SelectAdditionalModel(const AModel: IModel); dispid 522;
    procedure SelectAdditionalView(const AView: IView); dispid 523;
    procedure SelectArea(X1: Integer; Y1: Integer; X2: Integer; Y2: Integer); dispid 524;
    procedure SelectAdditionalArea(X1: Integer; Y1: Integer; X2: Integer; Y2: Integer); dispid 525;
    procedure DeselectModel(const AModel: IModel); dispid 526;
    procedure DeselectView(const AView: IView); dispid 527;
    procedure DeselectAllModels; dispid 528;
    procedure DeselectAllViews; dispid 529;
  end;

// *********************************************************************//
// Interface: IElementSelector
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02133590-EBC6-4DD0-87F6-0D3236B1CDE0}
// *********************************************************************//
  IElementSelector = interface(IDispatch)
    ['{02133590-EBC6-4DD0-87F6-0D3236B1CDE0}']
    function Get_AllowNull: WordBool; safecall;
    procedure Set_AllowNull(Value: WordBool); safecall;
    procedure Filter(Filtering: ElementFilteringKind); safecall;
    procedure ClearSelectableModels; safecall;
    procedure AddSelectableModel(const ClassName: WideString); safecall;
    procedure RemoveSelectableModel(const ClassName: WideString); safecall;
    function Execute(const Title: WideString): WordBool; safecall;
    function GetSelectedModel: IModel; safecall;
    property AllowNull: WordBool read Get_AllowNull write Set_AllowNull;
  end;

// *********************************************************************//
// DispIntf:  IElementSelectorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {02133590-EBC6-4DD0-87F6-0D3236B1CDE0}
// *********************************************************************//
  IElementSelectorDisp = dispinterface
    ['{02133590-EBC6-4DD0-87F6-0D3236B1CDE0}']
    property AllowNull: WordBool dispid 512;
    procedure Filter(Filtering: ElementFilteringKind); dispid 513;
    procedure ClearSelectableModels; dispid 514;
    procedure AddSelectableModel(const ClassName: WideString); dispid 515;
    procedure RemoveSelectableModel(const ClassName: WideString); dispid 516;
    function Execute(const Title: WideString): WordBool; dispid 517;
    function GetSelectedModel: IModel; dispid 518;
  end;

// *********************************************************************//
// Interface: IMetaModel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23E67360-A1DB-42B6-8DB1-37544A49700D}
// *********************************************************************//
  IMetaModel = interface(IMetaElement)
    ['{23E67360-A1DB-42B6-8DB1-37544A49700D}']
    function GetMetaClassCount: Integer; safecall;
    function GetMetaClassAt(Index: Integer): IMetaClass; safecall;
    function GetMetaEnumerationCount: Integer; safecall;
    function GetMetaEnumerationAt(Index: Integer): IMetaEnumeration; safecall;
    function GetMetaDataTypeCount: Integer; safecall;
    function GetMetaDataTypeAt(Index: Integer): IMetaDataType; safecall;
    function GetMetaPrimitiveTypeCount: Integer; safecall;
    function GetMetaPrimitiveTypeAt(Index: Integer): IMetaPrimitiveType; safecall;
    function FindInstanceByGuid(const Guid: WideString): IElement; safecall;
    function FindMetaClassifier(const Name: WideString): IMetaClassifier; safecall;
    function FindMetaClass(const Name: WideString): IMetaClass; safecall;
    function FindMetaEnumeration(const Name: WideString): IMetaEnumeration; safecall;
    function FindMetaDataType(const Name: WideString): IMetaDataType; safecall;
    function FindPrimitiveType(const Name: WideString): IMetaPrimitiveType; safecall;
  end;

// *********************************************************************//
// DispIntf:  IMetaModelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {23E67360-A1DB-42B6-8DB1-37544A49700D}
// *********************************************************************//
  IMetaModelDisp = dispinterface
    ['{23E67360-A1DB-42B6-8DB1-37544A49700D}']
    function GetMetaClassCount: Integer; dispid 768;
    function GetMetaClassAt(Index: Integer): IMetaClass; dispid 769;
    function GetMetaEnumerationCount: Integer; dispid 770;
    function GetMetaEnumerationAt(Index: Integer): IMetaEnumeration; dispid 771;
    function GetMetaDataTypeCount: Integer; dispid 772;
    function GetMetaDataTypeAt(Index: Integer): IMetaDataType; dispid 773;
    function GetMetaPrimitiveTypeCount: Integer; dispid 774;
    function GetMetaPrimitiveTypeAt(Index: Integer): IMetaPrimitiveType; dispid 775;
    function FindInstanceByGuid(const Guid: WideString): IElement; dispid 776;
    function FindMetaClassifier(const Name: WideString): IMetaClassifier; dispid 777;
    function FindMetaClass(const Name: WideString): IMetaClass; dispid 778;
    function FindMetaEnumeration(const Name: WideString): IMetaEnumeration; dispid 779;
    function FindMetaDataType(const Name: WideString): IMetaDataType; dispid 780;
    function FindPrimitiveType(const Name: WideString): IMetaPrimitiveType; dispid 781;
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaEnumeration
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1C9F998-AEF2-41C1-B8F9-DD0D062D3D9F}
// *********************************************************************//
  IMetaEnumeration = interface(IMetaClassifier)
    ['{F1C9F998-AEF2-41C1-B8F9-DD0D062D3D9F}']
    function GetMetaLiteralCount: Integer; safecall;
    function GetMetaLiteralAt(Index: Integer): IMetaLiteral; safecall;
  end;

// *********************************************************************//
// DispIntf:  IMetaEnumerationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F1C9F998-AEF2-41C1-B8F9-DD0D062D3D9F}
// *********************************************************************//
  IMetaEnumerationDisp = dispinterface
    ['{F1C9F998-AEF2-41C1-B8F9-DD0D062D3D9F}']
    function GetMetaLiteralCount: Integer; dispid 1024;
    function GetMetaLiteralAt(Index: Integer): IMetaLiteral; dispid 1025;
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaLiteral
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {874A5952-FC22-40EF-AE15-716B721ACFDC}
// *********************************************************************//
  IMetaLiteral = interface(IMetaElement)
    ['{874A5952-FC22-40EF-AE15-716B721ACFDC}']
  end;

// *********************************************************************//
// DispIntf:  IMetaLiteralDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {874A5952-FC22-40EF-AE15-716B721ACFDC}
// *********************************************************************//
  IMetaLiteralDisp = dispinterface
    ['{874A5952-FC22-40EF-AE15-716B721ACFDC}']
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaDataType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AAFA9E9F-B4E6-432A-9AEB-A4940C8C9170}
// *********************************************************************//
  IMetaDataType = interface(IMetaClassifier)
    ['{AAFA9E9F-B4E6-432A-9AEB-A4940C8C9170}']
  end;

// *********************************************************************//
// DispIntf:  IMetaDataTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AAFA9E9F-B4E6-432A-9AEB-A4940C8C9170}
// *********************************************************************//
  IMetaDataTypeDisp = dispinterface
    ['{AAFA9E9F-B4E6-432A-9AEB-A4940C8C9170}']
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IMetaPrimitiveType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BABD74BD-8212-4EFD-AEC1-C7AB42247416}
// *********************************************************************//
  IMetaPrimitiveType = interface(IMetaClassifier)
    ['{BABD74BD-8212-4EFD-AEC1-C7AB42247416}']
  end;

// *********************************************************************//
// DispIntf:  IMetaPrimitiveTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {BABD74BD-8212-4EFD-AEC1-C7AB42247416}
// *********************************************************************//
  IMetaPrimitiveTypeDisp = dispinterface
    ['{BABD74BD-8212-4EFD-AEC1-C7AB42247416}']
    property Name: WideString readonly dispid 512;
    function GetGuid: WideString; dispid 513;
  end;

// *********************************************************************//
// Interface: IExtensionManager
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {71FA146F-DE8F-433E-B613-351E958BC4BF}
// *********************************************************************//
  IExtensionManager = interface(IDispatch)
    ['{71FA146F-DE8F-433E-B613-351E958BC4BF}']
    function GetIncludedProfileCount: Integer; safecall;
    function GetIncludedProfileAt(Index: Integer): IProfile; safecall;
    function GetAvailableProfileCount: Integer; safecall;
    function GetAvailableProfileAt(Index: Integer): IProfile; safecall;
    procedure ClearIncludedProfiles; safecall;
    procedure IncludeProfile(const Profile: WideString); safecall;
    procedure ExcludeProfile(const Profile: WideString); safecall;
    function FindAvailableProfile(const Name: WideString): IProfile; safecall;
    function FindIncludedProfile(const Name: WideString): IProfile; safecall;
    function FindStereotype(const Profile: WideString; const Name: WideString; 
                            const BaseClass: WideString): IStereotype; safecall;
    function FindFirstStereotype(const Name: WideString; const BaseClass: WideString): IStereotype; safecall;
    function FindTagDefinition(const Profile: WideString; const TagDefinitionSet: WideString; 
                               const Name: WideString): ITagDefinition; safecall;
    function FindTagDefinitionSet(const Profile: WideString; const Name: WideString): ITagDefinitionSet; safecall;
  end;

// *********************************************************************//
// DispIntf:  IExtensionManagerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {71FA146F-DE8F-433E-B613-351E958BC4BF}
// *********************************************************************//
  IExtensionManagerDisp = dispinterface
    ['{71FA146F-DE8F-433E-B613-351E958BC4BF}']
    function GetIncludedProfileCount: Integer; dispid 512;
    function GetIncludedProfileAt(Index: Integer): IProfile; dispid 513;
    function GetAvailableProfileCount: Integer; dispid 514;
    function GetAvailableProfileAt(Index: Integer): IProfile; dispid 515;
    procedure ClearIncludedProfiles; dispid 516;
    procedure IncludeProfile(const Profile: WideString); dispid 517;
    procedure ExcludeProfile(const Profile: WideString); dispid 518;
    function FindAvailableProfile(const Name: WideString): IProfile; dispid 519;
    function FindIncludedProfile(const Name: WideString): IProfile; dispid 520;
    function FindStereotype(const Profile: WideString; const Name: WideString; 
                            const BaseClass: WideString): IStereotype; dispid 521;
    function FindFirstStereotype(const Name: WideString; const BaseClass: WideString): IStereotype; dispid 522;
    function FindTagDefinition(const Profile: WideString; const TagDefinitionSet: WideString; 
                               const Name: WideString): ITagDefinition; dispid 523;
    function FindTagDefinitionSet(const Profile: WideString; const Name: WideString): ITagDefinitionSet; dispid 524;
  end;

// *********************************************************************//
// Interface: IElementListSelector
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A8C4080F-1731-4F02-81AC-B3DCA65C46C3}
// *********************************************************************//
  IElementListSelector = interface(IDispatch)
    ['{A8C4080F-1731-4F02-81AC-B3DCA65C46C3}']
    function Get_AllowNull: WordBool; safecall;
    procedure Set_AllowNull(Value: WordBool); safecall;
    procedure ClearListElements; safecall;
    procedure AddListElement(const AModel: IModel); safecall;
    procedure AddListElementsByCollection(const AModel: IModel; const CollectionName: WideString; 
                                          ShowInherited: WordBool); safecall;
    procedure AddListElementsByClass(const MetaClassName: WideString; 
                                     IncludeChildInstances: WordBool); safecall;
    function Execute(const Title: WideString): WordBool; safecall;
    function GetSelectedModel: IModel; safecall;
    property AllowNull: WordBool read Get_AllowNull write Set_AllowNull;
  end;

// *********************************************************************//
// DispIntf:  IElementListSelectorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A8C4080F-1731-4F02-81AC-B3DCA65C46C3}
// *********************************************************************//
  IElementListSelectorDisp = dispinterface
    ['{A8C4080F-1731-4F02-81AC-B3DCA65C46C3}']
    property AllowNull: WordBool dispid 512;
    procedure ClearListElements; dispid 513;
    procedure AddListElement(const AModel: IModel); dispid 514;
    procedure AddListElementsByCollection(const AModel: IModel; const CollectionName: WideString; 
                                          ShowInherited: WordBool); dispid 515;
    procedure AddListElementsByClass(const MetaClassName: WideString; 
                                     IncludeChildInstances: WordBool); dispid 516;
    function Execute(const Title: WideString): WordBool; dispid 517;
    function GetSelectedModel: IModel; dispid 518;
  end;

// *********************************************************************//
// Interface: IEventPublisher
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBD4FF57-4477-41F6-9046-77C1F3643A8A}
// *********************************************************************//
  IEventPublisher = interface(IDispatch)
    ['{DBD4FF57-4477-41F6-9046-77C1F3643A8A}']
    procedure Subscribe(const ASubscriber: IEventSubscriber; AEvent: EventKind); safecall;
    procedure SubscribeAll(const ASubscriber: IEventSubscriber); safecall;
    procedure Unsubscribe(const ASubscriber: IEventSubscriber; AEvent: EventKind); safecall;
    procedure UnsubscribeAll(const ASubscriber: IEventSubscriber); safecall;
    function GetEventArgModelAt(Index: Integer): IModel; safecall;
    function GetEventArgModelCount: Integer; safecall;
    function GetEventArgViewAt(Index: Integer): IView; safecall;
    function GetEventArgViewCount: Integer; safecall;
    function GetEventArgDocument: IDocument; safecall;
    function GetEventArgUnit: IUMLUnitDocument; safecall;
  end;

// *********************************************************************//
// DispIntf:  IEventPublisherDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {DBD4FF57-4477-41F6-9046-77C1F3643A8A}
// *********************************************************************//
  IEventPublisherDisp = dispinterface
    ['{DBD4FF57-4477-41F6-9046-77C1F3643A8A}']
    procedure Subscribe(const ASubscriber: IEventSubscriber; AEvent: EventKind); dispid 512;
    procedure SubscribeAll(const ASubscriber: IEventSubscriber); dispid 513;
    procedure Unsubscribe(const ASubscriber: IEventSubscriber; AEvent: EventKind); dispid 514;
    procedure UnsubscribeAll(const ASubscriber: IEventSubscriber); dispid 515;
    function GetEventArgModelAt(Index: Integer): IModel; dispid 516;
    function GetEventArgModelCount: Integer; dispid 517;
    function GetEventArgViewAt(Index: Integer): IView; dispid 518;
    function GetEventArgViewCount: Integer; dispid 519;
    function GetEventArgDocument: IDocument; dispid 520;
    function GetEventArgUnit: IUMLUnitDocument; dispid 521;
  end;

// *********************************************************************//
// Interface: IEventSubscriber
// Flags:     (256) OleAutomation
// GUID:      {CF0852B3-22FF-4EE9-A3E0-8FA299C689DA}
// *********************************************************************//
  IEventSubscriber = interface(IUnknown)
    ['{CF0852B3-22FF-4EE9-A3E0-8FA299C689DA}']
    function NotifyEvent(AEvent: EventKind): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IUMLClassDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30DFD772-7B09-4EEE-9705-C13EE93D2A44}
// *********************************************************************//
  IUMLClassDiagramView = interface(IUMLDiagramView)
    ['{30DFD772-7B09-4EEE-9705-C13EE93D2A44}']
  end;

// *********************************************************************//
// DispIntf:  IUMLClassDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30DFD772-7B09-4EEE-9705-C13EE93D2A44}
// *********************************************************************//
  IUMLClassDiagramViewDisp = dispinterface
    ['{30DFD772-7B09-4EEE-9705-C13EE93D2A44}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLDeploymentDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64FD0840-68E0-4ADF-A30A-F9D62E2DFC4C}
// *********************************************************************//
  IUMLDeploymentDiagramView = interface(IUMLDiagramView)
    ['{64FD0840-68E0-4ADF-A30A-F9D62E2DFC4C}']
  end;

// *********************************************************************//
// DispIntf:  IUMLDeploymentDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {64FD0840-68E0-4ADF-A30A-F9D62E2DFC4C}
// *********************************************************************//
  IUMLDeploymentDiagramViewDisp = dispinterface
    ['{64FD0840-68E0-4ADF-A30A-F9D62E2DFC4C}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLComponentDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A6101CC7-50F0-490A-B18F-6F21C30EFA85}
// *********************************************************************//
  IUMLComponentDiagramView = interface(IUMLDiagramView)
    ['{A6101CC7-50F0-490A-B18F-6F21C30EFA85}']
  end;

// *********************************************************************//
// DispIntf:  IUMLComponentDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A6101CC7-50F0-490A-B18F-6F21C30EFA85}
// *********************************************************************//
  IUMLComponentDiagramViewDisp = dispinterface
    ['{A6101CC7-50F0-490A-B18F-6F21C30EFA85}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLUseCaseDiagramView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BAD4803-8AA1-49E4-9F0F-36CC2EF617F1}
// *********************************************************************//
  IUMLUseCaseDiagramView = interface(IUMLDiagramView)
    ['{8BAD4803-8AA1-49E4-9F0F-36CC2EF617F1}']
  end;

// *********************************************************************//
// DispIntf:  IUMLUseCaseDiagramViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {8BAD4803-8AA1-49E4-9F0F-36CC2EF617F1}
// *********************************************************************//
  IUMLUseCaseDiagramViewDisp = dispinterface
    ['{8BAD4803-8AA1-49E4-9F0F-36CC2EF617F1}']
    function GetSelectedViewCount: Integer; dispid 1024;
    function GetSelectedViewAt(Index: Integer): IView; dispid 1025;
    property Diagram: IDiagram readonly dispid 1026;
    function GetOwnedViewCount: Integer; dispid 1027;
    function GetOwnedViewAt(Index: Integer): IView; dispid 1028;
    function CanOwnView(const AView: IView): WordBool; dispid 1029;
    function CanOwnViewKind(const Kind: WideString): WordBool; dispid 1030;
    function CanCopyViews: WordBool; dispid 1031;
    function CanDeleteViews: WordBool; dispid 1032;
    function CreateViewOf(const AModel: IModel; X: Integer; Y: Integer): IView; dispid 1033;
    procedure LayoutDiagram; dispid 1034;
    procedure CopyDiagram; dispid 1035;
    procedure ExportDiagramAsBitmap(const FileName: WideString); dispid 1036;
    procedure ExportDiagramAsMetafile(const FileName: WideString); dispid 1037;
    procedure ExportDiagramAsJPEG(const FileName: WideString); dispid 1038;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: INodeNodeView
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22CCD7E9-C8AE-41C9-B7E0-00E42DE57D31}
// *********************************************************************//
  INodeNodeView = interface(INodeParasiticView)
    ['{22CCD7E9-C8AE-41C9-B7E0-00E42DE57D31}']
  end;

// *********************************************************************//
// DispIntf:  INodeNodeViewDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {22CCD7E9-C8AE-41C9-B7E0-00E42DE57D31}
// *********************************************************************//
  INodeNodeViewDisp = dispinterface
    ['{22CCD7E9-C8AE-41C9-B7E0-00E42DE57D31}']
    property HostNode: INodeView readonly dispid 1536;
    property Alpha: Double dispid 1280;
    property Distance: Double dispid 1281;
    property Left: Integer dispid 1024;
    property Top: Integer dispid 1025;
    property Width: Integer dispid 1026;
    property Height: Integer dispid 1027;
    property MinWidth: Integer readonly dispid 1028;
    property MinHeight: Integer readonly dispid 1029;
    property AutoResize: WordBool dispid 1030;
    property LineColor: WideString dispid 768;
    property FillColor: WideString dispid 769;
    property FontFace: WideString dispid 770;
    property FontColor: WideString dispid 771;
    property FontSize: Integer dispid 772;
    property FontStyle: Integer dispid 773;
    property Visible: WordBool readonly dispid 774;
    property Enabled: WordBool readonly dispid 775;
    property Selected: WordBool readonly dispid 776;
    property Model: IModel readonly dispid 777;
    property ContainerView: IView readonly dispid 778;
    function GetContainedViewCount: Integer; dispid 779;
    function GetContainedViewAt(Index: Integer): IView; dispid 780;
    property OwnerDiagramView: IDiagramView readonly dispid 781;
    procedure BringToFront; dispid 782;
    procedure SendToBack; dispid 783;
    procedure Update; dispid 784;
    function GetDiagramView: IDiagramView; dispid 785;
    function CanContainView(const AView: IView): WordBool; dispid 786;
    function CanContainViewKind(const Kind: WideString): WordBool; dispid 787;
    procedure Move(DX: Integer; DY: Integer); dispid 788;
    procedure MoveInto(const AContainerView: IView); dispid 789;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLDataValue
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73E2074C-E519-4598-BD8C-DFFD53EFE5AB}
// *********************************************************************//
  IUMLDataValue = interface(IUMLInstance)
    ['{73E2074C-E519-4598-BD8C-DFFD53EFE5AB}']
  end;

// *********************************************************************//
// DispIntf:  IUMLDataValueDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {73E2074C-E519-4598-BD8C-DFFD53EFE5AB}
// *********************************************************************//
  IUMLDataValueDisp = dispinterface
    ['{73E2074C-E519-4598-BD8C-DFFD53EFE5AB}']
    property IsMultiInstance: WordBool dispid 1792;
    property Classifier: IUMLClassifier dispid 1793;
    procedure AddAttributeLink(const Value: IUMLAttributeLink); dispid 1794;
    procedure RemoveAttributeLink(const Value: IUMLAttributeLink); dispid 1795;
    procedure InsertAttributeLink(Index: Integer; const Value: IUMLAttributeLink); dispid 1796;
    procedure DeleteAttributeLink(Index: Integer); dispid 1797;
    function IndexOfAttributeLink(const Value: IUMLAttributeLink): Integer; dispid 1798;
    function GetAttributeLinkCount: Integer; dispid 1799;
    function GetAttributeLinkAt(Index: Integer): IUMLAttributeLink; dispid 1800;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); dispid 1801;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); dispid 1802;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); dispid 1803;
    procedure DeleteLinkEnd(Index: Integer); dispid 1804;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; dispid 1805;
    function GetLinkEndCount: Integer; dispid 1806;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; dispid 1807;
    function GetSlotCount: Integer; dispid 1808;
    function GetSlotAt(Index: Integer): IUMLAttributeLink; dispid 1809;
    procedure AddSendingStimulus(const Value: IUMLStimulus); dispid 1810;
    procedure RemoveSendingStimulus(const Value: IUMLStimulus); dispid 1811;
    procedure InsertSendingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1812;
    procedure DeleteSendingStimulus(Index: Integer); dispid 1813;
    function IndexOfSendingStimulus(const Value: IUMLStimulus): Integer; dispid 1814;
    function GetSendingStimulusCount: Integer; dispid 1815;
    function GetSendingStimulusAt(Index: Integer): IUMLStimulus; dispid 1816;
    property ComponentInstance: IUMLComponentInstance dispid 1817;
    procedure AddReceivingStimulus(const Value: IUMLStimulus); dispid 1818;
    procedure RemoveReceivingStimulus(const Value: IUMLStimulus); dispid 1819;
    procedure InsertReceivingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1820;
    procedure DeleteReceivingStimulus(Index: Integer); dispid 1821;
    function IndexOfReceivingStimulus(const Value: IUMLStimulus): Integer; dispid 1822;
    function GetReceivingStimulusCount: Integer; dispid 1823;
    function GetReceivingStimulusAt(Index: Integer): IUMLStimulus; dispid 1824;
    property Owner: IUMLInstance readonly dispid 1825;
    function GetOwnedInstanceCount: Integer; dispid 1826;
    function GetOwnedInstanceAt(Index: Integer): IUMLInstance; dispid 1827;
    function GetOwnedLinkCount: Integer; dispid 1828;
    function GetOwnedLinkAt(Index: Integer): IUMLLink; dispid 1829;
    procedure AddPlayedRole(const Value: IUMLClassifierRole); dispid 1830;
    procedure RemovePlayedRole(const Value: IUMLClassifierRole); dispid 1831;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1832;
    procedure DeletePlayedRole(Index: Integer); dispid 1833;
    function IndexOfPlayedRole(const Value: IUMLClassifierRole): Integer; dispid 1834;
    function GetPlayedRoleCount: Integer; dispid 1835;
    function GetPlayedRoleAt(Index: Integer): IUMLClassifierRole; dispid 1836;
    property CollaborationInstanceSet: IUMLCollaborationInstanceSet readonly dispid 1837;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSubsystemInstance
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A87707E-9080-47EA-9E96-2D75A9D153BA}
// *********************************************************************//
  IUMLSubsystemInstance = interface(IUMLInstance)
    ['{3A87707E-9080-47EA-9E96-2D75A9D153BA}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSubsystemInstanceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3A87707E-9080-47EA-9E96-2D75A9D153BA}
// *********************************************************************//
  IUMLSubsystemInstanceDisp = dispinterface
    ['{3A87707E-9080-47EA-9E96-2D75A9D153BA}']
    property IsMultiInstance: WordBool dispid 1792;
    property Classifier: IUMLClassifier dispid 1793;
    procedure AddAttributeLink(const Value: IUMLAttributeLink); dispid 1794;
    procedure RemoveAttributeLink(const Value: IUMLAttributeLink); dispid 1795;
    procedure InsertAttributeLink(Index: Integer; const Value: IUMLAttributeLink); dispid 1796;
    procedure DeleteAttributeLink(Index: Integer); dispid 1797;
    function IndexOfAttributeLink(const Value: IUMLAttributeLink): Integer; dispid 1798;
    function GetAttributeLinkCount: Integer; dispid 1799;
    function GetAttributeLinkAt(Index: Integer): IUMLAttributeLink; dispid 1800;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); dispid 1801;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); dispid 1802;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); dispid 1803;
    procedure DeleteLinkEnd(Index: Integer); dispid 1804;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; dispid 1805;
    function GetLinkEndCount: Integer; dispid 1806;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; dispid 1807;
    function GetSlotCount: Integer; dispid 1808;
    function GetSlotAt(Index: Integer): IUMLAttributeLink; dispid 1809;
    procedure AddSendingStimulus(const Value: IUMLStimulus); dispid 1810;
    procedure RemoveSendingStimulus(const Value: IUMLStimulus); dispid 1811;
    procedure InsertSendingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1812;
    procedure DeleteSendingStimulus(Index: Integer); dispid 1813;
    function IndexOfSendingStimulus(const Value: IUMLStimulus): Integer; dispid 1814;
    function GetSendingStimulusCount: Integer; dispid 1815;
    function GetSendingStimulusAt(Index: Integer): IUMLStimulus; dispid 1816;
    property ComponentInstance: IUMLComponentInstance dispid 1817;
    procedure AddReceivingStimulus(const Value: IUMLStimulus); dispid 1818;
    procedure RemoveReceivingStimulus(const Value: IUMLStimulus); dispid 1819;
    procedure InsertReceivingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1820;
    procedure DeleteReceivingStimulus(Index: Integer); dispid 1821;
    function IndexOfReceivingStimulus(const Value: IUMLStimulus): Integer; dispid 1822;
    function GetReceivingStimulusCount: Integer; dispid 1823;
    function GetReceivingStimulusAt(Index: Integer): IUMLStimulus; dispid 1824;
    property Owner: IUMLInstance readonly dispid 1825;
    function GetOwnedInstanceCount: Integer; dispid 1826;
    function GetOwnedInstanceAt(Index: Integer): IUMLInstance; dispid 1827;
    function GetOwnedLinkCount: Integer; dispid 1828;
    function GetOwnedLinkAt(Index: Integer): IUMLLink; dispid 1829;
    procedure AddPlayedRole(const Value: IUMLClassifierRole); dispid 1830;
    procedure RemovePlayedRole(const Value: IUMLClassifierRole); dispid 1831;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1832;
    procedure DeletePlayedRole(Index: Integer); dispid 1833;
    function IndexOfPlayedRole(const Value: IUMLClassifierRole): Integer; dispid 1834;
    function GetPlayedRoleCount: Integer; dispid 1835;
    function GetPlayedRoleAt(Index: Integer): IUMLClassifierRole; dispid 1836;
    property CollaborationInstanceSet: IUMLCollaborationInstanceSet readonly dispid 1837;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLUseCaseInstance
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0BAC9770-BD34-49C9-89F9-F58DFFBAF1B4}
// *********************************************************************//
  IUMLUseCaseInstance = interface(IUMLInstance)
    ['{0BAC9770-BD34-49C9-89F9-F58DFFBAF1B4}']
  end;

// *********************************************************************//
// DispIntf:  IUMLUseCaseInstanceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {0BAC9770-BD34-49C9-89F9-F58DFFBAF1B4}
// *********************************************************************//
  IUMLUseCaseInstanceDisp = dispinterface
    ['{0BAC9770-BD34-49C9-89F9-F58DFFBAF1B4}']
    property IsMultiInstance: WordBool dispid 1792;
    property Classifier: IUMLClassifier dispid 1793;
    procedure AddAttributeLink(const Value: IUMLAttributeLink); dispid 1794;
    procedure RemoveAttributeLink(const Value: IUMLAttributeLink); dispid 1795;
    procedure InsertAttributeLink(Index: Integer; const Value: IUMLAttributeLink); dispid 1796;
    procedure DeleteAttributeLink(Index: Integer); dispid 1797;
    function IndexOfAttributeLink(const Value: IUMLAttributeLink): Integer; dispid 1798;
    function GetAttributeLinkCount: Integer; dispid 1799;
    function GetAttributeLinkAt(Index: Integer): IUMLAttributeLink; dispid 1800;
    procedure AddLinkEnd(const Value: IUMLLinkEnd); dispid 1801;
    procedure RemoveLinkEnd(const Value: IUMLLinkEnd); dispid 1802;
    procedure InsertLinkEnd(Index: Integer; const Value: IUMLLinkEnd); dispid 1803;
    procedure DeleteLinkEnd(Index: Integer); dispid 1804;
    function IndexOfLinkEnd(const Value: IUMLLinkEnd): Integer; dispid 1805;
    function GetLinkEndCount: Integer; dispid 1806;
    function GetLinkEndAt(Index: Integer): IUMLLinkEnd; dispid 1807;
    function GetSlotCount: Integer; dispid 1808;
    function GetSlotAt(Index: Integer): IUMLAttributeLink; dispid 1809;
    procedure AddSendingStimulus(const Value: IUMLStimulus); dispid 1810;
    procedure RemoveSendingStimulus(const Value: IUMLStimulus); dispid 1811;
    procedure InsertSendingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1812;
    procedure DeleteSendingStimulus(Index: Integer); dispid 1813;
    function IndexOfSendingStimulus(const Value: IUMLStimulus): Integer; dispid 1814;
    function GetSendingStimulusCount: Integer; dispid 1815;
    function GetSendingStimulusAt(Index: Integer): IUMLStimulus; dispid 1816;
    property ComponentInstance: IUMLComponentInstance dispid 1817;
    procedure AddReceivingStimulus(const Value: IUMLStimulus); dispid 1818;
    procedure RemoveReceivingStimulus(const Value: IUMLStimulus); dispid 1819;
    procedure InsertReceivingStimulus(Index: Integer; const Value: IUMLStimulus); dispid 1820;
    procedure DeleteReceivingStimulus(Index: Integer); dispid 1821;
    function IndexOfReceivingStimulus(const Value: IUMLStimulus): Integer; dispid 1822;
    function GetReceivingStimulusCount: Integer; dispid 1823;
    function GetReceivingStimulusAt(Index: Integer): IUMLStimulus; dispid 1824;
    property Owner: IUMLInstance readonly dispid 1825;
    function GetOwnedInstanceCount: Integer; dispid 1826;
    function GetOwnedInstanceAt(Index: Integer): IUMLInstance; dispid 1827;
    function GetOwnedLinkCount: Integer; dispid 1828;
    function GetOwnedLinkAt(Index: Integer): IUMLLink; dispid 1829;
    procedure AddPlayedRole(const Value: IUMLClassifierRole); dispid 1830;
    procedure RemovePlayedRole(const Value: IUMLClassifierRole); dispid 1831;
    procedure InsertPlayedRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1832;
    procedure DeletePlayedRole(Index: Integer); dispid 1833;
    function IndexOfPlayedRole(const Value: IUMLClassifierRole): Integer; dispid 1834;
    function GetPlayedRoleCount: Integer; dispid 1835;
    function GetPlayedRoleAt(Index: Integer): IUMLClassifierRole; dispid 1836;
    property CollaborationInstanceSet: IUMLCollaborationInstanceSet readonly dispid 1837;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSynchState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ABACE03E-25C3-471D-99AF-0DDE0FD9F733}
// *********************************************************************//
  IUMLSynchState = interface(IUMLStateVertex)
    ['{ABACE03E-25C3-471D-99AF-0DDE0FD9F733}']
    function Get_Bound: Integer; safecall;
    procedure Set_Bound(Value: Integer); safecall;
    property Bound: Integer read Get_Bound write Set_Bound;
  end;

// *********************************************************************//
// DispIntf:  IUMLSynchStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {ABACE03E-25C3-471D-99AF-0DDE0FD9F733}
// *********************************************************************//
  IUMLSynchStateDisp = dispinterface
    ['{ABACE03E-25C3-471D-99AF-0DDE0FD9F733}']
    property Bound: Integer dispid 2048;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLStubState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2341FB1-F55B-4043-A524-D219430DA27D}
// *********************************************************************//
  IUMLStubState = interface(IUMLStateVertex)
    ['{D2341FB1-F55B-4043-A524-D219430DA27D}']
    function Get_ReferenceState: WideString; safecall;
    procedure Set_ReferenceState(const Value: WideString); safecall;
    property ReferenceState: WideString read Get_ReferenceState write Set_ReferenceState;
  end;

// *********************************************************************//
// DispIntf:  IUMLStubStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D2341FB1-F55B-4043-A524-D219430DA27D}
// *********************************************************************//
  IUMLStubStateDisp = dispinterface
    ['{D2341FB1-F55B-4043-A524-D219430DA27D}']
    property ReferenceState: WideString dispid 2048;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSignalAcceptState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70F0A224-BE87-4D4B-8C53-1F17E79EAC1C}
// *********************************************************************//
  IUMLSignalAcceptState = interface(IUMLActionState)
    ['{70F0A224-BE87-4D4B-8C53-1F17E79EAC1C}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSignalAcceptStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {70F0A224-BE87-4D4B-8C53-1F17E79EAC1C}
// *********************************************************************//
  IUMLSignalAcceptStateDisp = dispinterface
    ['{70F0A224-BE87-4D4B-8C53-1F17E79EAC1C}']
    property IsDynamic: WordBool dispid 2560;
    property DynamicArguments: WideString dispid 2561;
    property DynamicMultiplicity: WideString dispid 2562;
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCallState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {564C7539-033C-4D11-BD1F-E984A320785B}
// *********************************************************************//
  IUMLCallState = interface(IUMLActionState)
    ['{564C7539-033C-4D11-BD1F-E984A320785B}']
  end;

// *********************************************************************//
// DispIntf:  IUMLCallStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {564C7539-033C-4D11-BD1F-E984A320785B}
// *********************************************************************//
  IUMLCallStateDisp = dispinterface
    ['{564C7539-033C-4D11-BD1F-E984A320785B}']
    property IsDynamic: WordBool dispid 2560;
    property DynamicArguments: WideString dispid 2561;
    property DynamicMultiplicity: WideString dispid 2562;
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLSignalSendState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EAD0853A-1746-453C-9B64-11AC3586ACD6}
// *********************************************************************//
  IUMLSignalSendState = interface(IUMLActionState)
    ['{EAD0853A-1746-453C-9B64-11AC3586ACD6}']
  end;

// *********************************************************************//
// DispIntf:  IUMLSignalSendStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {EAD0853A-1746-453C-9B64-11AC3586ACD6}
// *********************************************************************//
  IUMLSignalSendStateDisp = dispinterface
    ['{EAD0853A-1746-453C-9B64-11AC3586ACD6}']
    property IsDynamic: WordBool dispid 2560;
    property DynamicArguments: WideString dispid 2561;
    property DynamicMultiplicity: WideString dispid 2562;
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLFlowFinalState
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48BA99AC-0B8B-47AA-8C9E-0E3BE932E7F8}
// *********************************************************************//
  IUMLFlowFinalState = interface(IUMLFinalState)
    ['{48BA99AC-0B8B-47AA-8C9E-0E3BE932E7F8}']
  end;

// *********************************************************************//
// DispIntf:  IUMLFlowFinalStateDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {48BA99AC-0B8B-47AA-8C9E-0E3BE932E7F8}
// *********************************************************************//
  IUMLFlowFinalStateDisp = dispinterface
    ['{48BA99AC-0B8B-47AA-8C9E-0E3BE932E7F8}']
    function GetEntryActionCount: Integer; dispid 2048;
    function GetEntryActionAt(Index: Integer): IUMLAction; dispid 2049;
    function GetExitActionCount: Integer; dispid 2050;
    function GetExitActionAt(Index: Integer): IUMLAction; dispid 2051;
    property StateMachine: IUMLStateMachine readonly dispid 2052;
    procedure AddDeferrableEvent(const Value: IUMLEvent); dispid 2053;
    procedure RemoveDeferrableEvent(const Value: IUMLEvent); dispid 2054;
    procedure InsertDeferrableEvent(Index: Integer; const Value: IUMLEvent); dispid 2055;
    procedure DeleteDeferrableEvent(Index: Integer); dispid 2056;
    function IndexOfDeferrableEvent(const Value: IUMLEvent): Integer; dispid 2057;
    function GetDeferrableEventCount: Integer; dispid 2058;
    function GetDeferrableEventAt(Index: Integer): IUMLEvent; dispid 2059;
    function GetInternalTransitionCount: Integer; dispid 2060;
    function GetInternalTransitionAt(Index: Integer): IUMLTransition; dispid 2061;
    function GetDoActivityCount: Integer; dispid 2062;
    function GetDoActivityAt(Index: Integer): IUMLAction; dispid 2063;
    procedure AddClassifierState(const Value: IUMLClassifierInState); dispid 2064;
    procedure RemoveClassifierState(const Value: IUMLClassifierInState); dispid 2065;
    procedure InsertClassifierState(Index: Integer; const Value: IUMLClassifierInState); dispid 2066;
    procedure DeleteClassifierState(Index: Integer); dispid 2067;
    function IndexOfClassifierState(const Value: IUMLClassifierInState): Integer; dispid 2068;
    function GetClassifierStateCount: Integer; dispid 2069;
    function GetClassifierStateAt(Index: Integer): IUMLClassifierInState; dispid 2070;
    property ContainerState: IUMLCompositeState readonly dispid 1792;
    procedure AddOutgoing(const Value: IUMLTransition); dispid 1793;
    procedure RemoveOutgoing(const Value: IUMLTransition); dispid 1794;
    procedure InsertOutgoing(Index: Integer; const Value: IUMLTransition); dispid 1795;
    procedure DeleteOutgoing(Index: Integer); dispid 1796;
    function IndexOfOutgoing(const Value: IUMLTransition): Integer; dispid 1797;
    function GetOutgoingCount: Integer; dispid 1798;
    function GetOutgoingAt(Index: Integer): IUMLTransition; dispid 1799;
    procedure AddIncoming(const Value: IUMLTransition); dispid 1800;
    procedure RemoveIncoming(const Value: IUMLTransition); dispid 1801;
    procedure InsertIncoming(Index: Integer; const Value: IUMLTransition); dispid 1802;
    procedure DeleteIncoming(Index: Integer); dispid 1803;
    function IndexOfIncoming(const Value: IUMLTransition): Integer; dispid 1804;
    function GetIncomingCount: Integer; dispid 1805;
    function GetIncomingAt(Index: Integer): IUMLTransition; dispid 1806;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLProgrammingLanguageDataType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D5EB8A2E-7154-40F9-A33E-E83B940807F8}
// *********************************************************************//
  IUMLProgrammingLanguageDataType = interface(IUMLDataType)
    ['{D5EB8A2E-7154-40F9-A33E-E83B940807F8}']
    function Get_Expression: WideString; safecall;
    procedure Set_Expression(const Value: WideString); safecall;
    property Expression: WideString read Get_Expression write Set_Expression;
  end;

// *********************************************************************//
// DispIntf:  IUMLProgrammingLanguageDataTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {D5EB8A2E-7154-40F9-A33E-E83B940807F8}
// *********************************************************************//
  IUMLProgrammingLanguageDataTypeDisp = dispinterface
    ['{D5EB8A2E-7154-40F9-A33E-E83B940807F8}']
    property Expression: WideString dispid 2816;
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLPrimitive
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7C84E1B8-A335-4E69-9230-A2BEC9F9509A}
// *********************************************************************//
  IUMLPrimitive = interface(IUMLDataType)
    ['{7C84E1B8-A335-4E69-9230-A2BEC9F9509A}']
  end;

// *********************************************************************//
// DispIntf:  IUMLPrimitiveDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7C84E1B8-A335-4E69-9230-A2BEC9F9509A}
// *********************************************************************//
  IUMLPrimitiveDisp = dispinterface
    ['{7C84E1B8-A335-4E69-9230-A2BEC9F9509A}']
    function GetOperationCount: Integer; dispid 2304;
    function GetOperationAt(Index: Integer): IUMLOperation; dispid 2305;
    procedure AddTypedFeature(const Value: IUMLStructuralFeature); dispid 2306;
    procedure RemoveTypedFeature(const Value: IUMLStructuralFeature); dispid 2307;
    procedure InsertTypedFeature(Index: Integer; const Value: IUMLStructuralFeature); dispid 2308;
    procedure DeleteTypedFeature(Index: Integer); dispid 2309;
    function IndexOfTypedFeature(const Value: IUMLStructuralFeature): Integer; dispid 2310;
    function GetTypedFeatureCount: Integer; dispid 2311;
    function GetTypedFeatureAt(Index: Integer): IUMLStructuralFeature; dispid 2312;
    procedure AddTypedParameter(const Value: IUMLParameter); dispid 2313;
    procedure RemoveTypedParameter(const Value: IUMLParameter); dispid 2314;
    procedure InsertTypedParameter(Index: Integer; const Value: IUMLParameter); dispid 2315;
    procedure DeleteTypedParameter(Index: Integer); dispid 2316;
    function IndexOfTypedParameter(const Value: IUMLParameter): Integer; dispid 2317;
    function GetTypedParameterCount: Integer; dispid 2318;
    function GetTypedParameterAt(Index: Integer): IUMLParameter; dispid 2319;
    procedure AddAssociation(const Value: IUMLAssociationEnd); dispid 2320;
    procedure RemoveAssociation(const Value: IUMLAssociationEnd); dispid 2321;
    procedure InsertAssociation(Index: Integer; const Value: IUMLAssociationEnd); dispid 2322;
    procedure DeleteAssociation(Index: Integer); dispid 2323;
    function IndexOfAssociation(const Value: IUMLAssociationEnd): Integer; dispid 2324;
    function GetAssociationCount: Integer; dispid 2325;
    function GetAssociationAt(Index: Integer): IUMLAssociationEnd; dispid 2326;
    procedure AddPowertypeGeneralization(const Value: IUMLGeneralization); dispid 2327;
    procedure RemovePowertypeGeneralization(const Value: IUMLGeneralization); dispid 2328;
    procedure InsertPowertypeGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 2329;
    procedure DeletePowertypeGeneralization(Index: Integer); dispid 2330;
    function IndexOfPowertypeGeneralization(const Value: IUMLGeneralization): Integer; dispid 2331;
    function GetPowertypeGeneralizationCount: Integer; dispid 2332;
    function GetPowertypeGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 2333;
    function GetAttributeCount: Integer; dispid 2334;
    function GetAttributeAt(Index: Integer): IUMLAttribute; dispid 2335;
    procedure AddOwnedPort(const Value: IUMLPort); dispid 2336;
    procedure RemoveOwnedPort(const Value: IUMLPort); dispid 2337;
    procedure InsertOwnedPort(Index: Integer; const Value: IUMLPort); dispid 2338;
    procedure DeleteOwnedPort(Index: Integer); dispid 2339;
    function IndexOfOwnedPort(const Value: IUMLPort): Integer; dispid 2340;
    function GetOwnedPortCount: Integer; dispid 2341;
    function GetOwnedPortAt(Index: Integer): IUMLPort; dispid 2342;
    procedure AddOwnedConnector(const Value: IUMLConnector); dispid 2343;
    procedure RemoveOwnedConnector(const Value: IUMLConnector); dispid 2344;
    procedure InsertOwnedConnector(Index: Integer; const Value: IUMLConnector); dispid 2345;
    procedure DeleteOwnedConnector(Index: Integer); dispid 2346;
    function IndexOfOwnedConnector(const Value: IUMLConnector): Integer; dispid 2347;
    function GetOwnedConnectorCount: Integer; dispid 2348;
    function GetOwnedConnectorAt(Index: Integer): IUMLConnector; dispid 2349;
    procedure AddInstance(const Value: IUMLInstance); dispid 2350;
    procedure RemoveInstance(const Value: IUMLInstance); dispid 2351;
    procedure InsertInstance(Index: Integer; const Value: IUMLInstance); dispid 2352;
    procedure DeleteInstance(Index: Integer); dispid 2353;
    function IndexOfInstance(const Value: IUMLInstance): Integer; dispid 2354;
    function GetInstanceCount: Integer; dispid 2355;
    function GetInstanceAt(Index: Integer): IUMLInstance; dispid 2356;
    procedure AddCreateAction(const Value: IUMLCreateAction); dispid 2357;
    procedure RemoveCreateAction(const Value: IUMLCreateAction); dispid 2358;
    procedure InsertCreateAction(Index: Integer; const Value: IUMLCreateAction); dispid 2359;
    procedure DeleteCreateAction(Index: Integer); dispid 2360;
    function IndexOfCreateAction(const Value: IUMLCreateAction): Integer; dispid 2361;
    function GetCreateActionCount: Integer; dispid 2362;
    function GetCreateActionAt(Index: Integer): IUMLCreateAction; dispid 2363;
    procedure AddClassifierRole(const Value: IUMLClassifierRole); dispid 2364;
    procedure RemoveClassifierRole(const Value: IUMLClassifierRole); dispid 2365;
    procedure InsertClassifierRole(Index: Integer; const Value: IUMLClassifierRole); dispid 2366;
    procedure DeleteClassifierRole(Index: Integer); dispid 2367;
    function IndexOfClassifierRole(const Value: IUMLClassifierRole): Integer; dispid 2368;
    function GetClassifierRoleCount: Integer; dispid 2369;
    function GetClassifierRoleAt(Index: Integer): IUMLClassifierRole; dispid 2370;
    function GetOwnedCollaborationCount: Integer; dispid 2371;
    function GetOwnedCollaborationAt(Index: Integer): IUMLCollaboration; dispid 2372;
    function GetOwnedCollaborationInstanceSetCount: Integer; dispid 2373;
    function GetOwnedCollaborationInstanceSetAt(Index: Integer): IUMLCollaborationInstanceSet; dispid 2374;
    procedure AddClassifierInState(const Value: IUMLClassifierInState); dispid 2375;
    procedure RemoveClassifierInState(const Value: IUMLClassifierInState); dispid 2376;
    procedure InsertClassifierInState(Index: Integer; const Value: IUMLClassifierInState); dispid 2377;
    procedure DeleteClassifierInState(Index: Integer); dispid 2378;
    function IndexOfClassifierInState(const Value: IUMLClassifierInState): Integer; dispid 2379;
    function GetClassifierInStateCount: Integer; dispid 2380;
    function GetClassifierInStateAt(Index: Integer): IUMLClassifierInState; dispid 2381;
    procedure AddObjectFlowState(const Value: IUMLObjectFlowState); dispid 2382;
    procedure RemoveObjectFlowState(const Value: IUMLObjectFlowState); dispid 2383;
    procedure InsertObjectFlowState(Index: Integer; const Value: IUMLObjectFlowState); dispid 2384;
    procedure DeleteObjectFlowState(Index: Integer); dispid 2385;
    function IndexOfObjectFlowState(const Value: IUMLObjectFlowState): Integer; dispid 2386;
    function GetObjectFlowStateCount: Integer; dispid 2387;
    function GetObjectFlowStateAt(Index: Integer): IUMLObjectFlowState; dispid 2388;
    function GetOwnedElementCount: Integer; dispid 2048;
    function GetOwnedElementAt(Index: Integer): IUMLModelElement; dispid 2049;
    property IsRoot: WordBool dispid 1792;
    property IsLeaf: WordBool dispid 1793;
    property IsAbstract: WordBool dispid 1794;
    procedure AddGeneralization(const Value: IUMLGeneralization); dispid 1795;
    procedure RemoveGeneralization(const Value: IUMLGeneralization); dispid 1796;
    procedure InsertGeneralization(Index: Integer; const Value: IUMLGeneralization); dispid 1797;
    procedure DeleteGeneralization(Index: Integer); dispid 1798;
    function IndexOfGeneralization(const Value: IUMLGeneralization): Integer; dispid 1799;
    function GetGeneralizationCount: Integer; dispid 1800;
    function GetGeneralizationAt(Index: Integer): IUMLGeneralization; dispid 1801;
    procedure AddSpecialization(const Value: IUMLGeneralization); dispid 1802;
    procedure RemoveSpecialization(const Value: IUMLGeneralization); dispid 1803;
    procedure InsertSpecialization(Index: Integer; const Value: IUMLGeneralization); dispid 1804;
    procedure DeleteSpecialization(Index: Integer); dispid 1805;
    function IndexOfSpecialization(const Value: IUMLGeneralization): Integer; dispid 1806;
    function GetSpecializationCount: Integer; dispid 1807;
    function GetSpecializationAt(Index: Integer): IUMLGeneralization; dispid 1808;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLTerminateAction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {655B6830-178F-4632-B7D2-1DF518F4599F}
// *********************************************************************//
  IUMLTerminateAction = interface(IUMLAction)
    ['{655B6830-178F-4632-B7D2-1DF518F4599F}']
  end;

// *********************************************************************//
// DispIntf:  IUMLTerminateActionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {655B6830-178F-4632-B7D2-1DF518F4599F}
// *********************************************************************//
  IUMLTerminateActionDisp = dispinterface
    ['{655B6830-178F-4632-B7D2-1DF518F4599F}']
    property Recurrence: WideString dispid 1792;
    property Target: WideString dispid 1793;
    property IsAsynchronous: WordBool dispid 1794;
    property Script: WideString dispid 1795;
    function GetActualArgumentCount: Integer; dispid 1796;
    function GetActualArgumentAt(Index: Integer): IUMLArgument; dispid 1797;
    property ActionSequence: IUMLActionSequence readonly dispid 1798;
    property Stimulus: IUMLStimulus readonly dispid 1799;
    property EntryState: IUMLState readonly dispid 1800;
    property ExitState: IUMLState readonly dispid 1801;
    property Transition: IUMLTransition readonly dispid 1802;
    property DoActivityState: IUMLState readonly dispid 1803;
    property Message: IUMLMessage readonly dispid 1804;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLDestroyAction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E88B8D27-000F-4108-A2EF-00E5031F095B}
// *********************************************************************//
  IUMLDestroyAction = interface(IUMLAction)
    ['{E88B8D27-000F-4108-A2EF-00E5031F095B}']
  end;

// *********************************************************************//
// DispIntf:  IUMLDestroyActionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {E88B8D27-000F-4108-A2EF-00E5031F095B}
// *********************************************************************//
  IUMLDestroyActionDisp = dispinterface
    ['{E88B8D27-000F-4108-A2EF-00E5031F095B}']
    property Recurrence: WideString dispid 1792;
    property Target: WideString dispid 1793;
    property IsAsynchronous: WordBool dispid 1794;
    property Script: WideString dispid 1795;
    function GetActualArgumentCount: Integer; dispid 1796;
    function GetActualArgumentAt(Index: Integer): IUMLArgument; dispid 1797;
    property ActionSequence: IUMLActionSequence readonly dispid 1798;
    property Stimulus: IUMLStimulus readonly dispid 1799;
    property EntryState: IUMLState readonly dispid 1800;
    property ExitState: IUMLState readonly dispid 1801;
    property Transition: IUMLTransition readonly dispid 1802;
    property DoActivityState: IUMLState readonly dispid 1803;
    property Message: IUMLMessage readonly dispid 1804;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLReturnAction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18C78FBA-D71B-4221-A34A-253338D864CB}
// *********************************************************************//
  IUMLReturnAction = interface(IUMLAction)
    ['{18C78FBA-D71B-4221-A34A-253338D864CB}']
  end;

// *********************************************************************//
// DispIntf:  IUMLReturnActionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {18C78FBA-D71B-4221-A34A-253338D864CB}
// *********************************************************************//
  IUMLReturnActionDisp = dispinterface
    ['{18C78FBA-D71B-4221-A34A-253338D864CB}']
    property Recurrence: WideString dispid 1792;
    property Target: WideString dispid 1793;
    property IsAsynchronous: WordBool dispid 1794;
    property Script: WideString dispid 1795;
    function GetActualArgumentCount: Integer; dispid 1796;
    function GetActualArgumentAt(Index: Integer): IUMLArgument; dispid 1797;
    property ActionSequence: IUMLActionSequence readonly dispid 1798;
    property Stimulus: IUMLStimulus readonly dispid 1799;
    property EntryState: IUMLState readonly dispid 1800;
    property ExitState: IUMLState readonly dispid 1801;
    property Transition: IUMLTransition readonly dispid 1802;
    property DoActivityState: IUMLState readonly dispid 1803;
    property Message: IUMLMessage readonly dispid 1804;
    property Visibility: UMLVisibilityKind dispid 1536;
    property IsSpecification: WordBool dispid 1537;
    procedure AddElementImport(const Value: IUMLElementImport); dispid 1538;
    procedure RemoveElementImport(const Value: IUMLElementImport); dispid 1539;
    procedure InsertElementImport(Index: Integer; const Value: IUMLElementImport); dispid 1540;
    procedure DeleteElementImport(Index: Integer); dispid 1541;
    function IndexOfElementImport(const Value: IUMLElementImport): Integer; dispid 1542;
    function GetElementImportCount: Integer; dispid 1543;
    function GetElementImportAt(Index: Integer): IUMLElementImport; dispid 1544;
    property Namespace: IUMLNamespace readonly dispid 1545;
    procedure AddClientDependency(const Value: IUMLDependency); dispid 1546;
    procedure RemoveClientDependency(const Value: IUMLDependency); dispid 1547;
    procedure InsertClientDependency(Index: Integer; const Value: IUMLDependency); dispid 1548;
    procedure DeleteClientDependency(Index: Integer); dispid 1549;
    function IndexOfClientDependency(const Value: IUMLDependency): Integer; dispid 1550;
    function GetClientDependencyCount: Integer; dispid 1551;
    function GetClientDependencyAt(Index: Integer): IUMLDependency; dispid 1552;
    procedure AddSupplierDependency(const Value: IUMLDependency); dispid 1553;
    procedure RemoveSupplierDependency(const Value: IUMLDependency); dispid 1554;
    procedure InsertSupplierDependency(Index: Integer; const Value: IUMLDependency); dispid 1555;
    procedure DeleteSupplierDependency(Index: Integer); dispid 1556;
    function IndexOfSupplierDependency(const Value: IUMLDependency): Integer; dispid 1557;
    function GetSupplierDependencyCount: Integer; dispid 1558;
    function GetSupplierDependencyAt(Index: Integer): IUMLDependency; dispid 1559;
    procedure AddDefaultParameter(const Value: IUMLTemplateParameter); dispid 1560;
    procedure RemoveDefaultParameter(const Value: IUMLTemplateParameter); dispid 1561;
    procedure InsertDefaultParameter(Index: Integer; const Value: IUMLTemplateParameter); dispid 1562;
    procedure DeleteDefaultParameter(Index: Integer); dispid 1563;
    function IndexOfDefaultParameter(const Value: IUMLTemplateParameter): Integer; dispid 1564;
    function GetDefaultParameterCount: Integer; dispid 1565;
    function GetDefaultParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1566;
    procedure AddComment(const Value: IUMLComment); dispid 1567;
    procedure RemoveComment(const Value: IUMLComment); dispid 1568;
    procedure InsertComment(Index: Integer; const Value: IUMLComment); dispid 1569;
    procedure DeleteComment(Index: Integer); dispid 1570;
    function IndexOfComment(const Value: IUMLComment): Integer; dispid 1571;
    function GetCommentCount: Integer; dispid 1572;
    function GetCommentAt(Index: Integer): IUMLComment; dispid 1573;
    property Container: IUMLComponent dispid 1574;
    function GetTemplateParameterCount: Integer; dispid 1575;
    function GetTemplateParameterAt(Index: Integer): IUMLTemplateParameter; dispid 1576;
    property ParameterOwner: IUMLTemplateParameter readonly dispid 1577;
    procedure AddTemplateArgument(const Value: IUMLTemplateArgument); dispid 1578;
    procedure RemoveTemplateArgument(const Value: IUMLTemplateArgument); dispid 1579;
    procedure InsertTemplateArgument(Index: Integer; const Value: IUMLTemplateArgument); dispid 1580;
    procedure DeleteTemplateArgument(Index: Integer); dispid 1581;
    function IndexOfTemplateArgument(const Value: IUMLTemplateArgument): Integer; dispid 1582;
    function GetTemplateArgumentCount: Integer; dispid 1583;
    function GetTemplateArgumentAt(Index: Integer): IUMLTemplateArgument; dispid 1584;
    function GetBehaviorCount: Integer; dispid 1585;
    function GetBehaviorAt(Index: Integer): IUMLStateMachine; dispid 1586;
    procedure AddContentRole(const Value: IUMLClassifierRole); dispid 1587;
    procedure RemoveContentRole(const Value: IUMLClassifierRole); dispid 1588;
    procedure InsertContentRole(Index: Integer; const Value: IUMLClassifierRole); dispid 1589;
    procedure DeleteContentRole(Index: Integer); dispid 1590;
    function IndexOfContentRole(const Value: IUMLClassifierRole): Integer; dispid 1591;
    function GetContentRoleCount: Integer; dispid 1592;
    function GetContentRoleAt(Index: Integer): IUMLClassifierRole; dispid 1593;
    procedure AddOwnerPartition(const Value: IUMLPartition); dispid 1594;
    procedure RemoveOwnerPartition(const Value: IUMLPartition); dispid 1595;
    procedure InsertOwnerPartition(Index: Integer; const Value: IUMLPartition); dispid 1596;
    procedure DeleteOwnerPartition(Index: Integer); dispid 1597;
    function IndexOfOwnerPartition(const Value: IUMLPartition): Integer; dispid 1598;
    function GetOwnerPartitionCount: Integer; dispid 1599;
    function GetOwnerPartitionAt(Index: Integer): IUMLPartition; dispid 1600;
    property StereotypeProfile: WideString readonly dispid 1024;
    property StereotypeName: WideString readonly dispid 1025;
    function GetConstraintCount: Integer; dispid 1026;
    function GetConstraintAt(Index: Integer): IConstraint; dispid 1027;
    function GetTaggedValueCount: Integer; dispid 1028;
    function GetTaggedValueAt(Index: Integer): ITaggedValue; dispid 1029;
    function GetReferencingTagCount: Integer; dispid 1030;
    function GetReferencingTagAt(Index: Integer): ITaggedValue; dispid 1031;
    function GetStereotype: IStereotype; dispid 1032;
    procedure SetStereotype(const Name: WideString); dispid 1033;
    procedure SetStereotype2(const Profile: WideString; const Name: WideString); dispid 1034;
    function AddConstraint(const Name: WideString; const Body: WideString): IConstraint; dispid 1035;
    procedure DeleteConstraint(Index: Integer); dispid 1036;
    function IndexOfConstraint(const AConstraint: IConstraint): Integer; dispid 1037;
    procedure MoveConstraint(const AConstraint: IConstraint; NewIndex: Integer); dispid 1038;
    function GetTaggedValueAsInteger(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): Integer; dispid 1039;
    procedure SetTaggedValueAsInteger(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: Integer); dispid 1040;
    function GetTaggedValueAsBoolean(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString): WordBool; dispid 1041;
    procedure SetTaggedValueAsBoolean(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString; 
                                      Value: WordBool); dispid 1042;
    function GetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): Double; dispid 1043;
    procedure SetTaggedValueAsReal(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; Value: Double); dispid 1044;
    function GetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                    const Name: WideString): WideString; dispid 1045;
    procedure SetTaggedValueAsString(const Profile: WideString; const TagDefinitionSet: WideString; 
                                     const Name: WideString; const Value: WideString); dispid 1046;
    function GetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                  const Name: WideString): WideString; dispid 1047;
    procedure SetTaggedValueAsEnum(const Profile: WideString; const TagDefinitionSet: WideString; 
                                   const Name: WideString; const Value: WideString); dispid 1048;
    function GetTaggedValueAsReference(const Profile: WideString; 
                                       const TagDefinitionSet: WideString; const Name: WideString): IExtensibleModel; dispid 1049;
    function GetTaggedValueAsReferenceAt(const Profile: WideString; 
                                         const TagDefinitionSet: WideString; 
                                         const Name: WideString; Index: Integer): IExtensibleModel; dispid 1050;
    function GetTaggedValueAsReferenceCount(const Profile: WideString; 
                                            const TagDefinitionSet: WideString; 
                                            const Name: WideString): Integer; dispid 1051;
    procedure SetTaggedValueAsReference(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1052;
    procedure AddReferenceToTaggedValue(const Profile: WideString; 
                                        const TagDefinitionSet: WideString; const Name: WideString; 
                                        const Value: IExtensibleModel); dispid 1053;
    procedure RemoveReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel); dispid 1054;
    procedure InsertReferenceToTaggedValue(const Profile: WideString; 
                                           const TagDefinitionSet: WideString; 
                                           const Name: WideString; Index: Integer; 
                                           const Value: IExtensibleModel); dispid 1055;
    procedure DeleteReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; Index: Integer); dispid 1056;
    function IndexOfReferenceFromTaggedValue(const Profile: WideString; 
                                             const TagDefinitionSet: WideString; 
                                             const Name: WideString; const Value: IExtensibleModel): Integer; dispid 1057;
    procedure SetTaggedValueAsDefault(const Profile: WideString; 
                                      const TagDefinitionSet: WideString; const Name: WideString); dispid 1058;
    function GetTaggedValue(const Profile: WideString; const TagDefinitionSet: WideString; 
                            const Name: WideString): OleVariant; dispid 1059;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IUMLCompositeStructureDiagram
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {793DE345-9E62-4AAF-AB25-F035B55F8CEB}
// *********************************************************************//
  IUMLCompositeStructureDiagram = interface(IUMLDiagram)
    ['{793DE345-9E62-4AAF-AB25-F035B55F8CEB}']
  end;

// *********************************************************************//
// DispIntf:  IUMLCompositeStructureDiagramDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {793DE345-9E62-4AAF-AB25-F035B55F8CEB}
// *********************************************************************//
  IUMLCompositeStructureDiagramDisp = dispinterface
    ['{793DE345-9E62-4AAF-AB25-F035B55F8CEB}']
    property DefaultDiagram: WordBool dispid 1024;
    property DiagramOwner: IModel readonly dispid 1025;
    property DiagramView: IDiagramView readonly dispid 1026;
    property Name: WideString dispid 768;
    property Documentation: WideString dispid 769;
    property Attachments: WideString readonly dispid 770;
    property Pathname: WideString readonly dispid 771;
    function GetViewCount: Integer; dispid 772;
    function GetViewAt(Index: Integer): IView; dispid 773;
    function GetOwnedDiagramCount: Integer; dispid 774;
    function GetOwnedDiagramAt(Index: Integer): IDiagram; dispid 775;
    function FindByName(const AName: WideString): IModel; dispid 776;
    function FindByRelativePathname(const RelPath: WideString): IModel; dispid 777;
    function ContainsName(const AName: WideString): WordBool; dispid 778;
    function CanContain(const AModel: IModel): WordBool; dispid 779;
    function CanContainKind(const Kind: WideString): WordBool; dispid 780;
    function CanContainDiagram(const ADiagram: IDiagram): WordBool; dispid 781;
    function CanContainDiagramKind(const Kind: WideString): WordBool; dispid 782;
    function CanRelocateTo(const AModel: IModel): WordBool; dispid 783;
    function CanDelete: WordBool; dispid 784;
    procedure RelocateTo(const AOwner: IModel); dispid 785;
    procedure ClearAttachments; dispid 786;
    procedure AddAttachment(const Attach: WideString); dispid 787;
    procedure InsertAttachment(Index: Integer; const Attach: WideString); dispid 788;
    procedure DeleteAttachment(Index: Integer); dispid 789;
    function GetAttachmentAt(Index: Integer): WideString; dispid 790;
    function GetAttachmentCount: Integer; dispid 791;
    property Tag: WideString dispid 512;
    function GetGuid: WideString; dispid 513;
    function GetMetaClass: IMetaClass; dispid 514;
    function GetContainingDocument: IDocument; dispid 515;
    function IsDocumentElement: WordBool; dispid 516;
    function IsReadOnly: WordBool; dispid 517;
    function GetClassName: WideString; dispid 518;
    function IsKindOf(const ClassName: WideString): WordBool; dispid 519;
    function MOF_GetAttribute(const Name: WideString): WideString; dispid 520;
    function MOF_GetReference(const Name: WideString): IElement; dispid 521;
    function MOF_GetCollectionItem(const Name: WideString; Index: Integer): IElement; dispid 522;
    function MOF_GetCollectionCount(const Name: WideString): Integer; dispid 523;
  end;

// *********************************************************************//
// Interface: IStarUMLAddIn
// Flags:     (256) OleAutomation
// GUID:      {0F84CF65-8944-4ED4-8C57-49C96616FEBA}
// *********************************************************************//
  IStarUMLAddIn = interface(IUnknown)
    ['{0F84CF65-8944-4ED4-8C57-49C96616FEBA}']
    function InitializeAddIn: HResult; stdcall;
    function FinalizeAddIn: HResult; stdcall;
    function DoMenuAction(ActionID: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IExprBuilder
// Flags:     (16) Hidden
// GUID:      {414633E5-89AA-440F-8B07-F8EFD4B6F539}
// *********************************************************************//
  IExprBuilder = interface(IUnknown)
    ['{414633E5-89AA-440F-8B07-F8EFD4B6F539}']
    function NewNotationOperation(const Filepath: WideString; Pos: SYSINT): HResult; stdcall;
    function NewOperation(const Oper: WideString; Pos: SYSINT): HResult; stdcall;
    function EndOperation: HResult; stdcall;
    function PrimExpr(Value: OleVariant; Pos: SYSINT): HResult; stdcall;
    function IdentExpr(const Id: WideString; Pos: SYSINT): HResult; stdcall;
    function NewDrawBitmapOperation(const Filepath: WideString; Pos: SYSINT): HResult; stdcall;
  end;

// *********************************************************************//
// The Class CoWhiteStarUMLApplication provides a Create and CreateRemote method to          
// create instances of the default interface IStarUMLApplication exposed by              
// the CoClass WhiteStarUMLApplication. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWhiteStarUMLApplication = class
    class function Create: IStarUMLApplication;
    class function CreateRemote(const MachineName: string): IStarUMLApplication;
  end;

// *********************************************************************//
// The Class CoTExprBuilder provides a Create and CreateRemote method to          
// create instances of the default interface IExprBuilder exposed by              
// the CoClass TExprBuilder. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTExprBuilder = class
    class function Create: IExprBuilder;
    class function CreateRemote(const MachineName: string): IExprBuilder;
  end;

implementation

uses System.Win.ComObj;

class function CoWhiteStarUMLApplication.Create: IStarUMLApplication;
begin
  Result := CreateComObject(CLASS_WhiteStarUMLApplication) as IStarUMLApplication;
end;

class function CoWhiteStarUMLApplication.CreateRemote(const MachineName: string): IStarUMLApplication;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WhiteStarUMLApplication) as IStarUMLApplication;
end;

class function CoTExprBuilder.Create: IExprBuilder;
begin
  Result := CreateComObject(CLASS_TExprBuilder) as IExprBuilder;
end;

class function CoTExprBuilder.CreateRemote(const MachineName: string): IExprBuilder;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TExprBuilder) as IExprBuilder;
end;

end.
