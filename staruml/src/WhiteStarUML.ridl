// ************************************************************************ //
// WARNING
// -------
// This file is generated by the Type Library importer or Type Libary Editor.
// Barring syntax errors, the Editor will parse modifications made to the file.
// However, when applying changes via the Editor this file will be regenerated
// and comments or formatting changes will be lost.
// ************************************************************************ //
// File generated on 3/5/2015 1:50:37 PM (- $Rev: 12980 $, 2417578).

[
  uuid(4D5F69B3-73FC-4C09-A1CE-73D1A677A0E7),
  version(1.0),
  helpstring("WhiteStarUML Library"),
  custom(DE77BA64-517C-11D1-A2DA-0000F8773CE9, 100663657),
  custom(DE77BA63-517C-11D1-A2DA-0000F8773CE9, 1130132647),
  custom(DE77BA65-517C-11D1-A2DA-0000F8773CE9, "Created by MIDL version 6.00.0361 at Mon Oct 24 14:44:06 2005\n")

]
library WhiteStarUML
{

  importlib("stdole2.tlb");

  interface IStarUMLApplication;
  coclass WhiteStarUMLApplication;
  interface IUMLFactory;
  interface IElement;
  interface IModel;
  interface IExtensibleModel;
  interface IUMLElement;
  interface IUMLModelElement;
  interface IUMLGeneralizableElement;
  interface IUMLNamespace;
  interface IMetaElement;
  interface IMetaClassifier;
  interface IMetaClass;
  interface IMetaSlot;
  interface IMetaAttribute;
  interface IMetaAssociationEnd;
  interface IMetaReference;
  interface IMetaCollection;
  interface IDocument;
  interface IView;
  interface IDiagramView;
  interface IDiagram;
  interface IConstraint;
  interface ITaggedValue;
  interface ITagDefinition;
  interface ITagDefinitionSet;
  interface IProfile;
  interface IDataType;
  interface IStereotype;
  interface IUMLElementImport;
  interface IUMLClassifier;
  interface IUMLPackage;
  interface IUMLFeature;
  interface IUMLBehavioralFeature;
  interface IUMLOperation;
  interface IUMLConnectorEnd;
  interface IUMLConnector;
  interface IUMLClassifierRole;
  interface IUMLMessage;
  interface IUMLInteraction;
  interface IUMLCollaboration;
  interface IUMLCollaborationInstanceSet;
  interface IUMLInteractionInstanceSet;
  interface IUMLStimulus;
  interface IUMLInstance;
  interface IUMLAttributeLink;
  interface IUMLStructuralFeature;
  interface IUMLAttribute;
  interface IUMLAssociationEnd;
  interface IUMLRelationship;
  interface IUMLAssociation;
  interface IUMLAssociationClass;
  interface IUMLClass;
  interface IUMLLink;
  interface IUMLLinkEnd;
  interface IUMLLinkObject;
  interface IUMLObject;
  interface IUMLAssociationRole;
  interface IUMLAssociationEndRole;
  interface IUMLComponentInstance;
  interface IUMLNodeInstance;
  interface IUMLAction;
  interface IUMLArgument;
  interface IUMLActionSequence;
  interface IUMLStateVertex;
  interface IUMLState;
  interface IUMLCompositeState;
  interface IUMLTransition;
  interface IUMLEvent;
  interface IUMLParameter;
  interface IUMLSimpleState;
  interface IUMLObjectFlowState;
  interface IUMLStateMachine;
  interface IUMLSubmachineState;
  interface IUMLClassifierInState;
  interface IUMLInteractionFragment;
  interface IUMLInteractionOperand;
  interface IUMLCombinedFragment;
  interface IUMLSignal;
  interface IUMLReception;
  interface IUMLSendAction;
  interface IUMLSignalEvent;
  interface IUMLMethod;
  interface IUMLCallAction;
  interface IUMLCallEvent;
  interface IUMLGeneralization;
  interface IUMLPort;
  interface IUMLCreateAction;
  interface IUMLDependency;
  interface IUMLTemplateParameter;
  interface IUMLComment;
  interface IUMLComponent;
  interface IUMLNode;
  interface IUMLArtifact;
  interface IUMLTemplateArgument;
  interface IUMLPartition;
  interface IUMLActivityGraph;
  interface IUMLModel;
  interface IUMLSubsystem;
  interface IUMLInterface;
  interface IUMLDataType;
  interface IUMLEnumeration;
  interface IUMLEnumerationLiteral;
  interface IUMLException;
  interface IUMLUseCase;
  interface IUMLExtend;
  interface IUMLExtensionPoint;
  interface IUMLInclude;
  interface IUMLActor;
  interface IUMLActionState;
  interface IUMLSubactivityState;
  interface IUMLPseudostate;
  interface IUMLFinalState;
  interface IUMLUninterpretedAction;
  interface IUMLTimeEvent;
  interface IUMLChangeEvent;
  interface IUMLRealization;
  interface IUMLDiagram;
  interface IUMLClassDiagram;
  interface IUMLUseCaseDiagram;
  interface IUMLSequenceDiagram;
  interface IUMLSequenceRoleDiagram;
  interface IUMLCollaborationDiagram;
  interface IUMLCollaborationRoleDiagram;
  interface IUMLStatechartDiagram;
  interface IUMLActivityDiagram;
  interface IUMLComponentDiagram;
  interface IUMLDeploymentDiagram;
  interface INodeView;
  interface IUMLCustomTextView;
  interface IUMLNoteView;
  interface IEdgeView;
  interface IUMLNoteLinkView;
  interface IPoints;
  interface IUMLTextView;
  interface IUMLGeneralNodeView;
  interface IUMLPackageView;
  interface IUMLModelView;
  interface IUMLNameCompartmentView;
  interface ILabelView;
  interface IUMLSubsystemView;
  interface IUMLListCompartmentView;
  interface IUMLOperationCompartmentView;
  interface IUMLClassifierView;
  interface IUMLClassView;
  interface IUMLAttributeCompartmentView;
  interface IUMLTemplateParameterCompartmentView;
  interface IUMLInterfaceView;
  interface IUMLEnumerationView;
  interface IUMLEnumerationLiteralCompartmentView;
  interface IUMLSignalView;
  interface IUMLExceptionView;
  interface IUMLCustomComponentView;
  interface IUMLComponentView;
  interface IUMLComponentInstanceView;
  interface IUMLCustomNodeView;
  interface IUMLNodeView;
  interface IUMLNodeInstanceView;
  interface IUMLActorView;
  interface IUMLUseCaseView;
  interface IUMLCollaborationView;
  interface IUMLCollaborationInstanceSetView;
  interface IUMLGeneralEdgeView;
  interface IUMLGeneralizationView;
  interface IParasiticView;
  interface IEdgeParasiticView;
  interface IEdgeLabelView;
  interface IUMLAssociationView;
  interface IUMLQualifierCompartmentView;
  interface IUMLAssociationClassView;
  interface IUMLDependencyView;
  interface IUMLRealizationView;
  interface IUMLIncludeView;
  interface IUMLExtendView;
  interface IUMLCustomColObjectView;
  interface IUMLColObjectView;
  interface IUMLDiagramView;
  interface IUMLSequenceDiagramView;
  interface IUMLCustomSeqObjectView;
  interface IUMLSeqObjectView;
  interface IUMLLifeLineView;
  interface IUMLColClassifierRoleView;
  interface IUMLSequenceRoleDiagramView;
  interface IUMLSeqClassifierRoleView;
  interface IUMLLinkView;
  interface IUMLAssociationRoleView;
  interface IUMLCollaborationDiagramView;
  interface IEdgeNodeView;
  interface IUMLCustomColMessageView;
  interface IUMLColStimulusView;
  interface INodeParasiticView;
  interface INodeLabelView;
  interface IUMLCustomSeqMessageView;
  interface IUMLSeqStimulusView;
  interface IUMLActivationView;
  interface IUMLCollaborationRoleDiagramView;
  interface IUMLColMessageView;
  interface IUMLSeqMessageView;
  interface IUMLStatechartDiagramView;
  interface IUMLCustomStateView;
  interface IUMLStateView;
  interface IUMLInternalTransitionCompartmentView;
  interface IUMLSubmachineStateView;
  interface IUMLPseudostateView;
  interface IUMLFinalStateView;
  interface IUMLActivityDiagramView;
  interface IUMLActionStateView;
  interface IUMLSubactivityStateView;
  interface IUMLSwimlaneView;
  interface IUMLTransitionView;
  interface IProjectManager;
  interface IUMLProject;
  interface IUMLDocument;
  interface IUMLUnitDocument;
  interface IUMLProjectDocument;
  interface ISelectionManager;
  interface IElementSelector;
  interface IMetaModel;
  interface IMetaEnumeration;
  interface IMetaLiteral;
  interface IMetaDataType;
  interface IMetaPrimitiveType;
  interface IExtensionManager;
  interface IElementListSelector;
  interface IEventPublisher;
  interface IEventSubscriber;
  interface IUMLClassDiagramView;
  interface IUMLDeploymentDiagramView;
  interface IUMLComponentDiagramView;
  interface IUMLUseCaseDiagramView;
  interface INodeNodeView;
  interface IUMLDataValue;
  interface IUMLSubsystemInstance;
  interface IUMLUseCaseInstance;
  interface IUMLSynchState;
  interface IUMLStubState;
  interface IUMLSignalAcceptState;
  interface IUMLCallState;
  interface IUMLSignalSendState;
  interface IUMLFlowFinalState;
  interface IUMLProgrammingLanguageDataType;
  interface IUMLPrimitive;
  interface IUMLTerminateAction;
  interface IUMLDestroyAction;
  interface IUMLReturnAction;
  interface IUMLCompositeStructureDiagram;
  interface IStarUMLAddIn;
  interface IExprBuilder;
  coclass TExprBuilder;


  [
    version(1.0)
  ]
  enum tagMetaAssociationEndKind
  {
    maeReference = 0,
    maeCollection = 1
  };

  [
    version(1.0)
  ]
  enum tagMetaAggregateKind
  {
    makNone = 0,
    makAggregate = 1,
    makComposite = 2
  };

  [
    version(1.0)
  ]
  enum tagTagTypeKind
  {
    tkInteger = 0,
    tkBoolean = 1,
    tkString = 2,
    tkReal = 3,
    tkEnumeration = 4,
    tkReference = 5,
    tkCollection = 6
  };

  [
    version(1.0)
  ]
  enum tagUMLVisibilityKind
  {
    vkPublic = 0,
    vkProtected = 1,
    vkPrivate = 2,
    vkPackage = 3
  };

  [
    version(1.0)
  ]
  enum tagUMLScopeKind
  {
    skInstance = 0,
    skClassifier = 1
  };

  [
    version(1.0)
  ]
  enum tagUMLChangeableKind
  {
    ckChangeable = 0,
    ckFrozen = 1,
    ckAddOnly = 2
  };

  [
    version(1.0)
  ]
  enum tagUMLOrderingKind
  {
    okUnordered = 0,
    okOrdered = 1
  };

  [
    version(1.0)
  ]
  enum tagUMLAggregationKind
  {
    akNone = 0,
    akAggregate = 1,
    akComposite = 2
  };

  [
    version(1.0)
  ]
  enum tagUMLParameterDirectionKind
  {
    pdkIn = 0,
    pdkInout = 1,
    pdkOut = 2,
    pdkReturn = 3
  };

  [
    version(1.0)
  ]
  enum tagUMLInteractionOperatorKind
  {
    iokSeq = 0,
    iokAlt = 1,
    iokOpt = 2,
    iokBreak = 3,
    iokPar = 4,
    iokStrict = 5,
    iokLoop = 6,
    iokRegion = 7,
    iokNeg = 8,
    iokAssert = 9,
    iokIgnore = 10,
    iokConsider = 11
  };

  [
    version(1.0)
  ]
  enum tagUMLCallConcurrencyKind
  {
    cckSequential = 0,
    cckGuarded = 1,
    cckConcurrent = 2
  };

  [
    version(1.0)
  ]
  enum tagUMLPseudostateKind
  {
    pkChoice = 0,
    pkDeepHistory = 1,
    pkSynchronization = 2,
    pkInitial = 3,
    pkJunction = 4,
    pkShallowHistory = 5,
    pkDecision = 6
  };

  [
    version(1.0)
  ]
  enum tagUMLFactoryMessageKind
  {
    mkCallAction = 0,
    mkSendAction = 1,
    mkReturnAction = 2,
    mkCreateAction = 3,
    mkDestroyAction = 4
  };

  [
    version(1.0)
  ]
  enum tagUMLMessageSignatureKind
  {
    mskNone = 0,
    mskTypeOnly = 1,
    mskNameOnly = 2,
    mskNameAndType = 3
  };

  [
    version(1.0)
  ]
  enum tagLineStyleKind
  {
    lsRectilinear = 0,
    lsOblique = 1
  };

  [
    version(1.0)
  ]
  enum tagUMLStereotypeDisplayKind
  {
    sdkLabel = 0,
    sdkIcon = 1,
    sdkNone = 2
  };

  [
    version(1.0)
  ]
  enum tagEdgePositionKind
  {
    epHead = 0,
    epMiddle = 1,
    epTail = 2
  };

  [
    version(1.0)
  ]
  enum tagElementFilteringKind
  {
    fkAll = 0,
    fkPackages = 1,
    fkClassifiers = 2
  };

  [
    version(1.0)
  ]
  enum tagEventKind
  {
    EVK_APPLICATION_ACTIVATE = 0,
    EVK_APPLICATION_DEACTIVATE = 1,
    EVK_APPLICATION_MINIMIZE = 2,
    EVK_APPLICATION_RESTORE = 3,
    EVK_OPTIONS_APPLIED = 4,
    EVK_PROJECT_OPENED = 5,
    EVK_PROJECT_SAVED = 6,
    EVK_PROJECT_CLOSING = 7,
    EVK_PROJECT_CLOSED = 8,
    EVK_DOCUMENT_MODIFIED = 9,
    EVK_DOCUMENT_SAVED = 10,
    EVK_UNIT_SEPARATED = 11,
    EVK_UNIT_MERGED = 12,
    EVK_UNIT_OPENED = 13,
    EVK_SELECTION_CHANGED = 14,
    EVK_DIAGRAM_ACTIVATED = 15,
    EVK_ELEMENTS_ADDED = 16,
    EVK_ELEMENTS_DELETING = 17,
    EVK_ELEMENTS_DELETED = 18,
    EVK_MODELS_CHANGED = 19,
    EVK_VIEWS_CHANGED = 20
  };

  [
    version(1.0)
  ]
  enum tagInformationMessageKind
  {
    mkGeneral = 0,
    mkFindResult = 1,
    mkVerificationResult = 2
  };

  [
    uuid(B22F43FD-9E18-45C5-BF18-531BE2E9369D),
    version(1.0),
    public
  ]
  typedef enum tagMetaAssociationEndKind MetaAssociationEndKind;

  [
    uuid(B63AA7A9-3DA3-4D4D-9EAA-6492C2EFCB8C),
    version(1.0),
    public
  ]
  typedef enum tagMetaAggregateKind MetaAggregateKind;

  [
    uuid(23A55128-C968-498F-B8A9-AEF628763C1B),
    version(1.0),
    public
  ]
  typedef enum tagTagTypeKind TagTypeKind;

  [
    uuid(70E2AD91-BC65-4121-B20B-FED26679F89D),
    version(1.0),
    public
  ]
  typedef enum tagUMLVisibilityKind UMLVisibilityKind;

  [
    uuid(707B8A3C-34BF-4BB4-B868-95A644AF65E1),
    version(1.0),
    public
  ]
  typedef enum tagUMLScopeKind UMLScopeKind;

  [
    uuid(7E6653F1-490C-4846-A99E-46955368C0E4),
    version(1.0),
    public
  ]
  typedef enum tagUMLChangeableKind UMLChangeableKind;

  [
    uuid(BA678D4E-6372-490C-96A1-3BEE135A50EB),
    version(1.0),
    public
  ]
  typedef enum tagUMLOrderingKind UMLOrderingKind;

  [
    uuid(CF9C51FB-DE4E-4A7E-B665-6CA2961DBA31),
    version(1.0),
    public
  ]
  typedef enum tagUMLAggregationKind UMLAggregationKind;

  [
    uuid(D0134003-81E0-41D6-8867-D2971E800F09),
    version(1.0),
    public
  ]
  typedef enum tagUMLParameterDirectionKind UMLParameterDirectionKind;

  [
    uuid(C60D3C36-05D2-496E-A61A-3E6CE7A57114),
    version(1.0),
    public
  ]
  typedef enum tagUMLInteractionOperatorKind UMLInteractionOperatorKind;

  [
    uuid(A0969363-46C2-4F40-8E32-EEC11CAA84DE),
    version(1.0),
    public
  ]
  typedef enum tagUMLCallConcurrencyKind UMLCallConcurrencyKind;

  [
    uuid(C4724283-79AA-475E-90DF-E041147C2899),
    version(1.0),
    public
  ]
  typedef enum tagUMLPseudostateKind UMLPseudostateKind;

  [
    uuid(F2E95FF0-1815-4116-8D33-75009160F0E4),
    version(1.0),
    public
  ]
  typedef enum tagUMLFactoryMessageKind UMLFactoryMessageKind;

  [
    uuid(4D8263F7-B69D-40B2-A1A5-20D7E1A7DCC5),
    version(1.0),
    public
  ]
  typedef enum tagUMLMessageSignatureKind UMLMessageSignatureKind;

  [
    uuid(B9521D00-6BA5-40DC-92A7-3D71E5C0D85B),
    version(1.0),
    public
  ]
  typedef enum tagLineStyleKind LineStyleKind;

  [
    uuid(AF87B7A3-767A-4226-9E02-F0BF6BD8D1F7),
    version(1.0),
    public
  ]
  typedef enum tagUMLStereotypeDisplayKind UMLStereotypeDisplayKind;

  [
    uuid(C1AAE4D0-2A8B-4ED7-8039-CB79699A8BD2),
    version(1.0),
    public
  ]
  typedef enum tagEdgePositionKind EdgePositionKind;

  [
    uuid(82D26EF4-95CA-4875-9DEB-7FD0A81F385F),
    version(1.0),
    public
  ]
  typedef enum tagElementFilteringKind ElementFilteringKind;

  [
    uuid(C904FD8C-D8AD-44AE-86D9-2E039B9BBF73),
    version(1.0),
    public
  ]
  typedef enum tagEventKind EventKind;

  [
    uuid(1F6D2C3E-BB22-4389-AD14-90AB861CC741),
    version(1.0),
    public
  ]
  typedef enum tagInformationMessageKind InformationMessageKind;

  [
    uuid(366A8FBC-259E-4228-AC6D-293D15041864),
    version(1.0),
    helpstring("Dispatch interface for StarUMLApplication Object"),
    dual,
    oleautomation
  ]
  interface IStarUMLApplication: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000200)]
    HRESULT _stdcall Visible([in] VARIANT_BOOL Value);
    [propget, id(0x00000201)]
    HRESULT _stdcall Handle([out, retval] long* Value);
    [propget, id(0x00000202)]
    HRESULT _stdcall UMLFactory([out, retval] IUMLFactory** Value);
    [propget, id(0x00000203)]
    HRESULT _stdcall ProjectManager([out, retval] IProjectManager** Value);
    [propget, id(0x00000204)]
    HRESULT _stdcall SelectionManager([out, retval] ISelectionManager** Value);
    [propget, id(0x00000205)]
    HRESULT _stdcall ElementSelector([out, retval] IElementSelector** Value);
    [propget, id(0x00000206)]
    HRESULT _stdcall MetaModel([out, retval] IMetaModel** Value);
    [propget, id(0x00000207)]
    HRESULT _stdcall ExtensionManager([out, retval] IExtensionManager** Value);
    [propget, id(0x00000208)]
    HRESULT _stdcall ElementListSelector([out, retval] IElementListSelector** Value);
    [propget, id(0x00000209)]
    HRESULT _stdcall EventPublisher([out, retval] IEventPublisher** Value);
    [id(0x0000020A)]
    HRESULT _stdcall GetProject([out, retval] IUMLProject** ReturnValue);
    [id(0x0000020B)]
    HRESULT _stdcall FindByPathname([in] BSTR Pathname, [out, retval] IElement** ReturnValue);
    [id(0x0000020C)]
    HRESULT _stdcall ClearHistory(void);
    [id(0x0000020D)]
    HRESULT _stdcall Undo(void);
    [id(0x0000020E)]
    HRESULT _stdcall Redo(void);
    [id(0x0000020F)]
    HRESULT _stdcall CanUndo([out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000210)]
    HRESULT _stdcall CanRedo([out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000211)]
    HRESULT _stdcall Copy(void);
    [id(0x00000212)]
    HRESULT _stdcall Cut(void);
    [id(0x00000213)]
    HRESULT _stdcall Paste(void);
    [id(0x00000214)]
    HRESULT _stdcall DeleteModel([in] IModel* AModel);
    [id(0x00000215)]
    HRESULT _stdcall DeleteView([in] IView* AView);
    [id(0x00000216)]
    HRESULT _stdcall DeleteSelectedModels(void);
    [id(0x00000217)]
    HRESULT _stdcall DeleteSelectedViews(void);
    [id(0x00000218)]
    HRESULT _stdcall DeleteSelectedModelsAndViews(void);
    [id(0x00000219)]
    HRESULT _stdcall GetOptionValue([in] BSTR SchemaID, [in] BSTR Key, [out, retval] VARIANT* ReturnValue);
    [id(0x0000021A)]
    HRESULT _stdcall Log([in] BSTR Text);
    [id(0x0000021B)]
    HRESULT _stdcall BeginUpdate(void);
    [id(0x0000021C)]
    HRESULT _stdcall EndUpdate(void);
    [id(0x0000021D)]
    HRESULT _stdcall EndUpdate2([in] VARIANT_BOOL CompletelyRebuild, [in] VARIANT_BOOL UseUpdateLock);
    [id(0x0000021E)]
    HRESULT _stdcall BeginGroupAction(void);
    [id(0x0000021F)]
    HRESULT _stdcall EndGroupAction(void);
    [id(0x00000220)]
    HRESULT _stdcall EnableGeneralEditMenu(void);
    [id(0x00000221)]
    HRESULT _stdcall DisableGeneralEditMenu(void);
    [id(0x00000222)]
    HRESULT _stdcall OpenDiagram([in] IDiagram* ADiagram);
    [id(0x00000223)]
    HRESULT _stdcall CloseDiagram([in] IDiagram* ADiagram);
    [id(0x00000224)]
    HRESULT _stdcall CloseActiveDiagram(void);
    [id(0x00000225)]
    HRESULT _stdcall CloseAllDiagrams(void);
    [id(0x00000226)]
    HRESULT _stdcall GetOpenedDiagramAt([in] long Index, [out, retval] IDiagram** ReturnValue);
    [id(0x00000227)]
    HRESULT _stdcall GetOpenedDiagramCount([out, retval] long* ReturnValue);
    [id(0x00000228)]
    HRESULT _stdcall SelectInModelExplorer([in] IModel* AModel);
    [id(0x00000229)]
    HRESULT _stdcall ClearAllMessages(void);
    [id(0x0000022A)]
    HRESULT _stdcall ClearMessages([in] InformationMessageKind Kind);
    [id(0x0000022B)]
    HRESULT _stdcall AddMessageItem([in] InformationMessageKind Kind, [in] BSTR Text, [in] IElement* ElementLink);
    [id(0x0000022C)]
    HRESULT _stdcall NavigateWeb([in] BSTR URL);
    [id(0x0000022D)]
    HRESULT _stdcall Exit(void);
  };

  [
    uuid(93B49661-E40C-4B36-A385-E937DF875AB4),
    version(1.0),
    helpstring("Dispatch interface for UMLFactory Object"),
    dual,
    oleautomation
  ]
  interface IUMLFactory: IDispatch
  {
    [id(0x00000200)]
    HRESULT _stdcall CreateModel([in] IUMLNamespace* AOwner, [out, retval] IUMLModel** ReturnValue);
    [id(0x00000201)]
    HRESULT _stdcall CreateSubsystem([in] IUMLNamespace* AOwner, [out, retval] IUMLSubsystem** ReturnValue);
    [id(0x00000202)]
    HRESULT _stdcall CreatePackage([in] IUMLNamespace* AOwner, [out, retval] IUMLPackage** ReturnValue);
    [id(0x00000203)]
    HRESULT _stdcall CreateClass([in] IUMLNamespace* AOwner, [out, retval] IUMLClass** ReturnValue);
    [id(0x00000204)]
    HRESULT _stdcall CreateInterface([in] IUMLNamespace* AOwner, [out, retval] IUMLInterface** ReturnValue);
    [id(0x00000205)]
    HRESULT _stdcall CreateEnumeration([in] IUMLNamespace* AOwner, [out, retval] IUMLEnumeration** ReturnValue);
    [id(0x00000206)]
    HRESULT _stdcall CreateSignal([in] IUMLNamespace* AOwner, [out, retval] IUMLSignal** ReturnValue);
    [id(0x00000207)]
    HRESULT _stdcall CreateException([in] IUMLNamespace* AOwner, [out, retval] IUMLException** ReturnValue);
    [id(0x00000208)]
    HRESULT _stdcall CreateComponent([in] IUMLNamespace* AOwner, [out, retval] IUMLComponent** ReturnValue);
    [id(0x00000209)]
    HRESULT _stdcall CreateComponentInstance([in] IUMLNamespace* AOwner, [out, retval] IUMLComponentInstance** ReturnValue);
    [id(0x0000020A)]
    HRESULT _stdcall CreateNode([in] IUMLNamespace* AOwner, [out, retval] IUMLNode** ReturnValue);
    [id(0x0000020B)]
    HRESULT _stdcall CreateNodeInstance([in] IUMLNamespace* AOwner, [out, retval] IUMLNodeInstance** ReturnValue);
    [id(0x0000020C)]
    HRESULT _stdcall CreateUseCase([in] IUMLNamespace* AOwner, [out, retval] IUMLUseCase** ReturnValue);
    [id(0x0000020D)]
    HRESULT _stdcall CreateActor([in] IUMLNamespace* AOwner, [out, retval] IUMLActor** ReturnValue);
    [id(0x0000020E)]
    HRESULT _stdcall CreateActivityGraph([in] IUMLModelElement* AContext, [out, retval] IUMLActivityGraph** ReturnValue);
    [id(0x0000020F)]
    HRESULT _stdcall CreateStateMachine([in] IUMLModelElement* AContext, [out, retval] IUMLStateMachine** ReturnValue);
    [id(0x00000210)]
    HRESULT _stdcall CreateCompositeState([in] IUMLCompositeState* AOwnerState, [out, retval] IUMLCompositeState** ReturnValue);
    [id(0x00000211)]
    HRESULT _stdcall CreateCollaboration([in] IUMLClassifier* AOwner, [out, retval] IUMLCollaboration** ReturnValue);
    [id(0x00000212)]
    HRESULT _stdcall CreateCollaboration2([in] IUMLOperation* AOwner, [out, retval] IUMLCollaboration** ReturnValue);
    [id(0x00000213)]
    HRESULT _stdcall CreateCollaborationInstanceSet([in] IUMLClassifier* AOwner, [out, retval] IUMLCollaborationInstanceSet** ReturnValue);
    [id(0x00000214)]
    HRESULT _stdcall CreateCollaborationInstanceSet2([in] IUMLOperation* AOwner, [out, retval] IUMLCollaborationInstanceSet** ReturnValue);
    [id(0x00000215)]
    HRESULT _stdcall CreateInteraction([in] IUMLCollaboration* ACollaboration, [out, retval] IUMLInteraction** ReturnValue);
    [id(0x00000216)]
    HRESULT _stdcall CreateInteractionInstanceSet([in] IUMLCollaborationInstanceSet* ACollaborationInstanceSet, [out, retval] IUMLInteractionInstanceSet** ReturnValue);
    [id(0x00000217)]
    HRESULT _stdcall CreateActionState([in] IUMLCompositeState* AOwnerState, [out, retval] IUMLActionState** ReturnValue);
    [id(0x00000218)]
    HRESULT _stdcall CreateSubactivityState([in] IUMLCompositeState* AOwnerState, [out, retval] IUMLSubactivityState** ReturnValue);
    [id(0x00000219)]
    HRESULT _stdcall CreatePseudostate([in] IUMLCompositeState* AOwnerState, [out, retval] IUMLPseudostate** ReturnValue);
    [id(0x0000021A)]
    HRESULT _stdcall CreateFinalState([in] IUMLCompositeState* AOwnerState, [out, retval] IUMLFinalState** ReturnValue);
    [id(0x0000021B)]
    HRESULT _stdcall CreatePartition([in] IUMLActivityGraph* AActivityGraph, [out, retval] IUMLPartition** ReturnValue);
    [id(0x0000021C)]
    HRESULT _stdcall CreateSubmachineState([in] IUMLCompositeState* AOwnerState, [out, retval] IUMLSubmachineState** ReturnValue);
    [id(0x0000021D)]
    HRESULT _stdcall CreateAttribute([in] IUMLClassifier* AClassifier, [out, retval] IUMLAttribute** ReturnValue);
    [id(0x0000021E)]
    HRESULT _stdcall CreateQualifier([in] IUMLAssociationEnd* AAssociationEnd, [out, retval] IUMLAttribute** ReturnValue);
    [id(0x0000021F)]
    HRESULT _stdcall CreateOperation([in] IUMLClassifier* AClassifier, [out, retval] IUMLOperation** ReturnValue);
    [id(0x00000220)]
    HRESULT _stdcall CreateParameter([in] IUMLBehavioralFeature* ABehavioralFeature, [out, retval] IUMLParameter** ReturnValue);
    [id(0x00000221)]
    HRESULT _stdcall CreateTemplateParameter([in] IUMLClass* AClass, [out, retval] IUMLTemplateParameter** ReturnValue);
    [id(0x00000222)]
    HRESULT _stdcall CreateTemplateParameter2([in] IUMLCollaboration* ACollaboration, [out, retval] IUMLTemplateParameter** ReturnValue);
    [id(0x00000223)]
    HRESULT _stdcall CreateEnumerationLiteral([in] IUMLEnumeration* AEnumeration, [out, retval] IUMLEnumerationLiteral** ReturnValue);
    [id(0x00000224)]
    HRESULT _stdcall CreateEntryAction([in] IUMLState* AState, [out, retval] IUMLUninterpretedAction** ReturnValue);
    [id(0x00000225)]
    HRESULT _stdcall CreateDoAction([in] IUMLState* AState, [out, retval] IUMLUninterpretedAction** ReturnValue);
    [id(0x00000226)]
    HRESULT _stdcall CreateExitAction([in] IUMLState* AState, [out, retval] IUMLUninterpretedAction** ReturnValue);
    [id(0x00000227)]
    HRESULT _stdcall CreateEffect([in] IUMLTransition* ATransition, [out, retval] IUMLUninterpretedAction** ReturnValue);
    [id(0x00000228)]
    HRESULT _stdcall CreateSignalEvent([in] IUMLTransition* ATransition, [out, retval] IUMLSignalEvent** ReturnValue);
    [id(0x00000229)]
    HRESULT _stdcall CreateCallEvent([in] IUMLTransition* ATransition, [out, retval] IUMLCallEvent** ReturnValue);
    [id(0x0000022A)]
    HRESULT _stdcall CreateTimeEvent([in] IUMLTransition* ATransition, [out, retval] IUMLTimeEvent** ReturnValue);
    [id(0x0000022B)]
    HRESULT _stdcall CreateChangeEvent([in] IUMLTransition* ATransition, [out, retval] IUMLChangeEvent** ReturnValue);
    [id(0x0000022C)]
    HRESULT _stdcall CreateClassifierRole([in] IUMLCollaboration* ACollaboration, [out, retval] IUMLClassifierRole** ReturnValue);
    [id(0x0000022D)]
    HRESULT _stdcall CreateObject([in] IUMLCollaborationInstanceSet* ACollaborationInstanceSet, [out, retval] IUMLObject** ReturnValue);
    [id(0x0000022E)]
    HRESULT _stdcall CreateObject2([in] IUMLNamespace* AOwner, [out, retval] IUMLObject** ReturnValue);
    [id(0x0000022F)]
    HRESULT _stdcall CreateTransition([in] IUMLStateMachine* AStateMachine, [in] IUMLStateVertex* Source, [in] IUMLStateVertex* Target, [out, retval] IUMLTransition** ReturnValue);
    [id(0x00000230)]
    HRESULT _stdcall CreateDependency([in] IUMLNamespace* AOwner, [in] IUMLModelElement* Client, [in] IUMLModelElement* Supplier, [out, retval] IUMLDependency** ReturnValue);
    [id(0x00000231)]
    HRESULT _stdcall CreateAssociation([in] IUMLNamespace* AOwner, [in] IUMLClassifier* End1, [in] IUMLClassifier* End2, [out, retval] IUMLAssociation** ReturnValue);
    [id(0x00000232)]
    HRESULT _stdcall CreateAssociationClass([in] IUMLNamespace* AOwner, [in] IUMLAssociation* AAssociation, [in] IUMLClass* AClass, [out, retval] IUMLAssociationClass** ReturnValue);
    [id(0x00000233)]
    HRESULT _stdcall CreateGeneralization([in] IUMLNamespace* AOwner, [in] IUMLGeneralizableElement* Parent, [in] IUMLGeneralizableElement* Child, [out, retval] IUMLGeneralization** ReturnValue);
    [id(0x00000234)]
    HRESULT _stdcall CreateLink([in] IUMLCollaborationInstanceSet* ACollaborationInstanceSet, [in] IUMLInstance* End1, [in] IUMLInstance* End2, [out, retval] IUMLLink** ReturnValue);
    [id(0x00000235)]
    HRESULT _stdcall CreateLink2([in] IUMLNamespace* ANamespace, [in] IUMLInstance* End1, [in] IUMLInstance* End2, [out, retval] IUMLLink** ReturnValue);
    [id(0x00000236)]
    HRESULT _stdcall CreateAssociationRole([in] IUMLCollaboration* ACollaboration, [in] IUMLClassifierRole* End1, [in] IUMLClassifierRole* End2, [out, retval] IUMLAssociationRole** ReturnValue);
    [id(0x00000237)]
    HRESULT _stdcall CreateStimulus([in] IUMLInteractionInstanceSet* AInteractionInstanceSet, [in] IUMLInstance* Sender, [in] IUMLInstance* Receiver, [in] UMLFactoryMessageKind Kind, [out, retval] IUMLStimulus** ReturnValue);
    [id(0x00000238)]
    HRESULT _stdcall CreateStimulus2([in] IUMLInteractionInstanceSet* AInteractionInstanceSet, [in] IUMLInstance* Sender, [in] IUMLInstance* Receiver, [in] IUMLLink* CommunicationLink, [in] UMLFactoryMessageKind Kind, [out, retval] IUMLStimulus** ReturnValue);
    [id(0x00000239)]
    HRESULT _stdcall CreateMessage([in] IUMLInteraction* AInteraction, [in] IUMLClassifierRole* Sender, [in] IUMLClassifierRole* Receiver, [in] UMLFactoryMessageKind Kind, [out, retval] IUMLMessage** ReturnValue);
    [id(0x0000023A)]
    HRESULT _stdcall CreateMessage2([in] IUMLInteraction* AInteraction, [in] IUMLClassifierRole* Sender, [in] IUMLClassifierRole* Receiver, [in] IUMLAssociationRole* CommunicationConnection, [in] UMLFactoryMessageKind Kind, [out, retval] IUMLMessage** ReturnValue);
    [id(0x0000023B)]
    HRESULT _stdcall CreateInclude([in] IUMLNamespace* AOwner, [in] IUMLUseCase* Includer, [in] IUMLUseCase* Includee, [out, retval] IUMLInclude** ReturnValue);
    [id(0x0000023C)]
    HRESULT _stdcall CreateExtend([in] IUMLNamespace* AOwner, [in] IUMLUseCase* Extender, [in] IUMLUseCase* Extendee, [out, retval] IUMLExtend** ReturnValue);
    [id(0x0000023D)]
    HRESULT _stdcall CreateRealization([in] IUMLNamespace* AOwner, [in] IUMLModelElement* Client, [in] IUMLModelElement* Supplier, [out, retval] IUMLRealization** ReturnValue);
    [id(0x0000023E)]
    HRESULT _stdcall CreateClassDiagram([in] IModel* AOwner, [out, retval] IUMLClassDiagram** ReturnValue);
    [id(0x0000023F)]
    HRESULT _stdcall CreateUseCaseDiagram([in] IModel* AOwner, [out, retval] IUMLUseCaseDiagram** ReturnValue);
    [id(0x00000240)]
    HRESULT _stdcall CreateSequenceDiagram([in] IUMLInteractionInstanceSet* AOwner, [out, retval] IUMLSequenceDiagram** ReturnValue);
    [id(0x00000241)]
    HRESULT _stdcall CreateSequenceRoleDiagram([in] IUMLInteraction* AOwner, [out, retval] IUMLSequenceRoleDiagram** ReturnValue);
    [id(0x00000242)]
    HRESULT _stdcall CreateCollaborationDiagram([in] IUMLInteractionInstanceSet* AOwner, [out, retval] IUMLCollaborationDiagram** ReturnValue);
    [id(0x00000243)]
    HRESULT _stdcall CreateCollaborationRoleDiagram([in] IUMLInteraction* AOwner, [out, retval] IUMLCollaborationRoleDiagram** ReturnValue);
    [id(0x00000244)]
    HRESULT _stdcall CreateStatechartDiagram([in] IUMLStateMachine* AOwner, [out, retval] IUMLStatechartDiagram** ReturnValue);
    [id(0x00000245)]
    HRESULT _stdcall CreateActivityDiagram([in] IUMLActivityGraph* AOwner, [out, retval] IUMLActivityDiagram** ReturnValue);
    [id(0x00000246)]
    HRESULT _stdcall CreateComponentDiagram([in] IModel* AOwner, [out, retval] IUMLComponentDiagram** ReturnValue);
    [id(0x00000247)]
    HRESULT _stdcall CreateDeploymentDiagram([in] IModel* AOwner, [out, retval] IUMLDeploymentDiagram** ReturnValue);
    [id(0x00000248)]
    HRESULT _stdcall CreateNoteView([in] IDiagramView* ADiagramView, [out, retval] IUMLNoteView** ReturnValue);
    [id(0x00000249)]
    HRESULT _stdcall CreateNoteLinkView([in] IDiagramView* ADiagramView, [in] IUMLNoteView* ANote, [in] IView* LinkTo, [out, retval] IUMLNoteLinkView** ReturnValue);
    [id(0x0000024A)]
    HRESULT _stdcall CreateTextView([in] IDiagramView* ADiagramView, [out, retval] IUMLTextView** ReturnValue);
    [id(0x0000024B)]
    HRESULT _stdcall CreateModelView([in] IDiagramView* ADiagramView, [in] IUMLModel* AModel, [out, retval] IUMLModelView** ReturnValue);
    [id(0x0000024C)]
    HRESULT _stdcall CreateSubsystemView([in] IDiagramView* ADiagramView, [in] IUMLSubsystem* AModel, [out, retval] IUMLSubsystemView** ReturnValue);
    [id(0x0000024D)]
    HRESULT _stdcall CreatePackageView([in] IDiagramView* ADiagramView, [in] IUMLPackage* AModel, [out, retval] IUMLPackageView** ReturnValue);
    [id(0x0000024E)]
    HRESULT _stdcall CreateClassView([in] IDiagramView* ADiagramView, [in] IUMLClass* AModel, [out, retval] IUMLClassView** ReturnValue);
    [id(0x0000024F)]
    HRESULT _stdcall CreateInterfaceView([in] IDiagramView* ADiagramView, [in] IUMLInterface* AModel, [out, retval] IUMLInterfaceView** ReturnValue);
    [id(0x00000250)]
    HRESULT _stdcall CreateEnumerationView([in] IDiagramView* ADiagramView, [in] IUMLEnumeration* AModel, [out, retval] IUMLEnumerationView** ReturnValue);
    [id(0x00000251)]
    HRESULT _stdcall CreateSignalView([in] IDiagramView* ADiagramView, [in] IUMLSignal* AModel, [out, retval] IUMLSignalView** ReturnValue);
    [id(0x00000252)]
    HRESULT _stdcall CreateExceptionView([in] IDiagramView* ADiagramView, [in] IUMLException* AModel, [out, retval] IUMLExceptionView** ReturnValue);
    [id(0x00000253)]
    HRESULT _stdcall CreateComponentView([in] IDiagramView* ADiagramView, [in] IUMLComponent* AModel, [out, retval] IUMLComponentView** ReturnValue);
    [id(0x00000254)]
    HRESULT _stdcall CreateComponentInstanceView([in] IDiagramView* ADiagramView, [in] IUMLComponentInstance* AModel, [out, retval] IUMLComponentInstanceView** ReturnValue);
    [id(0x00000255)]
    HRESULT _stdcall CreateNodeView([in] IDiagramView* ADiagramView, [in] IUMLNode* AModel, [out, retval] IUMLNodeView** ReturnValue);
    [id(0x00000256)]
    HRESULT _stdcall CreateNodeInstanceView([in] IDiagramView* ADiagramView, [in] IUMLNodeInstance* AModel, [out, retval] IUMLNodeInstanceView** ReturnValue);
    [id(0x00000257)]
    HRESULT _stdcall CreateActorView([in] IDiagramView* ADiagramView, [in] IUMLActor* AModel, [out, retval] IUMLActorView** ReturnValue);
    [id(0x00000258)]
    HRESULT _stdcall CreateUseCaseView([in] IDiagramView* ADiagramView, [in] IUMLUseCase* AModel, [out, retval] IUMLUseCaseView** ReturnValue);
    [id(0x00000259)]
    HRESULT _stdcall CreateCollaborationView([in] IDiagramView* ADiagramView, [in] IUMLCollaboration* AModel, [out, retval] IUMLCollaborationView** ReturnValue);
    [id(0x0000025A)]
    HRESULT _stdcall CreateCollaborationInstanceSetView([in] IDiagramView* ADiagramView, [in] IUMLCollaborationInstanceSet* AModel, [out, retval] IUMLCollaborationInstanceSetView** ReturnValue);
    [id(0x0000025B)]
    HRESULT _stdcall CreateGeneralizationView([in] IDiagramView* ADiagramView, [in] IUMLGeneralization* AModel, [in] IView* Parent, [in] IView* Child, [out, retval] IUMLGeneralizationView** ReturnValue);
    [id(0x0000025C)]
    HRESULT _stdcall CreateAssociationView([in] IDiagramView* ADiagramView, [in] IUMLAssociation* AModel, [in] IView* End1, [in] IView* End2, [out, retval] IUMLAssociationView** ReturnValue);
    [id(0x0000025D)]
    HRESULT _stdcall CreateAssociationClassView([in] IDiagramView* ADiagramView, [in] IUMLAssociationClass* AModel, [in] IView* AssociationView, [in] IView* ClassView, [out, retval] IUMLAssociationClassView** ReturnValue);
    [id(0x0000025E)]
    HRESULT _stdcall CreateDependencyView([in] IDiagramView* ADiagramView, [in] IUMLDependency* AModel, [in] IView* Client, [in] IView* Supplier, [out, retval] IUMLDependencyView** ReturnValue);
    [id(0x0000025F)]
    HRESULT _stdcall CreateRealizationView([in] IDiagramView* ADiagramView, [in] IUMLRealization* AModel, [in] IView* Client, [in] IView* Supplier, [out, retval] IUMLRealizationView** ReturnValue);
    [id(0x00000260)]
    HRESULT _stdcall CreateIncludeView([in] IDiagramView* ADiagramView, [in] IUMLInclude* AModel, [in] IView* Base, [in] IView* Addition, [out, retval] IUMLIncludeView** ReturnValue);
    [id(0x00000261)]
    HRESULT _stdcall CreateExtendView([in] IDiagramView* ADiagramView, [in] IUMLExtend* AModel, [in] IView* Base, [in] IView* Extension, [out, retval] IUMLExtendView** ReturnValue);
    [id(0x00000262)]
    HRESULT _stdcall CreateObjectView([in] IDiagramView* ADiagramView, [in] IUMLObject* AModel, [out, retval] IUMLColObjectView** ReturnValue);
    [id(0x00000263)]
    HRESULT _stdcall CreateSeqObjectView([in] IUMLSequenceDiagramView* ADiagramView, [in] IUMLObject* AModel, [out, retval] IUMLSeqObjectView** ReturnValue);
    [id(0x00000264)]
    HRESULT _stdcall CreateClassifierRoleView([in] IDiagramView* ADiagramView, [in] IUMLClassifierRole* AModel, [out, retval] IUMLColClassifierRoleView** ReturnValue);
    [id(0x00000265)]
    HRESULT _stdcall CreateSeqClassifierRoleView([in] IUMLSequenceRoleDiagramView* ADiagramView, [in] IUMLClassifierRole* AModel, [out, retval] IUMLSeqClassifierRoleView** ReturnValue);
    [id(0x00000266)]
    HRESULT _stdcall CreateLinkView([in] IDiagramView* ADiagramView, [in] IUMLLink* AModel, [in] IView* End1, [in] IView* End2, [out, retval] IUMLLinkView** ReturnValue);
    [id(0x00000267)]
    HRESULT _stdcall CreateAssociationRoleView([in] IDiagramView* ADiagramView, [in] IUMLAssociationRole* AModel, [in] IView* End1, [in] IView* End2, [out, retval] IUMLAssociationRoleView** ReturnValue);
    [id(0x00000268)]
    HRESULT _stdcall CreateStimulusView([in] IUMLCollaborationDiagramView* ADiagramView, [in] IUMLStimulus* AModel, [in] IView* LinkView, [out, retval] IUMLColStimulusView** ReturnValue);
    [id(0x00000269)]
    HRESULT _stdcall CreateSeqStimulusView([in] IUMLSequenceDiagramView* ADiagramView, [in] IUMLStimulus* AModel, [in] IView* Sender, [in] IView* Receiver, [out, retval] IUMLSeqStimulusView** ReturnValue);
    [id(0x0000026A)]
    HRESULT _stdcall CreateMessageView([in] IUMLCollaborationRoleDiagramView* ADiagramView, [in] IUMLMessage* AModel, [in] IView* AssociationRoleView, [out, retval] IUMLColMessageView** ReturnValue);
    [id(0x0000026B)]
    HRESULT _stdcall CreateSeqMessageView([in] IUMLSequenceRoleDiagramView* ADiagramView, [in] IUMLMessage* AModel, [in] IView* Sender, [in] IView* Receiver, [out, retval] IUMLSeqMessageView** ReturnValue);
    [id(0x0000026C)]
    HRESULT _stdcall CreateStateView([in] IUMLStatechartDiagramView* ADiagramView, [in] IUMLCompositeState* AModel, [out, retval] IUMLStateView** ReturnValue);
    [id(0x0000026D)]
    HRESULT _stdcall CreateSubmachineStateView([in] IUMLStatechartDiagramView* ADiagramView, [in] IUMLSubmachineState* AModel, [out, retval] IUMLSubmachineStateView** ReturnValue);
    [id(0x0000026E)]
    HRESULT _stdcall CreatePseudostateView([in] IDiagramView* ADiagramView, [in] IUMLPseudostate* AModel, [out, retval] IUMLPseudostateView** ReturnValue);
    [id(0x0000026F)]
    HRESULT _stdcall CreateFinalStateView([in] IDiagramView* ADiagramView, [in] IUMLFinalState* AModel, [out, retval] IUMLFinalStateView** ReturnValue);
    [id(0x00000270)]
    HRESULT _stdcall CreateActionStateView([in] IUMLActivityDiagramView* ADiagramView, [in] IUMLActionState* AModel, [out, retval] IUMLActionStateView** ReturnValue);
    [id(0x00000271)]
    HRESULT _stdcall CreateSubactivityStateView([in] IUMLActivityDiagramView* ADiagramView, [in] IUMLSubactivityState* AModel, [out, retval] IUMLSubactivityStateView** ReturnValue);
    [id(0x00000272)]
    HRESULT _stdcall CreateSwimlaneView([in] IUMLActivityDiagramView* ADiagramView, [in] IUMLPartition* AModel, [out, retval] IUMLSwimlaneView** ReturnValue);
    [id(0x00000273)]
    HRESULT _stdcall CreateTransitionView([in] IDiagramView* ADiagramView, [in] IUMLTransition* AModel, [in] IView* Source, [in] IView* Target, [out, retval] IUMLTransitionView** ReturnValue);
  };

  [
    uuid(6BF1C43B-C90E-4E10-AEA9-AAE19D4FA5AF),
    version(1.0),
    helpstring("Dispatch interface for Element Object"),
    dual,
    oleautomation
  ]
  interface IElement: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall Tag([out, retval] BSTR* Value);
    [propput, id(0x00000200)]
    HRESULT _stdcall Tag([in] BSTR Value);
    [id(0x00000201)]
    HRESULT _stdcall GetGuid([out, retval] BSTR* ReturnValue);
    [id(0x00000202)]
    HRESULT _stdcall GetMetaClass([out, retval] IMetaClass** ReturnValue);
    [id(0x00000203)]
    HRESULT _stdcall GetContainingDocument([out, retval] IDocument** ReturnValue);
    [id(0x00000204)]
    HRESULT _stdcall IsDocumentElement([out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000205)]
    HRESULT _stdcall IsReadOnly([out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000206)]
    HRESULT _stdcall GetClassName([out, retval] BSTR* ReturnValue);
    [id(0x00000207)]
    HRESULT _stdcall IsKindOf([in] BSTR ClassName, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000208)]
    HRESULT _stdcall MOF_GetAttribute([in] BSTR Name, [out, retval] BSTR* ReturnValue);
    [id(0x00000209)]
    HRESULT _stdcall MOF_GetReference([in] BSTR Name, [out, retval] IElement** ReturnValue);
    [id(0x0000020A)]
    HRESULT _stdcall MOF_GetCollectionItem([in] BSTR Name, [in] long Index, [out, retval] IElement** ReturnValue);
    [id(0x0000020B)]
    HRESULT _stdcall MOF_GetCollectionCount([in] BSTR Name, [out, retval] long* ReturnValue);
  };

  [
    uuid(37CE5188-CEB9-4F67-8A49-46BC11667706),
    version(1.0),
    helpstring("Dispatch interface for Model Object"),
    dual,
    oleautomation
  ]
  interface IModel: IElement
  {
    [propget, id(0x00000300)]
    HRESULT _stdcall Name([out, retval] BSTR* Value);
    [propput, id(0x00000300)]
    HRESULT _stdcall Name([in] BSTR Value);
    [propget, id(0x00000301)]
    HRESULT _stdcall Documentation([out, retval] BSTR* Value);
    [propput, id(0x00000301)]
    HRESULT _stdcall Documentation([in] BSTR Value);
    [propget, id(0x00000302)]
    HRESULT _stdcall Attachments([out, retval] BSTR* Value);
    [propget, id(0x00000303)]
    HRESULT _stdcall Pathname([out, retval] BSTR* Value);
    [id(0x00000304)]
    HRESULT _stdcall GetViewCount([out, retval] long* Value);
    [id(0x00000305)]
    HRESULT _stdcall GetViewAt([in] long Index, [out, retval] IView** Value);
    [id(0x00000306)]
    HRESULT _stdcall GetOwnedDiagramCount([out, retval] long* Value);
    [id(0x00000307)]
    HRESULT _stdcall GetOwnedDiagramAt([in] long Index, [out, retval] IDiagram** Value);
    [id(0x00000308)]
    HRESULT _stdcall FindByName([in] BSTR AName, [out, retval] IModel** ReturnValue);
    [id(0x00000309)]
    HRESULT _stdcall FindByRelativePathname([in] BSTR RelPath, [out, retval] IModel** ReturnValue);
    [id(0x0000030A)]
    HRESULT _stdcall ContainsName([in] BSTR AName, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x0000030B)]
    HRESULT _stdcall CanContain([in] IModel* AModel, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x0000030C)]
    HRESULT _stdcall CanContainKind([in] BSTR Kind, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x0000030D)]
    HRESULT _stdcall CanContainDiagram([in] IDiagram* ADiagram, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x0000030E)]
    HRESULT _stdcall CanContainDiagramKind([in] BSTR Kind, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x0000030F)]
    HRESULT _stdcall CanRelocateTo([in] IModel* AModel, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000310)]
    HRESULT _stdcall CanDelete([out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000311)]
    HRESULT _stdcall RelocateTo([in] IModel* AOwner);
    [id(0x00000312)]
    HRESULT _stdcall ClearAttachments(void);
    [id(0x00000313)]
    HRESULT _stdcall AddAttachment([in] BSTR Attach);
    [id(0x00000314)]
    HRESULT _stdcall InsertAttachment([in] long Index, [in] BSTR Attach);
    [id(0x00000315)]
    HRESULT _stdcall DeleteAttachment([in] long Index);
    [id(0x00000316)]
    HRESULT _stdcall GetAttachmentAt([in] long Index, [out, retval] BSTR* ReturnValue);
    [id(0x00000317)]
    HRESULT _stdcall GetAttachmentCount([out, retval] long* ReturnValue);
  };

  [
    uuid(4831D6FB-B090-4B50-B803-8B4F57957334),
    version(1.0),
    helpstring("Dispatch interface for ExtensibleModel Object"),
    dual,
    oleautomation
  ]
  interface IExtensibleModel: IModel
  {
    [propget, id(0x00000400)]
    HRESULT _stdcall StereotypeProfile([out, retval] BSTR* Value);
    [propget, id(0x00000401)]
    HRESULT _stdcall StereotypeName([out, retval] BSTR* Value);
    [id(0x00000402)]
    HRESULT _stdcall GetConstraintCount([out, retval] long* Value);
    [id(0x00000403)]
    HRESULT _stdcall GetConstraintAt([in] long Index, [out, retval] IConstraint** Value);
    [id(0x00000404)]
    HRESULT _stdcall GetTaggedValueCount([out, retval] long* Value);
    [id(0x00000405)]
    HRESULT _stdcall GetTaggedValueAt([in] long Index, [out, retval] ITaggedValue** Value);
    [id(0x00000406)]
    HRESULT _stdcall GetReferencingTagCount([out, retval] long* Value);
    [id(0x00000407)]
    HRESULT _stdcall GetReferencingTagAt([in] long Index, [out, retval] ITaggedValue** Value);
    [id(0x00000408)]
    HRESULT _stdcall GetStereotype([out, retval] IStereotype** ReturnValue);
    [id(0x00000409)]
    HRESULT _stdcall SetStereotype([in] BSTR Name);
    [id(0x0000040A)]
    HRESULT _stdcall SetStereotype2([in] BSTR Profile, [in] BSTR Name);
    [id(0x0000040B)]
    HRESULT _stdcall AddConstraint([in] BSTR Name, [in] BSTR Body, [out, retval] IConstraint** ReturnValue);
    [id(0x0000040C)]
    HRESULT _stdcall DeleteConstraint([in] long Index);
    [id(0x0000040D)]
    HRESULT _stdcall IndexOfConstraint([in] IConstraint* AConstraint, [out, retval] long* ReturnValue);
    [id(0x0000040E)]
    HRESULT _stdcall MoveConstraint([in] IConstraint* AConstraint, [in] long NewIndex);
    [id(0x0000040F)]
    HRESULT _stdcall GetTaggedValueAsInteger([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [out, retval] long* ReturnValue);
    [id(0x00000410)]
    HRESULT _stdcall SetTaggedValueAsInteger([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] long Value);
    [id(0x00000411)]
    HRESULT _stdcall GetTaggedValueAsBoolean([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000412)]
    HRESULT _stdcall SetTaggedValueAsBoolean([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] VARIANT_BOOL Value);
    [id(0x00000413)]
    HRESULT _stdcall GetTaggedValueAsReal([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [out, retval] double* ReturnValue);
    [id(0x00000414)]
    HRESULT _stdcall SetTaggedValueAsReal([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] double Value);
    [id(0x00000415)]
    HRESULT _stdcall GetTaggedValueAsString([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [out, retval] BSTR* ReturnValue);
    [id(0x00000416)]
    HRESULT _stdcall SetTaggedValueAsString([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] BSTR Value);
    [id(0x00000417)]
    HRESULT _stdcall GetTaggedValueAsEnum([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [out, retval] BSTR* ReturnValue);
    [id(0x00000418)]
    HRESULT _stdcall SetTaggedValueAsEnum([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] BSTR Value);
    [id(0x00000419)]
    HRESULT _stdcall GetTaggedValueAsReference([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [out, retval] IExtensibleModel** ReturnValue);
    [id(0x0000041A)]
    HRESULT _stdcall GetTaggedValueAsReferenceAt([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] long Index, [out, retval] IExtensibleModel** ReturnValue);
    [id(0x0000041B)]
    HRESULT _stdcall GetTaggedValueAsReferenceCount([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [out, retval] long* ReturnValue);
    [id(0x0000041C)]
    HRESULT _stdcall SetTaggedValueAsReference([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] IExtensibleModel* Value);
    [id(0x0000041D)]
    HRESULT _stdcall AddReferenceToTaggedValue([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] IExtensibleModel* Value);
    [id(0x0000041E)]
    HRESULT _stdcall RemoveReferenceFromTaggedValue([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] IExtensibleModel* Value);
    [id(0x0000041F)]
    HRESULT _stdcall InsertReferenceToTaggedValue([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] long Index, [in] IExtensibleModel* Value);
    [id(0x00000420)]
    HRESULT _stdcall DeleteReferenceFromTaggedValue([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] long Index);
    [id(0x00000421)]
    HRESULT _stdcall IndexOfReferenceFromTaggedValue([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [in] IExtensibleModel* Value, [out, retval] long* ReturnValue);
    [id(0x00000422)]
    HRESULT _stdcall SetTaggedValueAsDefault([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name);
    [id(0x00000423)]
    HRESULT _stdcall GetTaggedValue([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [out, retval] VARIANT* ReturnValue);
  };

  [
    uuid(05BD8496-1B1E-4D2F-9E9C-24353BB64582),
    version(1.0),
    helpstring("Dispatch interface for UMLElement Object"),
    dual,
    oleautomation
  ]
  interface IUMLElement: IExtensibleModel
  {
  };

  [
    uuid(41725B53-1917-4D3B-A1A8-F8FCCF22D89E),
    version(1.0),
    helpstring("Dispatch interface for UMLModelElement Object"),
    dual,
    oleautomation
  ]
  interface IUMLModelElement: IUMLElement
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall Visibility([out, retval] UMLVisibilityKind* Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall Visibility([in] UMLVisibilityKind Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall IsSpecification([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000601)]
    HRESULT _stdcall IsSpecification([in] VARIANT_BOOL Value);
    [id(0x00000602)]
    HRESULT _stdcall AddElementImport([in] IUMLElementImport* Value);
    [id(0x00000603)]
    HRESULT _stdcall RemoveElementImport([in] IUMLElementImport* Value);
    [id(0x00000604)]
    HRESULT _stdcall InsertElementImport([in] long Index, [in] IUMLElementImport* Value);
    [id(0x00000605)]
    HRESULT _stdcall DeleteElementImport([in] long Index);
    [id(0x00000606)]
    HRESULT _stdcall IndexOfElementImport([in] IUMLElementImport* Value, [out, retval] long* Index);
    [id(0x00000607)]
    HRESULT _stdcall GetElementImportCount([out, retval] long* Value);
    [id(0x00000608)]
    HRESULT _stdcall GetElementImportAt([in] long Index, [out, retval] IUMLElementImport** Value);
    [propget, id(0x00000609)]
    HRESULT _stdcall Namespace([out, retval] IUMLNamespace** Value);
    [id(0x0000060A)]
    HRESULT _stdcall AddClientDependency([in] IUMLDependency* Value);
    [id(0x0000060B)]
    HRESULT _stdcall RemoveClientDependency([in] IUMLDependency* Value);
    [id(0x0000060C)]
    HRESULT _stdcall InsertClientDependency([in] long Index, [in] IUMLDependency* Value);
    [id(0x0000060D)]
    HRESULT _stdcall DeleteClientDependency([in] long Index);
    [id(0x0000060E)]
    HRESULT _stdcall IndexOfClientDependency([in] IUMLDependency* Value, [out, retval] long* Index);
    [id(0x0000060F)]
    HRESULT _stdcall GetClientDependencyCount([out, retval] long* Value);
    [id(0x00000610)]
    HRESULT _stdcall GetClientDependencyAt([in] long Index, [out, retval] IUMLDependency** Value);
    [id(0x00000611)]
    HRESULT _stdcall AddSupplierDependency([in] IUMLDependency* Value);
    [id(0x00000612)]
    HRESULT _stdcall RemoveSupplierDependency([in] IUMLDependency* Value);
    [id(0x00000613)]
    HRESULT _stdcall InsertSupplierDependency([in] long Index, [in] IUMLDependency* Value);
    [id(0x00000614)]
    HRESULT _stdcall DeleteSupplierDependency([in] long Index);
    [id(0x00000615)]
    HRESULT _stdcall IndexOfSupplierDependency([in] IUMLDependency* Value, [out, retval] long* Index);
    [id(0x00000616)]
    HRESULT _stdcall GetSupplierDependencyCount([out, retval] long* Value);
    [id(0x00000617)]
    HRESULT _stdcall GetSupplierDependencyAt([in] long Index, [out, retval] IUMLDependency** Value);
    [id(0x00000618)]
    HRESULT _stdcall AddDefaultParameter([in] IUMLTemplateParameter* Value);
    [id(0x00000619)]
    HRESULT _stdcall RemoveDefaultParameter([in] IUMLTemplateParameter* Value);
    [id(0x0000061A)]
    HRESULT _stdcall InsertDefaultParameter([in] long Index, [in] IUMLTemplateParameter* Value);
    [id(0x0000061B)]
    HRESULT _stdcall DeleteDefaultParameter([in] long Index);
    [id(0x0000061C)]
    HRESULT _stdcall IndexOfDefaultParameter([in] IUMLTemplateParameter* Value, [out, retval] long* Index);
    [id(0x0000061D)]
    HRESULT _stdcall GetDefaultParameterCount([out, retval] long* Value);
    [id(0x0000061E)]
    HRESULT _stdcall GetDefaultParameterAt([in] long Index, [out, retval] IUMLTemplateParameter** Value);
    [id(0x0000061F)]
    HRESULT _stdcall AddComment([in] IUMLComment* Value);
    [id(0x00000620)]
    HRESULT _stdcall RemoveComment([in] IUMLComment* Value);
    [id(0x00000621)]
    HRESULT _stdcall InsertComment([in] long Index, [in] IUMLComment* Value);
    [id(0x00000622)]
    HRESULT _stdcall DeleteComment([in] long Index);
    [id(0x00000623)]
    HRESULT _stdcall IndexOfComment([in] IUMLComment* Value, [out, retval] long* Index);
    [id(0x00000624)]
    HRESULT _stdcall GetCommentCount([out, retval] long* Value);
    [id(0x00000625)]
    HRESULT _stdcall GetCommentAt([in] long Index, [out, retval] IUMLComment** Value);
    [propget, id(0x00000626)]
    HRESULT _stdcall Container([out, retval] IUMLComponent** Value);
    [propput, id(0x00000626)]
    HRESULT _stdcall Container([in] IUMLComponent* Value);
    [id(0x00000627)]
    HRESULT _stdcall GetTemplateParameterCount([out, retval] long* Value);
    [id(0x00000628)]
    HRESULT _stdcall GetTemplateParameterAt([in] long Index, [out, retval] IUMLTemplateParameter** Value);
    [propget, id(0x00000629)]
    HRESULT _stdcall ParameterOwner([out, retval] IUMLTemplateParameter** Value);
    [id(0x0000062A)]
    HRESULT _stdcall AddTemplateArgument([in] IUMLTemplateArgument* Value);
    [id(0x0000062B)]
    HRESULT _stdcall RemoveTemplateArgument([in] IUMLTemplateArgument* Value);
    [id(0x0000062C)]
    HRESULT _stdcall InsertTemplateArgument([in] long Index, [in] IUMLTemplateArgument* Value);
    [id(0x0000062D)]
    HRESULT _stdcall DeleteTemplateArgument([in] long Index);
    [id(0x0000062E)]
    HRESULT _stdcall IndexOfTemplateArgument([in] IUMLTemplateArgument* Value, [out, retval] long* Index);
    [id(0x0000062F)]
    HRESULT _stdcall GetTemplateArgumentCount([out, retval] long* Value);
    [id(0x00000630)]
    HRESULT _stdcall GetTemplateArgumentAt([in] long Index, [out, retval] IUMLTemplateArgument** Value);
    [id(0x00000631)]
    HRESULT _stdcall GetBehaviorCount([out, retval] long* Value);
    [id(0x00000632)]
    HRESULT _stdcall GetBehaviorAt([in] long Index, [out, retval] IUMLStateMachine** Value);
    [id(0x00000633)]
    HRESULT _stdcall AddContentRole([in] IUMLClassifierRole* Value);
    [id(0x00000634)]
    HRESULT _stdcall RemoveContentRole([in] IUMLClassifierRole* Value);
    [id(0x00000635)]
    HRESULT _stdcall InsertContentRole([in] long Index, [in] IUMLClassifierRole* Value);
    [id(0x00000636)]
    HRESULT _stdcall DeleteContentRole([in] long Index);
    [id(0x00000637)]
    HRESULT _stdcall IndexOfContentRole([in] IUMLClassifierRole* Value, [out, retval] long* Index);
    [id(0x00000638)]
    HRESULT _stdcall GetContentRoleCount([out, retval] long* Value);
    [id(0x00000639)]
    HRESULT _stdcall GetContentRoleAt([in] long Index, [out, retval] IUMLClassifierRole** Value);
    [id(0x0000063A)]
    HRESULT _stdcall AddOwnerPartition([in] IUMLPartition* Value);
    [id(0x0000063B)]
    HRESULT _stdcall RemoveOwnerPartition([in] IUMLPartition* Value);
    [id(0x0000063C)]
    HRESULT _stdcall InsertOwnerPartition([in] long Index, [in] IUMLPartition* Value);
    [id(0x0000063D)]
    HRESULT _stdcall DeleteOwnerPartition([in] long Index);
    [id(0x0000063E)]
    HRESULT _stdcall IndexOfOwnerPartition([in] IUMLPartition* Value, [out, retval] long* Index);
    [id(0x0000063F)]
    HRESULT _stdcall GetOwnerPartitionCount([out, retval] long* Value);
    [id(0x00000640)]
    HRESULT _stdcall GetOwnerPartitionAt([in] long Index, [out, retval] IUMLPartition** Value);
  };

  [
    uuid(8DA1D40F-BB4E-401F-B913-031E4DAD36D6),
    version(1.0),
    helpstring("Dispatch interface for UMLGeneralizableElement Object"),
    dual,
    oleautomation
  ]
  interface IUMLGeneralizableElement: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall IsRoot([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall IsRoot([in] VARIANT_BOOL Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall IsLeaf([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall IsLeaf([in] VARIANT_BOOL Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall IsAbstract([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall IsAbstract([in] VARIANT_BOOL Value);
    [id(0x00000703)]
    HRESULT _stdcall AddGeneralization([in] IUMLGeneralization* Value);
    [id(0x00000704)]
    HRESULT _stdcall RemoveGeneralization([in] IUMLGeneralization* Value);
    [id(0x00000705)]
    HRESULT _stdcall InsertGeneralization([in] long Index, [in] IUMLGeneralization* Value);
    [id(0x00000706)]
    HRESULT _stdcall DeleteGeneralization([in] long Index);
    [id(0x00000707)]
    HRESULT _stdcall IndexOfGeneralization([in] IUMLGeneralization* Value, [out, retval] long* Index);
    [id(0x00000708)]
    HRESULT _stdcall GetGeneralizationCount([out, retval] long* Value);
    [id(0x00000709)]
    HRESULT _stdcall GetGeneralizationAt([in] long Index, [out, retval] IUMLGeneralization** Value);
    [id(0x0000070A)]
    HRESULT _stdcall AddSpecialization([in] IUMLGeneralization* Value);
    [id(0x0000070B)]
    HRESULT _stdcall RemoveSpecialization([in] IUMLGeneralization* Value);
    [id(0x0000070C)]
    HRESULT _stdcall InsertSpecialization([in] long Index, [in] IUMLGeneralization* Value);
    [id(0x0000070D)]
    HRESULT _stdcall DeleteSpecialization([in] long Index);
    [id(0x0000070E)]
    HRESULT _stdcall IndexOfSpecialization([in] IUMLGeneralization* Value, [out, retval] long* Index);
    [id(0x0000070F)]
    HRESULT _stdcall GetSpecializationCount([out, retval] long* Value);
    [id(0x00000710)]
    HRESULT _stdcall GetSpecializationAt([in] long Index, [out, retval] IUMLGeneralization** Value);
  };

  [
    uuid(4C6D06BF-7840-4A1B-B7E7-08999E484E24),
    version(1.0),
    helpstring("Dispatch interface for UMLNamespace Object"),
    dual,
    oleautomation
  ]
  interface IUMLNamespace: IUMLGeneralizableElement
  {
    [id(0x00000800)]
    HRESULT _stdcall GetOwnedElementCount([out, retval] long* Value);
    [id(0x00000801)]
    HRESULT _stdcall GetOwnedElementAt([in] long Index, [out, retval] IUMLModelElement** Value);
  };

  [
    uuid(9111F106-C415-4CE2-AEF8-E006339FA974),
    version(1.0),
    helpstring("Dispatch interface for MetaElement Object"),
    dual,
    oleautomation
  ]
  interface IMetaElement: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall Name([out, retval] BSTR* Value);
    [id(0x00000201)]
    HRESULT _stdcall GetGuid([out, retval] BSTR* ReturnValue);
  };

  [
    uuid(0A3688E8-E3CD-4D28-B2EA-32955136A0BD),
    version(1.0),
    helpstring("Dispatch interface for MetaClassifier Object"),
    dual,
    oleautomation
  ]
  interface IMetaClassifier: IMetaElement
  {
  };

  [
    uuid(679B395E-CC22-4BC1-814E-C31B78147AFA),
    version(1.0),
    helpstring("Dispatch interface for MetaClass Object"),
    dual,
    oleautomation
  ]
  interface IMetaClass: IMetaClassifier
  {
    [propget, id(0x00000400)]
    HRESULT _stdcall IsAbstract([out, retval] VARIANT_BOOL* Value);
    [id(0x00000401)]
    HRESULT _stdcall GetMetaAttributeCount([out, retval] long* Value);
    [id(0x00000402)]
    HRESULT _stdcall GetMetaAttributeAt([in] long Index, [out, retval] IMetaAttribute** Value);
    [id(0x00000403)]
    HRESULT _stdcall GetMetaReferenceCount([out, retval] long* Value);
    [id(0x00000404)]
    HRESULT _stdcall GetMetaReferenceAt([in] long Index, [out, retval] IMetaReference** Value);
    [id(0x00000405)]
    HRESULT _stdcall GetMetaCollectionCount([out, retval] long* Value);
    [id(0x00000406)]
    HRESULT _stdcall GetMetaCollectionAt([in] long Index, [out, retval] IMetaCollection** Value);
    [id(0x00000407)]
    HRESULT _stdcall GetSubclassCount([out, retval] long* Value);
    [id(0x00000408)]
    HRESULT _stdcall GetSubclassAt([in] long Index, [out, retval] IMetaClass** Value);
    [propget, id(0x00000409)]
    HRESULT _stdcall Superclass([out, retval] IMetaClass** Value);
    [id(0x0000040A)]
    HRESULT _stdcall FindInstanceByGuid([in] BSTR Guid, [out, retval] IElement** ReturnValue);
    [id(0x0000040B)]
    HRESULT _stdcall FindInstanceByGuidRecurse([in] BSTR Guid, [out, retval] IElement** ReturnValue);
    [id(0x0000040C)]
    HRESULT _stdcall IsKindOf([in] BSTR ClassName, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x0000040D)]
    HRESULT _stdcall ExistsAttribute([in] BSTR Name, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x0000040E)]
    HRESULT _stdcall ExistsReference([in] BSTR Name, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x0000040F)]
    HRESULT _stdcall ExistsCollection([in] BSTR Name, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000410)]
    HRESULT _stdcall GetAttributeByName([in] BSTR Name, [out, retval] IMetaAttribute** ReturnValue);
    [id(0x00000411)]
    HRESULT _stdcall GetReferenceByName([in] BSTR Name, [out, retval] IMetaReference** ReturnValue);
    [id(0x00000412)]
    HRESULT _stdcall GetCollectionByName([in] BSTR Name, [out, retval] IMetaCollection** ReturnValue);
    [id(0x00000413)]
    HRESULT _stdcall GetContainerRelation([in] BSTR Container, [out, retval] IMetaReference** ReturnValue);
    [id(0x00000414)]
    HRESULT _stdcall GetInstanceAt([in] long Index, [out, retval] IElement** ReturnValue);
    [id(0x00000415)]
    HRESULT _stdcall GetInstanceCount([out, retval] long* ReturnValue);
    [id(0x00000416)]
    HRESULT _stdcall GetInclusiveInstanceAt([in] long Index, [out, retval] IElement** ReturnValue);
    [id(0x00000417)]
    HRESULT _stdcall GetInclusiveInstanceCount([out, retval] long* ReturnValue);
  };

  [
    uuid(15A5CBED-5B23-4385-9B18-9D81B12A9155),
    version(1.0),
    helpstring("Dispatch interface for MetaSlot Object"),
    dual,
    oleautomation
  ]
  interface IMetaSlot: IMetaElement
  {
    [propget, id(0x00000300)]
    HRESULT _stdcall IsReadOnly([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000301)]
    HRESULT _stdcall IsDerived([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000302)]
    HRESULT _stdcall TypeRef([out, retval] IMetaClassifier** Value);
  };

  [
    uuid(16D4B5AD-2817-4079-9E9B-303EC5CFDC98),
    version(1.0),
    helpstring("Dispatch interface for MetaAttribute Object"),
    dual,
    oleautomation
  ]
  interface IMetaAttribute: IMetaSlot
  {
    [propget, id(0x00000400)]
    HRESULT _stdcall DefaultValue([out, retval] BSTR* Value);
  };

  [
    uuid(E0274973-68A6-4516-91A6-44BB0D5E1BF0),
    version(1.0),
    helpstring("Dispatch interface for MetaAssociationEnd Object"),
    dual,
    oleautomation
  ]
  interface IMetaAssociationEnd: IMetaSlot
  {
    [propget, id(0x00000400)]
    HRESULT _stdcall Kind([out, retval] MetaAssociationEndKind* Value);
    [propget, id(0x00000401)]
    HRESULT _stdcall Aggregate([out, retval] MetaAggregateKind* Value);
    [propget, id(0x00000402)]
    HRESULT _stdcall OtherSide([out, retval] BSTR* Value);
    [propget, id(0x00000403)]
    HRESULT _stdcall OtherSideKind([out, retval] MetaAssociationEndKind* Value);
    [id(0x00000404)]
    HRESULT _stdcall GetOtherSideEnd([out, retval] IMetaAssociationEnd** ReturnValue);
  };

  [
    uuid(13B577DE-AD9F-435B-90CC-C1F65EC28A42),
    version(1.0),
    helpstring("Dispatch interface for MetaReference Object"),
    dual,
    oleautomation
  ]
  interface IMetaReference: IMetaAssociationEnd
  {
  };

  [
    uuid(6FDEEA70-02EC-43CD-900A-24DAEDF81D9D),
    version(1.0),
    helpstring("Dispatch interface for MetaCollection Object"),
    dual,
    oleautomation
  ]
  interface IMetaCollection: IMetaAssociationEnd
  {
  };

  [
    uuid(87207805-69A8-4731-92BD-970B6011D4CC),
    version(1.0),
    helpstring("Dispatch interface for Document Object"),
    dual,
    oleautomation
  ]
  interface IDocument: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall FileName([out, retval] BSTR* Value);
    [propget, id(0x00000201)]
    HRESULT _stdcall Version([out, retval] BSTR* Value);
    [propget, id(0x00000202)]
    HRESULT _stdcall Modified([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000203)]
    HRESULT _stdcall ReadOnly([out, retval] VARIANT_BOOL* Value);
    [id(0x00000204)]
    HRESULT _stdcall GetDocumentSymbol([out, retval] BSTR* ReturnValue);
    [id(0x00000205)]
    HRESULT _stdcall GetDocumentElement([out, retval] IElement** ReturnValue);
    [id(0x00000206)]
    HRESULT _stdcall Save(void);
    [id(0x00000207)]
    HRESULT _stdcall SaveAs([in] BSTR FileName);
  };

  [
    uuid(68B7FB9E-F929-4DF2-9019-8793E5A8E5FC),
    version(1.0),
    helpstring("Dispatch interface for View Object"),
    dual,
    oleautomation
  ]
  interface IView: IElement
  {
    [propget, id(0x00000300)]
    HRESULT _stdcall LineColor([out, retval] BSTR* Value);
    [propput, id(0x00000300)]
    HRESULT _stdcall LineColor([in] BSTR Value);
    [propget, id(0x00000301)]
    HRESULT _stdcall FillColor([out, retval] BSTR* Value);
    [propput, id(0x00000301)]
    HRESULT _stdcall FillColor([in] BSTR Value);
    [propget, id(0x00000302)]
    HRESULT _stdcall FontFace([out, retval] BSTR* Value);
    [propput, id(0x00000302)]
    HRESULT _stdcall FontFace([in] BSTR Value);
    [propget, id(0x00000303)]
    HRESULT _stdcall FontColor([out, retval] BSTR* Value);
    [propput, id(0x00000303)]
    HRESULT _stdcall FontColor([in] BSTR Value);
    [propget, id(0x00000304)]
    HRESULT _stdcall FontSize([out, retval] long* Value);
    [propput, id(0x00000304)]
    HRESULT _stdcall FontSize([in] long Value);
    [propget, id(0x00000305)]
    HRESULT _stdcall FontStyle([out, retval] long* Value);
    [propput, id(0x00000305)]
    HRESULT _stdcall FontStyle([in] long Value);
    [propget, id(0x00000306)]
    HRESULT _stdcall Visible([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000307)]
    HRESULT _stdcall Enabled([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000308)]
    HRESULT _stdcall Selected([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000309)]
    HRESULT _stdcall Model([out, retval] IModel** Value);
    [propget, id(0x0000030A)]
    HRESULT _stdcall ContainerView([out, retval] IView** Value);
    [id(0x0000030B)]
    HRESULT _stdcall GetContainedViewCount([out, retval] long* Value);
    [id(0x0000030C)]
    HRESULT _stdcall GetContainedViewAt([in] long Index, [out, retval] IView** Value);
    [propget, id(0x0000030D)]
    HRESULT _stdcall OwnerDiagramView([out, retval] IDiagramView** Value);
    [id(0x0000030E)]
    HRESULT _stdcall BringToFront(void);
    [id(0x0000030F)]
    HRESULT _stdcall SendToBack(void);
    [id(0x00000310)]
    HRESULT _stdcall Update(void);
    [id(0x00000311)]
    HRESULT _stdcall GetDiagramView([out, retval] IDiagramView** ReturnValue);
    [id(0x00000312)]
    HRESULT _stdcall CanContainView([in] IView* AView, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000313)]
    HRESULT _stdcall CanContainViewKind([in] BSTR Kind, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000314)]
    HRESULT _stdcall Move([in] long DX, [in] long DY);
    [id(0x00000315)]
    HRESULT _stdcall MoveInto([in] IView* AContainerView);
  };

  [
    uuid(0AEF079C-3C25-42B4-B2D0-C2EC1103C4C4),
    version(1.0),
    helpstring("Dispatch interface for DiagramView Object"),
    dual,
    oleautomation
  ]
  interface IDiagramView: IView
  {
    [id(0x00000400)]
    HRESULT _stdcall GetSelectedViewCount([out, retval] long* Value);
    [id(0x00000401)]
    HRESULT _stdcall GetSelectedViewAt([in] long Index, [out, retval] IView** Value);
    [propget, id(0x00000402)]
    HRESULT _stdcall Diagram([out, retval] IDiagram** Value);
    [id(0x00000403)]
    HRESULT _stdcall GetOwnedViewCount([out, retval] long* Value);
    [id(0x00000404)]
    HRESULT _stdcall GetOwnedViewAt([in] long Index, [out, retval] IView** Value);
    [id(0x00000405)]
    HRESULT _stdcall CanOwnView([in] IView* AView, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000406)]
    HRESULT _stdcall CanOwnViewKind([in] BSTR Kind, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000407)]
    HRESULT _stdcall CanCopyViews([out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000408)]
    HRESULT _stdcall CanDeleteViews([out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000409)]
    HRESULT _stdcall CreateViewOf([in] IModel* AModel, [in] long X, [in] long Y, [out, retval] IView** ReturnValue);
    [id(0x0000040A)]
    HRESULT _stdcall LayoutDiagram(void);
    [id(0x0000040B)]
    HRESULT _stdcall CopyDiagram(void);
    [id(0x0000040C)]
    HRESULT _stdcall ExportDiagramAsBitmap([in] BSTR FileName);
    [id(0x0000040D)]
    HRESULT _stdcall ExportDiagramAsMetafile([in] BSTR FileName);
    [id(0x0000040E)]
    HRESULT _stdcall ExportDiagramAsJPEG([in] BSTR FileName);
  };

  [
    uuid(F8B7B84A-5C66-4B73-B590-5E76606B809E),
    version(1.0),
    helpstring("Dispatch interface for Diagram Object"),
    dual,
    oleautomation
  ]
  interface IDiagram: IModel
  {
    [propget, id(0x00000400)]
    HRESULT _stdcall DefaultDiagram([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000400)]
    HRESULT _stdcall DefaultDiagram([in] VARIANT_BOOL Value);
    [propget, id(0x00000401)]
    HRESULT _stdcall DiagramOwner([out, retval] IModel** Value);
    [propget, id(0x00000402)]
    HRESULT _stdcall DiagramView([out, retval] IDiagramView** Value);
  };

  [
    uuid(EDAE6431-EB72-4E17-8B49-FC733DF4669E),
    version(1.0),
    helpstring("Dispatch interface for Constraint Object"),
    dual,
    oleautomation
  ]
  interface IConstraint: IElement
  {
    [propget, id(0x00000300)]
    HRESULT _stdcall Name([out, retval] BSTR* Value);
    [propput, id(0x00000300)]
    HRESULT _stdcall Name([in] BSTR Value);
    [propget, id(0x00000301)]
    HRESULT _stdcall Body([out, retval] BSTR* Value);
    [propput, id(0x00000301)]
    HRESULT _stdcall Body([in] BSTR Value);
    [propget, id(0x00000302)]
    HRESULT _stdcall ConstrainedModel([out, retval] IExtensibleModel** Value);
  };

  [
    uuid(43568451-DDBD-428B-B7BB-A835DE365741),
    version(1.0),
    helpstring("Dispatch interface for TaggedValue Object"),
    dual,
    oleautomation
  ]
  interface ITaggedValue: IElement
  {
    [propget, id(0x00000300)]
    HRESULT _stdcall ProfileName([out, retval] BSTR* Value);
    [propget, id(0x00000301)]
    HRESULT _stdcall TagDefinitionSetName([out, retval] BSTR* Value);
    [propget, id(0x00000302)]
    HRESULT _stdcall Name([out, retval] BSTR* Value);
    [propget, id(0x00000303)]
    HRESULT _stdcall DataValue([out, retval] BSTR* Value);
    [propget, id(0x00000304)]
    HRESULT _stdcall TaggedModel([out, retval] IExtensibleModel** Value);
    [id(0x00000305)]
    HRESULT _stdcall GetReferenceValueCount([out, retval] long* Value);
    [id(0x00000306)]
    HRESULT _stdcall GetReferenceValueAt([in] long Index, [out, retval] IExtensibleModel** Value);
    [id(0x00000307)]
    HRESULT _stdcall GetTagDefinition([out, retval] ITagDefinition** ReturnValue);
    [id(0x00000308)]
    HRESULT _stdcall GetTagDefinitionSet([out, retval] ITagDefinitionSet** ReturnValue);
    [id(0x00000309)]
    HRESULT _stdcall GetProfile([out, retval] IProfile** ReturnValue);
  };

  [
    uuid(CBD9F79B-38E9-410A-B488-38A2238A8501),
    version(1.0),
    helpstring("Dispatch interface for TagDefinition Object"),
    dual,
    oleautomation
  ]
  interface ITagDefinition: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall Name([out, retval] BSTR* Value);
    [propget, id(0x00000201)]
    HRESULT _stdcall TagType([out, retval] TagTypeKind* Value);
    [propget, id(0x00000202)]
    HRESULT _stdcall ReferenceType([out, retval] BSTR* Value);
    [propget, id(0x00000203)]
    HRESULT _stdcall DefaultValue([out, retval] BSTR* Value);
    [propget, id(0x00000204)]
    HRESULT _stdcall TagDefinitionSet([out, retval] ITagDefinitionSet** Value);
    [id(0x00000205)]
    HRESULT _stdcall IndexOfLiteral([in] BSTR ALiteral, [out, retval] long* ReturnValue);
    [id(0x00000206)]
    HRESULT _stdcall GetLiteralAt([in] long Index, [out, retval] BSTR* ReturnValue);
    [id(0x00000207)]
    HRESULT _stdcall GetLiteralCount([out, retval] long* ReturnValue);
  };

  [
    uuid(D0E49916-5F6C-4F53-B622-A7FE92A241A8),
    version(1.0),
    helpstring("Dispatch interface for TagDefinitionSet Object"),
    dual,
    oleautomation
  ]
  interface ITagDefinitionSet: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall Name([out, retval] BSTR* Value);
    [propget, id(0x00000201)]
    HRESULT _stdcall Profile([out, retval] IProfile** Value);
    [id(0x00000202)]
    HRESULT _stdcall GetTagDefinitionCount([out, retval] long* Value);
    [id(0x00000203)]
    HRESULT _stdcall GetTagDefinitionAt([in] long Index, [out, retval] ITagDefinition** Value);
    [propget, id(0x00000204)]
    HRESULT _stdcall Stereotype([out, retval] IStereotype** Value);
    [id(0x00000205)]
    HRESULT _stdcall GetBaseClassAt([in] long Index, [out, retval] BSTR* ReturnValue);
    [id(0x00000206)]
    HRESULT _stdcall GetBaseClassCount([out, retval] long* ReturnValue);
    [id(0x00000207)]
    HRESULT _stdcall FindTagDefinition([in] BSTR Name, [out, retval] ITagDefinition** ReturnValue);
    [id(0x00000208)]
    HRESULT _stdcall CanApplyTo([in] BSTR ClassName, [out, retval] VARIANT_BOOL* ReturnValue);
  };

  [
    uuid(8C2E2832-490B-4B5E-8EF3-5EE2D65FB361),
    version(1.0),
    helpstring("Dispatch interface for Profile Object"),
    dual,
    oleautomation
  ]
  interface IProfile: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall Name([out, retval] BSTR* Value);
    [propget, id(0x00000201)]
    HRESULT _stdcall Description([out, retval] BSTR* Value);
    [propget, id(0x00000202)]
    HRESULT _stdcall Path([out, retval] BSTR* Value);
    [propget, id(0x00000203)]
    HRESULT _stdcall FileName([out, retval] BSTR* Value);
    [propget, id(0x00000204)]
    HRESULT _stdcall IconFile([out, retval] BSTR* Value);
    [id(0x00000205)]
    HRESULT _stdcall GetDataTypeCount([out, retval] long* Value);
    [id(0x00000206)]
    HRESULT _stdcall GetDataTypeAt([in] long Index, [out, retval] IDataType** Value);
    [id(0x00000207)]
    HRESULT _stdcall GetStereotypeCount([out, retval] long* Value);
    [id(0x00000208)]
    HRESULT _stdcall GetStereotypeAt([in] long Index, [out, retval] IStereotype** Value);
    [id(0x00000209)]
    HRESULT _stdcall GetTagDefinitionSetCount([out, retval] long* Value);
    [id(0x0000020A)]
    HRESULT _stdcall GetTagDefinitionSetAt([in] long Index, [out, retval] ITagDefinitionSet** Value);
    [id(0x0000020B)]
    HRESULT _stdcall FindTagDefinition([in] BSTR TagDefinitionSet, [in] BSTR Name, [out, retval] ITagDefinition** ReturnValue);
    [id(0x0000020C)]
    HRESULT _stdcall FindTagDefinitionSet([in] BSTR Name, [out, retval] ITagDefinitionSet** ReturnValue);
    [id(0x0000020D)]
    HRESULT _stdcall FindStereotype([in] BSTR Name, [in] BSTR BaseClass, [out, retval] IStereotype** ReturnValue);
    [id(0x0000020E)]
    HRESULT _stdcall FindDataType([in] BSTR Name, [out, retval] IDataType** ReturnValue);
  };

  [
    uuid(BF34F178-5016-4407-B74A-CF4312BE6F50),
    version(1.0),
    helpstring("Dispatch interface for DataType Object"),
    dual,
    oleautomation
  ]
  interface IDataType: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall Name([out, retval] BSTR* Value);
    [propget, id(0x00000201)]
    HRESULT _stdcall Profile([out, retval] IProfile** Value);
  };

  [
    uuid(571A16C6-388B-4F53-A546-D9CC713502E7),
    version(1.0),
    helpstring("Dispatch interface for Stereotype Object"),
    dual,
    oleautomation
  ]
  interface IStereotype: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall Name([out, retval] BSTR* Value);
    [propget, id(0x00000201)]
    HRESULT _stdcall IconFile([out, retval] BSTR* Value);
    [propget, id(0x00000202)]
    HRESULT _stdcall IconMinWidth([out, retval] long* Value);
    [propget, id(0x00000203)]
    HRESULT _stdcall IconMinHeight([out, retval] long* Value);
    [propget, id(0x00000204)]
    HRESULT _stdcall Description([out, retval] BSTR* Value);
    [propget, id(0x00000205)]
    HRESULT _stdcall Profile([out, retval] IProfile** Value);
    [id(0x00000206)]
    HRESULT _stdcall GetChildCount([out, retval] long* Value);
    [id(0x00000207)]
    HRESULT _stdcall GetChildAt([in] long Index, [out, retval] IStereotype** Value);
    [propget, id(0x00000208)]
    HRESULT _stdcall Parent([out, retval] IStereotype** Value);
    [propget, id(0x00000209)]
    HRESULT _stdcall TagDefinitionSet([out, retval] ITagDefinitionSet** Value);
    [id(0x0000020A)]
    HRESULT _stdcall GetBaseClassAt([in] long Index, [out, retval] BSTR* ReturnValue);
    [id(0x0000020B)]
    HRESULT _stdcall GetBaseClassCount([out, retval] long* ReturnValue);
    [id(0x0000020C)]
    HRESULT _stdcall CanApplyTo([in] BSTR ClassName, [out, retval] VARIANT_BOOL* ReturnValue);
  };

  [
    uuid(93427E16-2E5A-450E-BAAB-2BBA07108F67),
    version(1.0),
    helpstring("Dispatch interface for UMLElementImport Object"),
    dual,
    oleautomation
  ]
  interface IUMLElementImport: IUMLElement
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall Visibility([out, retval] UMLVisibilityKind* Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall Visibility([in] UMLVisibilityKind Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall Alias([out, retval] BSTR* Value);
    [propput, id(0x00000601)]
    HRESULT _stdcall Alias([in] BSTR Value);
    [propget, id(0x00000602)]
    HRESULT _stdcall IsSpecification([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000602)]
    HRESULT _stdcall IsSpecification([in] VARIANT_BOOL Value);
    [propget, id(0x00000603)]
    HRESULT _stdcall ImportedElement([out, retval] IUMLModelElement** Value);
    [propput, id(0x00000603)]
    HRESULT _stdcall ImportedElement([in] IUMLModelElement* Value);
    [propget, id(0x00000604)]
    HRESULT _stdcall Package([out, retval] IUMLPackage** Value);
  };

  [
    uuid(CC46D9E3-CA2E-4F42-86FE-4F8C12EAA83D),
    version(1.0),
    helpstring("Dispatch interface for UMLClassifier Object"),
    dual,
    oleautomation
  ]
  interface IUMLClassifier: IUMLNamespace
  {
    [id(0x00000900)]
    HRESULT _stdcall GetOperationCount([out, retval] long* Value);
    [id(0x00000901)]
    HRESULT _stdcall GetOperationAt([in] long Index, [out, retval] IUMLOperation** Value);
    [id(0x00000902)]
    HRESULT _stdcall AddTypedFeature([in] IUMLStructuralFeature* Value);
    [id(0x00000903)]
    HRESULT _stdcall RemoveTypedFeature([in] IUMLStructuralFeature* Value);
    [id(0x00000904)]
    HRESULT _stdcall InsertTypedFeature([in] long Index, [in] IUMLStructuralFeature* Value);
    [id(0x00000905)]
    HRESULT _stdcall DeleteTypedFeature([in] long Index);
    [id(0x00000906)]
    HRESULT _stdcall IndexOfTypedFeature([in] IUMLStructuralFeature* Value, [out, retval] long* Index);
    [id(0x00000907)]
    HRESULT _stdcall GetTypedFeatureCount([out, retval] long* Value);
    [id(0x00000908)]
    HRESULT _stdcall GetTypedFeatureAt([in] long Index, [out, retval] IUMLStructuralFeature** Value);
    [id(0x00000909)]
    HRESULT _stdcall AddTypedParameter([in] IUMLParameter* Value);
    [id(0x0000090A)]
    HRESULT _stdcall RemoveTypedParameter([in] IUMLParameter* Value);
    [id(0x0000090B)]
    HRESULT _stdcall InsertTypedParameter([in] long Index, [in] IUMLParameter* Value);
    [id(0x0000090C)]
    HRESULT _stdcall DeleteTypedParameter([in] long Index);
    [id(0x0000090D)]
    HRESULT _stdcall IndexOfTypedParameter([in] IUMLParameter* Value, [out, retval] long* Index);
    [id(0x0000090E)]
    HRESULT _stdcall GetTypedParameterCount([out, retval] long* Value);
    [id(0x0000090F)]
    HRESULT _stdcall GetTypedParameterAt([in] long Index, [out, retval] IUMLParameter** Value);
    [id(0x00000910)]
    HRESULT _stdcall AddAssociation([in] IUMLAssociationEnd* Value);
    [id(0x00000911)]
    HRESULT _stdcall RemoveAssociation([in] IUMLAssociationEnd* Value);
    [id(0x00000912)]
    HRESULT _stdcall InsertAssociation([in] long Index, [in] IUMLAssociationEnd* Value);
    [id(0x00000913)]
    HRESULT _stdcall DeleteAssociation([in] long Index);
    [id(0x00000914)]
    HRESULT _stdcall IndexOfAssociation([in] IUMLAssociationEnd* Value, [out, retval] long* Index);
    [id(0x00000915)]
    HRESULT _stdcall GetAssociationCount([out, retval] long* Value);
    [id(0x00000916)]
    HRESULT _stdcall GetAssociationAt([in] long Index, [out, retval] IUMLAssociationEnd** Value);
    [id(0x00000917)]
    HRESULT _stdcall AddPowertypeGeneralization([in] IUMLGeneralization* Value);
    [id(0x00000918)]
    HRESULT _stdcall RemovePowertypeGeneralization([in] IUMLGeneralization* Value);
    [id(0x00000919)]
    HRESULT _stdcall InsertPowertypeGeneralization([in] long Index, [in] IUMLGeneralization* Value);
    [id(0x0000091A)]
    HRESULT _stdcall DeletePowertypeGeneralization([in] long Index);
    [id(0x0000091B)]
    HRESULT _stdcall IndexOfPowertypeGeneralization([in] IUMLGeneralization* Value, [out, retval] long* Index);
    [id(0x0000091C)]
    HRESULT _stdcall GetPowertypeGeneralizationCount([out, retval] long* Value);
    [id(0x0000091D)]
    HRESULT _stdcall GetPowertypeGeneralizationAt([in] long Index, [out, retval] IUMLGeneralization** Value);
    [id(0x0000091E)]
    HRESULT _stdcall GetAttributeCount([out, retval] long* Value);
    [id(0x0000091F)]
    HRESULT _stdcall GetAttributeAt([in] long Index, [out, retval] IUMLAttribute** Value);
    [id(0x00000920)]
    HRESULT _stdcall AddOwnedPort([in] IUMLPort* Value);
    [id(0x00000921)]
    HRESULT _stdcall RemoveOwnedPort([in] IUMLPort* Value);
    [id(0x00000922)]
    HRESULT _stdcall InsertOwnedPort([in] long Index, [in] IUMLPort* Value);
    [id(0x00000923)]
    HRESULT _stdcall DeleteOwnedPort([in] long Index);
    [id(0x00000924)]
    HRESULT _stdcall IndexOfOwnedPort([in] IUMLPort* Value, [out, retval] long* Index);
    [id(0x00000925)]
    HRESULT _stdcall GetOwnedPortCount([out, retval] long* Value);
    [id(0x00000926)]
    HRESULT _stdcall GetOwnedPortAt([in] long Index, [out, retval] IUMLPort** Value);
    [id(0x00000927)]
    HRESULT _stdcall AddOwnedConnector([in] IUMLConnector* Value);
    [id(0x00000928)]
    HRESULT _stdcall RemoveOwnedConnector([in] IUMLConnector* Value);
    [id(0x00000929)]
    HRESULT _stdcall InsertOwnedConnector([in] long Index, [in] IUMLConnector* Value);
    [id(0x0000092A)]
    HRESULT _stdcall DeleteOwnedConnector([in] long Index);
    [id(0x0000092B)]
    HRESULT _stdcall IndexOfOwnedConnector([in] IUMLConnector* Value, [out, retval] long* Index);
    [id(0x0000092C)]
    HRESULT _stdcall GetOwnedConnectorCount([out, retval] long* Value);
    [id(0x0000092D)]
    HRESULT _stdcall GetOwnedConnectorAt([in] long Index, [out, retval] IUMLConnector** Value);
    [id(0x0000092E)]
    HRESULT _stdcall AddInstance([in] IUMLInstance* Value);
    [id(0x0000092F)]
    HRESULT _stdcall RemoveInstance([in] IUMLInstance* Value);
    [id(0x00000930)]
    HRESULT _stdcall InsertInstance([in] long Index, [in] IUMLInstance* Value);
    [id(0x00000931)]
    HRESULT _stdcall DeleteInstance([in] long Index);
    [id(0x00000932)]
    HRESULT _stdcall IndexOfInstance([in] IUMLInstance* Value, [out, retval] long* Index);
    [id(0x00000933)]
    HRESULT _stdcall GetInstanceCount([out, retval] long* Value);
    [id(0x00000934)]
    HRESULT _stdcall GetInstanceAt([in] long Index, [out, retval] IUMLInstance** Value);
    [id(0x00000935)]
    HRESULT _stdcall AddCreateAction([in] IUMLCreateAction* Value);
    [id(0x00000936)]
    HRESULT _stdcall RemoveCreateAction([in] IUMLCreateAction* Value);
    [id(0x00000937)]
    HRESULT _stdcall InsertCreateAction([in] long Index, [in] IUMLCreateAction* Value);
    [id(0x00000938)]
    HRESULT _stdcall DeleteCreateAction([in] long Index);
    [id(0x00000939)]
    HRESULT _stdcall IndexOfCreateAction([in] IUMLCreateAction* Value, [out, retval] long* Index);
    [id(0x0000093A)]
    HRESULT _stdcall GetCreateActionCount([out, retval] long* Value);
    [id(0x0000093B)]
    HRESULT _stdcall GetCreateActionAt([in] long Index, [out, retval] IUMLCreateAction** Value);
    [id(0x0000093C)]
    HRESULT _stdcall AddClassifierRole([in] IUMLClassifierRole* Value);
    [id(0x0000093D)]
    HRESULT _stdcall RemoveClassifierRole([in] IUMLClassifierRole* Value);
    [id(0x0000093E)]
    HRESULT _stdcall InsertClassifierRole([in] long Index, [in] IUMLClassifierRole* Value);
    [id(0x0000093F)]
    HRESULT _stdcall DeleteClassifierRole([in] long Index);
    [id(0x00000940)]
    HRESULT _stdcall IndexOfClassifierRole([in] IUMLClassifierRole* Value, [out, retval] long* Index);
    [id(0x00000941)]
    HRESULT _stdcall GetClassifierRoleCount([out, retval] long* Value);
    [id(0x00000942)]
    HRESULT _stdcall GetClassifierRoleAt([in] long Index, [out, retval] IUMLClassifierRole** Value);
    [id(0x00000943)]
    HRESULT _stdcall GetOwnedCollaborationCount([out, retval] long* Value);
    [id(0x00000944)]
    HRESULT _stdcall GetOwnedCollaborationAt([in] long Index, [out, retval] IUMLCollaboration** Value);
    [id(0x00000945)]
    HRESULT _stdcall GetOwnedCollaborationInstanceSetCount([out, retval] long* Value);
    [id(0x00000946)]
    HRESULT _stdcall GetOwnedCollaborationInstanceSetAt([in] long Index, [out, retval] IUMLCollaborationInstanceSet** Value);
    [id(0x00000947)]
    HRESULT _stdcall AddClassifierInState([in] IUMLClassifierInState* Value);
    [id(0x00000948)]
    HRESULT _stdcall RemoveClassifierInState([in] IUMLClassifierInState* Value);
    [id(0x00000949)]
    HRESULT _stdcall InsertClassifierInState([in] long Index, [in] IUMLClassifierInState* Value);
    [id(0x0000094A)]
    HRESULT _stdcall DeleteClassifierInState([in] long Index);
    [id(0x0000094B)]
    HRESULT _stdcall IndexOfClassifierInState([in] IUMLClassifierInState* Value, [out, retval] long* Index);
    [id(0x0000094C)]
    HRESULT _stdcall GetClassifierInStateCount([out, retval] long* Value);
    [id(0x0000094D)]
    HRESULT _stdcall GetClassifierInStateAt([in] long Index, [out, retval] IUMLClassifierInState** Value);
    [id(0x0000094E)]
    HRESULT _stdcall AddObjectFlowState([in] IUMLObjectFlowState* Value);
    [id(0x0000094F)]
    HRESULT _stdcall RemoveObjectFlowState([in] IUMLObjectFlowState* Value);
    [id(0x00000950)]
    HRESULT _stdcall InsertObjectFlowState([in] long Index, [in] IUMLObjectFlowState* Value);
    [id(0x00000951)]
    HRESULT _stdcall DeleteObjectFlowState([in] long Index);
    [id(0x00000952)]
    HRESULT _stdcall IndexOfObjectFlowState([in] IUMLObjectFlowState* Value, [out, retval] long* Index);
    [id(0x00000953)]
    HRESULT _stdcall GetObjectFlowStateCount([out, retval] long* Value);
    [id(0x00000954)]
    HRESULT _stdcall GetObjectFlowStateAt([in] long Index, [out, retval] IUMLObjectFlowState** Value);
  };

  [
    uuid(F923C143-ECBB-4A42-8D3E-DEEF4329E5AD),
    version(1.0),
    helpstring("Dispatch interface for UMLPackage Object"),
    dual,
    oleautomation
  ]
  interface IUMLPackage: IUMLClassifier
  {
    [id(0x00000A00)]
    HRESULT _stdcall GetElementImportItemCount([out, retval] long* Value);
    [id(0x00000A01)]
    HRESULT _stdcall GetElementImportItemAt([in] long Index, [out, retval] IUMLElementImport** Value);
  };

  [
    uuid(1CDA6EA7-49F0-44AE-8BD1-E2FEFCBFFDAC),
    version(1.0),
    helpstring("Dispatch interface for UMLFeature Object"),
    dual,
    oleautomation
  ]
  interface IUMLFeature: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall OwnerScope([out, retval] UMLScopeKind* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall OwnerScope([in] UMLScopeKind Value);
    [id(0x00000701)]
    HRESULT _stdcall AddConnectorEnd([in] IUMLConnectorEnd* Value);
    [id(0x00000702)]
    HRESULT _stdcall RemoveConnectorEnd([in] IUMLConnectorEnd* Value);
    [id(0x00000703)]
    HRESULT _stdcall InsertConnectorEnd([in] long Index, [in] IUMLConnectorEnd* Value);
    [id(0x00000704)]
    HRESULT _stdcall DeleteConnectorEnd([in] long Index);
    [id(0x00000705)]
    HRESULT _stdcall IndexOfConnectorEnd([in] IUMLConnectorEnd* Value, [out, retval] long* Index);
    [id(0x00000706)]
    HRESULT _stdcall GetConnectorEndCount([out, retval] long* Value);
    [id(0x00000707)]
    HRESULT _stdcall GetConnectorEndAt([in] long Index, [out, retval] IUMLConnectorEnd** Value);
    [id(0x00000708)]
    HRESULT _stdcall AddClassifierRole([in] IUMLClassifierRole* Value);
    [id(0x00000709)]
    HRESULT _stdcall RemoveClassifierRole([in] IUMLClassifierRole* Value);
    [id(0x0000070A)]
    HRESULT _stdcall InsertClassifierRole([in] long Index, [in] IUMLClassifierRole* Value);
    [id(0x0000070B)]
    HRESULT _stdcall DeleteClassifierRole([in] long Index);
    [id(0x0000070C)]
    HRESULT _stdcall IndexOfClassifierRole([in] IUMLClassifierRole* Value, [out, retval] long* Index);
    [id(0x0000070D)]
    HRESULT _stdcall GetClassifierRoleCount([out, retval] long* Value);
    [id(0x0000070E)]
    HRESULT _stdcall GetClassifierRoleAt([in] long Index, [out, retval] IUMLClassifierRole** Value);
  };

  [
    uuid(C5E85290-40B3-4A32-B1B8-532D770704BE),
    version(1.0),
    helpstring("Dispatch interface for UMLBehavioralFeature Object"),
    dual,
    oleautomation
  ]
  interface IUMLBehavioralFeature: IUMLFeature
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall IsQuery([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall IsQuery([in] VARIANT_BOOL Value);
    [id(0x00000801)]
    HRESULT _stdcall GetParameterCount([out, retval] long* Value);
    [id(0x00000802)]
    HRESULT _stdcall GetParameterAt([in] long Index, [out, retval] IUMLParameter** Value);
    [id(0x00000803)]
    HRESULT _stdcall AddRaisedSignal([in] IUMLSignal* Value);
    [id(0x00000804)]
    HRESULT _stdcall RemoveRaisedSignal([in] IUMLSignal* Value);
    [id(0x00000805)]
    HRESULT _stdcall InsertRaisedSignal([in] long Index, [in] IUMLSignal* Value);
    [id(0x00000806)]
    HRESULT _stdcall DeleteRaisedSignal([in] long Index);
    [id(0x00000807)]
    HRESULT _stdcall IndexOfRaisedSignal([in] IUMLSignal* Value, [out, retval] long* Index);
    [id(0x00000808)]
    HRESULT _stdcall GetRaisedSignalCount([out, retval] long* Value);
    [id(0x00000809)]
    HRESULT _stdcall GetRaisedSignalAt([in] long Index, [out, retval] IUMLSignal** Value);
  };

  [
    uuid(C508DC95-1024-4CEA-B323-361B9E312BE3),
    version(1.0),
    helpstring("Dispatch interface for UMLOperation Object"),
    dual,
    oleautomation
  ]
  interface IUMLOperation: IUMLBehavioralFeature
  {
    [propget, id(0x00000900)]
    HRESULT _stdcall Concurrency([out, retval] UMLCallConcurrencyKind* Value);
    [propput, id(0x00000900)]
    HRESULT _stdcall Concurrency([in] UMLCallConcurrencyKind Value);
    [propget, id(0x00000901)]
    HRESULT _stdcall IsRoot([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000901)]
    HRESULT _stdcall IsRoot([in] VARIANT_BOOL Value);
    [propget, id(0x00000902)]
    HRESULT _stdcall IsLeaf([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000902)]
    HRESULT _stdcall IsLeaf([in] VARIANT_BOOL Value);
    [propget, id(0x00000903)]
    HRESULT _stdcall IsAbstract([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000903)]
    HRESULT _stdcall IsAbstract([in] VARIANT_BOOL Value);
    [propget, id(0x00000904)]
    HRESULT _stdcall Specification([out, retval] BSTR* Value);
    [propput, id(0x00000904)]
    HRESULT _stdcall Specification([in] BSTR Value);
    [propget, id(0x00000905)]
    HRESULT _stdcall Owner([out, retval] IUMLClassifier** Value);
    [id(0x00000906)]
    HRESULT _stdcall AddMethod([in] IUMLMethod* Value);
    [id(0x00000907)]
    HRESULT _stdcall RemoveMethod([in] IUMLMethod* Value);
    [id(0x00000908)]
    HRESULT _stdcall InsertMethod([in] long Index, [in] IUMLMethod* Value);
    [id(0x00000909)]
    HRESULT _stdcall DeleteMethod([in] long Index);
    [id(0x0000090A)]
    HRESULT _stdcall IndexOfMethod([in] IUMLMethod* Value, [out, retval] long* Index);
    [id(0x0000090B)]
    HRESULT _stdcall GetMethodCount([out, retval] long* Value);
    [id(0x0000090C)]
    HRESULT _stdcall GetMethodAt([in] long Index, [out, retval] IUMLMethod** Value);
    [id(0x0000090D)]
    HRESULT _stdcall AddCallAction([in] IUMLCallAction* Value);
    [id(0x0000090E)]
    HRESULT _stdcall RemoveCallAction([in] IUMLCallAction* Value);
    [id(0x0000090F)]
    HRESULT _stdcall InsertCallAction([in] long Index, [in] IUMLCallAction* Value);
    [id(0x00000910)]
    HRESULT _stdcall DeleteCallAction([in] long Index);
    [id(0x00000911)]
    HRESULT _stdcall IndexOfCallAction([in] IUMLCallAction* Value, [out, retval] long* Index);
    [id(0x00000912)]
    HRESULT _stdcall GetCallActionCount([out, retval] long* Value);
    [id(0x00000913)]
    HRESULT _stdcall GetCallActionAt([in] long Index, [out, retval] IUMLCallAction** Value);
    [id(0x00000914)]
    HRESULT _stdcall AddOccurrence([in] IUMLCallEvent* Value);
    [id(0x00000915)]
    HRESULT _stdcall RemoveOccurrence([in] IUMLCallEvent* Value);
    [id(0x00000916)]
    HRESULT _stdcall InsertOccurrence([in] long Index, [in] IUMLCallEvent* Value);
    [id(0x00000917)]
    HRESULT _stdcall DeleteOccurrence([in] long Index);
    [id(0x00000918)]
    HRESULT _stdcall IndexOfOccurrence([in] IUMLCallEvent* Value, [out, retval] long* Index);
    [id(0x00000919)]
    HRESULT _stdcall GetOccurrenceCount([out, retval] long* Value);
    [id(0x0000091A)]
    HRESULT _stdcall GetOccurrenceAt([in] long Index, [out, retval] IUMLCallEvent** Value);
    [id(0x0000091B)]
    HRESULT _stdcall GetOwnedCollaborationCount([out, retval] long* Value);
    [id(0x0000091C)]
    HRESULT _stdcall GetOwnedCollaborationAt([in] long Index, [out, retval] IUMLCollaboration** Value);
    [id(0x0000091D)]
    HRESULT _stdcall GetOwnedCollaborationInstanceSetCount([out, retval] long* Value);
    [id(0x0000091E)]
    HRESULT _stdcall GetOwnedCollaborationInstanceSetAt([in] long Index, [out, retval] IUMLCollaborationInstanceSet** Value);
  };

  [
    uuid(51938E6A-A23A-42E5-AA6E-32C2EDAC8F0A),
    version(1.0),
    helpstring("Dispatch interface for UMLConnectorEnd Object"),
    dual,
    oleautomation
  ]
  interface IUMLConnectorEnd: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Multiplicity([out, retval] BSTR* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall Multiplicity([in] BSTR Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall IsOrdered([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall IsOrdered([in] VARIANT_BOOL Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall IsUnique([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall IsUnique([in] VARIANT_BOOL Value);
    [propget, id(0x00000703)]
    HRESULT _stdcall Connector([out, retval] IUMLConnector** Value);
    [propput, id(0x00000703)]
    HRESULT _stdcall Connector([in] IUMLConnector* Value);
    [propget, id(0x00000704)]
    HRESULT _stdcall Role([out, retval] IUMLFeature** Value);
    [propput, id(0x00000704)]
    HRESULT _stdcall Role([in] IUMLFeature* Value);
  };

  [
    uuid(799E6EAD-6DF3-4EE1-A92F-0B28B552EB41),
    version(1.0),
    helpstring("Dispatch interface for UMLConnector Object"),
    dual,
    oleautomation
  ]
  interface IUMLConnector: IUMLFeature
  {
    [id(0x00000800)]
    HRESULT _stdcall AddEnd([in] IUMLConnectorEnd* Value);
    [id(0x00000801)]
    HRESULT _stdcall RemoveEnd([in] IUMLConnectorEnd* Value);
    [id(0x00000802)]
    HRESULT _stdcall InsertEnd([in] long Index, [in] IUMLConnectorEnd* Value);
    [id(0x00000803)]
    HRESULT _stdcall DeleteEnd([in] long Index);
    [id(0x00000804)]
    HRESULT _stdcall IndexOfEnd([in] IUMLConnectorEnd* Value, [out, retval] long* Index);
    [id(0x00000805)]
    HRESULT _stdcall GetEndCount([out, retval] long* Value);
    [id(0x00000806)]
    HRESULT _stdcall GetEndAt([in] long Index, [out, retval] IUMLConnectorEnd** Value);
    [propget, id(0x00000807)]
    HRESULT _stdcall Owner([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000807)]
    HRESULT _stdcall Owner([in] IUMLClassifier* Value);
  };

  [
    uuid(B1A4605A-72AF-4CBB-A5DD-B8517FA42560),
    version(1.0),
    helpstring("Dispatch interface for UMLClassifierRole Object"),
    dual,
    oleautomation
  ]
  interface IUMLClassifierRole: IUMLClassifier
  {
    [propget, id(0x00000A00)]
    HRESULT _stdcall Multiplicity([out, retval] BSTR* Value);
    [propput, id(0x00000A00)]
    HRESULT _stdcall Multiplicity([in] BSTR Value);
    [propget, id(0x00000A01)]
    HRESULT _stdcall Base([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000A01)]
    HRESULT _stdcall Base([in] IUMLClassifier* Value);
    [id(0x00000A02)]
    HRESULT _stdcall AddAvailableFeature([in] IUMLFeature* Value);
    [id(0x00000A03)]
    HRESULT _stdcall RemoveAvailableFeature([in] IUMLFeature* Value);
    [id(0x00000A04)]
    HRESULT _stdcall InsertAvailableFeature([in] long Index, [in] IUMLFeature* Value);
    [id(0x00000A05)]
    HRESULT _stdcall DeleteAvailableFeature([in] long Index);
    [id(0x00000A06)]
    HRESULT _stdcall IndexOfAvailableFeature([in] IUMLFeature* Value, [out, retval] long* Index);
    [id(0x00000A07)]
    HRESULT _stdcall GetAvailableFeatureCount([out, retval] long* Value);
    [id(0x00000A08)]
    HRESULT _stdcall GetAvailableFeatureAt([in] long Index, [out, retval] IUMLFeature** Value);
    [id(0x00000A09)]
    HRESULT _stdcall AddSenderClientMessage([in] IUMLMessage* Value);
    [id(0x00000A0A)]
    HRESULT _stdcall RemoveSenderClientMessage([in] IUMLMessage* Value);
    [id(0x00000A0B)]
    HRESULT _stdcall InsertSenderClientMessage([in] long Index, [in] IUMLMessage* Value);
    [id(0x00000A0C)]
    HRESULT _stdcall DeleteSenderClientMessage([in] long Index);
    [id(0x00000A0D)]
    HRESULT _stdcall IndexOfSenderClientMessage([in] IUMLMessage* Value, [out, retval] long* Index);
    [id(0x00000A0E)]
    HRESULT _stdcall GetSenderClientMessageCount([out, retval] long* Value);
    [id(0x00000A0F)]
    HRESULT _stdcall GetSenderClientMessageAt([in] long Index, [out, retval] IUMLMessage** Value);
    [id(0x00000A10)]
    HRESULT _stdcall AddReceiverClientMessage([in] IUMLMessage* Value);
    [id(0x00000A11)]
    HRESULT _stdcall RemoveReceiverClientMessage([in] IUMLMessage* Value);
    [id(0x00000A12)]
    HRESULT _stdcall InsertReceiverClientMessage([in] long Index, [in] IUMLMessage* Value);
    [id(0x00000A13)]
    HRESULT _stdcall DeleteReceiverClientMessage([in] long Index);
    [id(0x00000A14)]
    HRESULT _stdcall IndexOfReceiverClientMessage([in] IUMLMessage* Value, [out, retval] long* Index);
    [id(0x00000A15)]
    HRESULT _stdcall GetReceiverClientMessageCount([out, retval] long* Value);
    [id(0x00000A16)]
    HRESULT _stdcall GetReceiverClientMessageAt([in] long Index, [out, retval] IUMLMessage** Value);
    [id(0x00000A17)]
    HRESULT _stdcall AddAvailableContent([in] IUMLModelElement* Value);
    [id(0x00000A18)]
    HRESULT _stdcall RemoveAvailableContent([in] IUMLModelElement* Value);
    [id(0x00000A19)]
    HRESULT _stdcall InsertAvailableContent([in] long Index, [in] IUMLModelElement* Value);
    [id(0x00000A1A)]
    HRESULT _stdcall DeleteAvailableContent([in] long Index);
    [id(0x00000A1B)]
    HRESULT _stdcall IndexOfAvailableContent([in] IUMLModelElement* Value, [out, retval] long* Index);
    [id(0x00000A1C)]
    HRESULT _stdcall GetAvailableContentCount([out, retval] long* Value);
    [id(0x00000A1D)]
    HRESULT _stdcall GetAvailableContentAt([in] long Index, [out, retval] IUMLModelElement** Value);
    [id(0x00000A1E)]
    HRESULT _stdcall AddConformingInstance([in] IUMLInstance* Value);
    [id(0x00000A1F)]
    HRESULT _stdcall RemoveConformingInstance([in] IUMLInstance* Value);
    [id(0x00000A20)]
    HRESULT _stdcall InsertConformingInstance([in] long Index, [in] IUMLInstance* Value);
    [id(0x00000A21)]
    HRESULT _stdcall DeleteConformingInstance([in] long Index);
    [id(0x00000A22)]
    HRESULT _stdcall IndexOfConformingInstance([in] IUMLInstance* Value, [out, retval] long* Index);
    [id(0x00000A23)]
    HRESULT _stdcall GetConformingInstanceCount([out, retval] long* Value);
    [id(0x00000A24)]
    HRESULT _stdcall GetConformingInstanceAt([in] long Index, [out, retval] IUMLInstance** Value);
  };

  [
    uuid(14DE8C71-8C26-4529-8A8B-A73C739EB17A),
    version(1.0),
    helpstring("Dispatch interface for UMLMessage Object"),
    dual,
    oleautomation
  ]
  interface IUMLMessage: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Arguments([out, retval] BSTR* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall Arguments([in] BSTR Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall Return([out, retval] BSTR* Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall Return([in] BSTR Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall Iteration([out, retval] BSTR* Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall Iteration([in] BSTR Value);
    [propget, id(0x00000703)]
    HRESULT _stdcall Branch([out, retval] BSTR* Value);
    [propput, id(0x00000703)]
    HRESULT _stdcall Branch([in] BSTR Value);
    [propget, id(0x00000704)]
    HRESULT _stdcall Interaction([out, retval] IUMLInteraction** Value);
    [propget, id(0x00000705)]
    HRESULT _stdcall Activator([out, retval] IUMLMessage** Value);
    [propput, id(0x00000705)]
    HRESULT _stdcall Activator([in] IUMLMessage* Value);
    [id(0x00000706)]
    HRESULT _stdcall AddActivatee([in] IUMLMessage* Value);
    [id(0x00000707)]
    HRESULT _stdcall RemoveActivatee([in] IUMLMessage* Value);
    [id(0x00000708)]
    HRESULT _stdcall InsertActivatee([in] long Index, [in] IUMLMessage* Value);
    [id(0x00000709)]
    HRESULT _stdcall DeleteActivatee([in] long Index);
    [id(0x0000070A)]
    HRESULT _stdcall IndexOfActivatee([in] IUMLMessage* Value, [out, retval] long* Index);
    [id(0x0000070B)]
    HRESULT _stdcall GetActivateeCount([out, retval] long* Value);
    [id(0x0000070C)]
    HRESULT _stdcall GetActivateeAt([in] long Index, [out, retval] IUMLMessage** Value);
    [propget, id(0x0000070D)]
    HRESULT _stdcall Sender([out, retval] IUMLClassifierRole** Value);
    [propput, id(0x0000070D)]
    HRESULT _stdcall Sender([in] IUMLClassifierRole* Value);
    [propget, id(0x0000070E)]
    HRESULT _stdcall Receiver([out, retval] IUMLClassifierRole** Value);
    [propput, id(0x0000070E)]
    HRESULT _stdcall Receiver([in] IUMLClassifierRole* Value);
    [propget, id(0x0000070F)]
    HRESULT _stdcall Successor([out, retval] IUMLMessage** Value);
    [propput, id(0x0000070F)]
    HRESULT _stdcall Successor([in] IUMLMessage* Value);
    [propget, id(0x00000710)]
    HRESULT _stdcall Predecessor([out, retval] IUMLMessage** Value);
    [propput, id(0x00000710)]
    HRESULT _stdcall Predecessor([in] IUMLMessage* Value);
    [propget, id(0x00000711)]
    HRESULT _stdcall CommunicationConnection([out, retval] IUMLAssociationRole** Value);
    [propput, id(0x00000711)]
    HRESULT _stdcall CommunicationConnection([in] IUMLAssociationRole* Value);
    [propget, id(0x00000712)]
    HRESULT _stdcall Action([out, retval] IUMLAction** Value);
    [id(0x00000713)]
    HRESULT _stdcall AddConformingStimulus([in] IUMLStimulus* Value);
    [id(0x00000714)]
    HRESULT _stdcall RemoveConformingStimulus([in] IUMLStimulus* Value);
    [id(0x00000715)]
    HRESULT _stdcall InsertConformingStimulus([in] long Index, [in] IUMLStimulus* Value);
    [id(0x00000716)]
    HRESULT _stdcall DeleteConformingStimulus([in] long Index);
    [id(0x00000717)]
    HRESULT _stdcall IndexOfConformingStimulus([in] IUMLStimulus* Value, [out, retval] long* Index);
    [id(0x00000718)]
    HRESULT _stdcall GetConformingStimulusCount([out, retval] long* Value);
    [id(0x00000719)]
    HRESULT _stdcall GetConformingStimulusAt([in] long Index, [out, retval] IUMLStimulus** Value);
  };

  [
    uuid(E4ADFE54-34DF-493A-BC01-4F1E231102E5),
    version(1.0),
    helpstring("Dispatch interface for UMLInteraction Object"),
    dual,
    oleautomation
  ]
  interface IUMLInteraction: IUMLModelElement
  {
    [id(0x00000700)]
    HRESULT _stdcall GetMessageCount([out, retval] long* Value);
    [id(0x00000701)]
    HRESULT _stdcall GetMessageAt([in] long Index, [out, retval] IUMLMessage** Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall Context([out, retval] IUMLCollaboration** Value);
    [id(0x00000703)]
    HRESULT _stdcall AddInteractionInstanceSet([in] IUMLInteractionInstanceSet* Value);
    [id(0x00000704)]
    HRESULT _stdcall RemoveInteractionInstanceSet([in] IUMLInteractionInstanceSet* Value);
    [id(0x00000705)]
    HRESULT _stdcall InsertInteractionInstanceSet([in] long Index, [in] IUMLInteractionInstanceSet* Value);
    [id(0x00000706)]
    HRESULT _stdcall DeleteInteractionInstanceSet([in] long Index);
    [id(0x00000707)]
    HRESULT _stdcall IndexOfInteractionInstanceSet([in] IUMLInteractionInstanceSet* Value, [out, retval] long* Index);
    [id(0x00000708)]
    HRESULT _stdcall GetInteractionInstanceSetCount([out, retval] long* Value);
    [id(0x00000709)]
    HRESULT _stdcall GetInteractionInstanceSetAt([in] long Index, [out, retval] IUMLInteractionInstanceSet** Value);
    [id(0x0000070A)]
    HRESULT _stdcall AddFragment([in] IUMLInteractionFragment* Value);
    [id(0x0000070B)]
    HRESULT _stdcall RemoveFragment([in] IUMLInteractionFragment* Value);
    [id(0x0000070C)]
    HRESULT _stdcall InsertFragment([in] long Index, [in] IUMLInteractionFragment* Value);
    [id(0x0000070D)]
    HRESULT _stdcall DeleteFragment([in] long Index);
    [id(0x0000070E)]
    HRESULT _stdcall IndexOfFragment([in] IUMLInteractionFragment* Value, [out, retval] long* Index);
    [id(0x0000070F)]
    HRESULT _stdcall GetFragmentCount([out, retval] long* Value);
    [id(0x00000710)]
    HRESULT _stdcall GetFragmentAt([in] long Index, [out, retval] IUMLInteractionFragment** Value);
  };

  [
    uuid(C0C21B09-C5CB-4458-AD3C-F02A374885AC),
    version(1.0),
    helpstring("Dispatch interface for UMLCollaboration Object"),
    dual,
    oleautomation
  ]
  interface IUMLCollaboration: IUMLNamespace
  {
    [id(0x00000900)]
    HRESULT _stdcall GetInteractionCount([out, retval] long* Value);
    [id(0x00000901)]
    HRESULT _stdcall GetInteractionAt([in] long Index, [out, retval] IUMLInteraction** Value);
    [propget, id(0x00000902)]
    HRESULT _stdcall RepresentedOperation([out, retval] IUMLOperation** Value);
    [id(0x00000903)]
    HRESULT _stdcall AddCollaborationInstanceSet([in] IUMLCollaborationInstanceSet* Value);
    [id(0x00000904)]
    HRESULT _stdcall RemoveCollaborationInstanceSet([in] IUMLCollaborationInstanceSet* Value);
    [id(0x00000905)]
    HRESULT _stdcall InsertCollaborationInstanceSet([in] long Index, [in] IUMLCollaborationInstanceSet* Value);
    [id(0x00000906)]
    HRESULT _stdcall DeleteCollaborationInstanceSet([in] long Index);
    [id(0x00000907)]
    HRESULT _stdcall IndexOfCollaborationInstanceSet([in] IUMLCollaborationInstanceSet* Value, [out, retval] long* Index);
    [id(0x00000908)]
    HRESULT _stdcall GetCollaborationInstanceSetCount([out, retval] long* Value);
    [id(0x00000909)]
    HRESULT _stdcall GetCollaborationInstanceSetAt([in] long Index, [out, retval] IUMLCollaborationInstanceSet** Value);
    [id(0x0000090A)]
    HRESULT _stdcall AddUserCollaboration([in] IUMLCollaboration* Value);
    [id(0x0000090B)]
    HRESULT _stdcall RemoveUserCollaboration([in] IUMLCollaboration* Value);
    [id(0x0000090C)]
    HRESULT _stdcall InsertUserCollaboration([in] long Index, [in] IUMLCollaboration* Value);
    [id(0x0000090D)]
    HRESULT _stdcall DeleteUserCollaboration([in] long Index);
    [id(0x0000090E)]
    HRESULT _stdcall IndexOfUserCollaboration([in] IUMLCollaboration* Value, [out, retval] long* Index);
    [id(0x0000090F)]
    HRESULT _stdcall GetUserCollaborationCount([out, retval] long* Value);
    [id(0x00000910)]
    HRESULT _stdcall GetUserCollaborationAt([in] long Index, [out, retval] IUMLCollaboration** Value);
    [id(0x00000911)]
    HRESULT _stdcall AddUsedCollaboration([in] IUMLCollaboration* Value);
    [id(0x00000912)]
    HRESULT _stdcall RemoveUsedCollaboration([in] IUMLCollaboration* Value);
    [id(0x00000913)]
    HRESULT _stdcall InsertUsedCollaboration([in] long Index, [in] IUMLCollaboration* Value);
    [id(0x00000914)]
    HRESULT _stdcall DeleteUsedCollaboration([in] long Index);
    [id(0x00000915)]
    HRESULT _stdcall IndexOfUsedCollaboration([in] IUMLCollaboration* Value, [out, retval] long* Index);
    [id(0x00000916)]
    HRESULT _stdcall GetUsedCollaborationCount([out, retval] long* Value);
    [id(0x00000917)]
    HRESULT _stdcall GetUsedCollaborationAt([in] long Index, [out, retval] IUMLCollaboration** Value);
    [propget, id(0x00000918)]
    HRESULT _stdcall RepresentedClassifier([out, retval] IUMLClassifier** Value);
  };

  [
    uuid(7674CA41-A8C2-4E4D-A8F8-3020BE68ACAC),
    version(1.0),
    helpstring("Dispatch interface for UMLCollaborationInstanceSet Object"),
    dual,
    oleautomation
  ]
  interface IUMLCollaborationInstanceSet: IUMLModelElement
  {
    [id(0x00000700)]
    HRESULT _stdcall GetInteractionInstanceSetCount([out, retval] long* Value);
    [id(0x00000701)]
    HRESULT _stdcall GetInteractionInstanceSetAt([in] long Index, [out, retval] IUMLInteractionInstanceSet** Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall Collaboration([out, retval] IUMLCollaboration** Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall Collaboration([in] IUMLCollaboration* Value);
    [id(0x00000703)]
    HRESULT _stdcall GetParticipatingInstanceCount([out, retval] long* Value);
    [id(0x00000704)]
    HRESULT _stdcall GetParticipatingInstanceAt([in] long Index, [out, retval] IUMLInstance** Value);
    [id(0x00000705)]
    HRESULT _stdcall GetParticipatingLinkCount([out, retval] long* Value);
    [id(0x00000706)]
    HRESULT _stdcall GetParticipatingLinkAt([in] long Index, [out, retval] IUMLLink** Value);
    [propget, id(0x00000707)]
    HRESULT _stdcall RepresentedOperation([out, retval] IUMLOperation** Value);
    [propget, id(0x00000708)]
    HRESULT _stdcall RepresentedClassifier([out, retval] IUMLClassifier** Value);
  };

  [
    uuid(EE60A99D-8959-404E-8DB2-C36F2995BF7D),
    version(1.0),
    helpstring("Dispatch interface for UMLInteractionInstanceSet Object"),
    dual,
    oleautomation
  ]
  interface IUMLInteractionInstanceSet: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Context([out, retval] IUMLCollaborationInstanceSet** Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall Interaction([out, retval] IUMLInteraction** Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall Interaction([in] IUMLInteraction* Value);
    [id(0x00000702)]
    HRESULT _stdcall GetParticipatingStimulusCount([out, retval] long* Value);
    [id(0x00000703)]
    HRESULT _stdcall GetParticipatingStimulusAt([in] long Index, [out, retval] IUMLStimulus** Value);
    [id(0x00000704)]
    HRESULT _stdcall AddFragment([in] IUMLInteractionFragment* Value);
    [id(0x00000705)]
    HRESULT _stdcall RemoveFragment([in] IUMLInteractionFragment* Value);
    [id(0x00000706)]
    HRESULT _stdcall InsertFragment([in] long Index, [in] IUMLInteractionFragment* Value);
    [id(0x00000707)]
    HRESULT _stdcall DeleteFragment([in] long Index);
    [id(0x00000708)]
    HRESULT _stdcall IndexOfFragment([in] IUMLInteractionFragment* Value, [out, retval] long* Index);
    [id(0x00000709)]
    HRESULT _stdcall GetFragmentCount([out, retval] long* Value);
    [id(0x0000070A)]
    HRESULT _stdcall GetFragmentAt([in] long Index, [out, retval] IUMLInteractionFragment** Value);
  };

  [
    uuid(65D8CC5D-74F5-48AD-86C3-B637DA8957A8),
    version(1.0),
    helpstring("Dispatch interface for UMLStimulus Object"),
    dual,
    oleautomation
  ]
  interface IUMLStimulus: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Arguments([out, retval] BSTR* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall Arguments([in] BSTR Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall Return([out, retval] BSTR* Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall Return([in] BSTR Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall Iteration([out, retval] BSTR* Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall Iteration([in] BSTR Value);
    [propget, id(0x00000703)]
    HRESULT _stdcall Branch([out, retval] BSTR* Value);
    [propput, id(0x00000703)]
    HRESULT _stdcall Branch([in] BSTR Value);
    [propget, id(0x00000704)]
    HRESULT _stdcall Sender([out, retval] IUMLInstance** Value);
    [propput, id(0x00000704)]
    HRESULT _stdcall Sender([in] IUMLInstance* Value);
    [propget, id(0x00000705)]
    HRESULT _stdcall Receiver([out, retval] IUMLInstance** Value);
    [propput, id(0x00000705)]
    HRESULT _stdcall Receiver([in] IUMLInstance* Value);
    [propget, id(0x00000706)]
    HRESULT _stdcall CommunicationLink([out, retval] IUMLLink** Value);
    [propput, id(0x00000706)]
    HRESULT _stdcall CommunicationLink([in] IUMLLink* Value);
    [propget, id(0x00000707)]
    HRESULT _stdcall Action([out, retval] IUMLAction** Value);
    [propget, id(0x00000708)]
    HRESULT _stdcall Activator([out, retval] IUMLStimulus** Value);
    [propput, id(0x00000708)]
    HRESULT _stdcall Activator([in] IUMLStimulus* Value);
    [id(0x00000709)]
    HRESULT _stdcall AddActivatee([in] IUMLStimulus* Value);
    [id(0x0000070A)]
    HRESULT _stdcall RemoveActivatee([in] IUMLStimulus* Value);
    [id(0x0000070B)]
    HRESULT _stdcall InsertActivatee([in] long Index, [in] IUMLStimulus* Value);
    [id(0x0000070C)]
    HRESULT _stdcall DeleteActivatee([in] long Index);
    [id(0x0000070D)]
    HRESULT _stdcall IndexOfActivatee([in] IUMLStimulus* Value, [out, retval] long* Index);
    [id(0x0000070E)]
    HRESULT _stdcall GetActivateeCount([out, retval] long* Value);
    [id(0x0000070F)]
    HRESULT _stdcall GetActivateeAt([in] long Index, [out, retval] IUMLStimulus** Value);
    [propget, id(0x00000710)]
    HRESULT _stdcall Predecessor([out, retval] IUMLStimulus** Value);
    [propput, id(0x00000710)]
    HRESULT _stdcall Predecessor([in] IUMLStimulus* Value);
    [propget, id(0x00000711)]
    HRESULT _stdcall Successor([out, retval] IUMLStimulus** Value);
    [propput, id(0x00000711)]
    HRESULT _stdcall Successor([in] IUMLStimulus* Value);
    [id(0x00000712)]
    HRESULT _stdcall AddPlayedRole([in] IUMLMessage* Value);
    [id(0x00000713)]
    HRESULT _stdcall RemovePlayedRole([in] IUMLMessage* Value);
    [id(0x00000714)]
    HRESULT _stdcall InsertPlayedRole([in] long Index, [in] IUMLMessage* Value);
    [id(0x00000715)]
    HRESULT _stdcall DeletePlayedRole([in] long Index);
    [id(0x00000716)]
    HRESULT _stdcall IndexOfPlayedRole([in] IUMLMessage* Value, [out, retval] long* Index);
    [id(0x00000717)]
    HRESULT _stdcall GetPlayedRoleCount([out, retval] long* Value);
    [id(0x00000718)]
    HRESULT _stdcall GetPlayedRoleAt([in] long Index, [out, retval] IUMLMessage** Value);
    [propget, id(0x00000719)]
    HRESULT _stdcall InteractionInstanceSet([out, retval] IUMLInteractionInstanceSet** Value);
  };

  [
    uuid(1580EAFB-7216-4225-850F-4D541E26E51E),
    version(1.0),
    helpstring("Dispatch interface for UMLInstance Object"),
    dual,
    oleautomation
  ]
  interface IUMLInstance: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall IsMultiInstance([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall IsMultiInstance([in] VARIANT_BOOL Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall Classifier([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall Classifier([in] IUMLClassifier* Value);
    [id(0x00000702)]
    HRESULT _stdcall AddAttributeLink([in] IUMLAttributeLink* Value);
    [id(0x00000703)]
    HRESULT _stdcall RemoveAttributeLink([in] IUMLAttributeLink* Value);
    [id(0x00000704)]
    HRESULT _stdcall InsertAttributeLink([in] long Index, [in] IUMLAttributeLink* Value);
    [id(0x00000705)]
    HRESULT _stdcall DeleteAttributeLink([in] long Index);
    [id(0x00000706)]
    HRESULT _stdcall IndexOfAttributeLink([in] IUMLAttributeLink* Value, [out, retval] long* Index);
    [id(0x00000707)]
    HRESULT _stdcall GetAttributeLinkCount([out, retval] long* Value);
    [id(0x00000708)]
    HRESULT _stdcall GetAttributeLinkAt([in] long Index, [out, retval] IUMLAttributeLink** Value);
    [id(0x00000709)]
    HRESULT _stdcall AddLinkEnd([in] IUMLLinkEnd* Value);
    [id(0x0000070A)]
    HRESULT _stdcall RemoveLinkEnd([in] IUMLLinkEnd* Value);
    [id(0x0000070B)]
    HRESULT _stdcall InsertLinkEnd([in] long Index, [in] IUMLLinkEnd* Value);
    [id(0x0000070C)]
    HRESULT _stdcall DeleteLinkEnd([in] long Index);
    [id(0x0000070D)]
    HRESULT _stdcall IndexOfLinkEnd([in] IUMLLinkEnd* Value, [out, retval] long* Index);
    [id(0x0000070E)]
    HRESULT _stdcall GetLinkEndCount([out, retval] long* Value);
    [id(0x0000070F)]
    HRESULT _stdcall GetLinkEndAt([in] long Index, [out, retval] IUMLLinkEnd** Value);
    [id(0x00000710)]
    HRESULT _stdcall GetSlotCount([out, retval] long* Value);
    [id(0x00000711)]
    HRESULT _stdcall GetSlotAt([in] long Index, [out, retval] IUMLAttributeLink** Value);
    [id(0x00000712)]
    HRESULT _stdcall AddSendingStimulus([in] IUMLStimulus* Value);
    [id(0x00000713)]
    HRESULT _stdcall RemoveSendingStimulus([in] IUMLStimulus* Value);
    [id(0x00000714)]
    HRESULT _stdcall InsertSendingStimulus([in] long Index, [in] IUMLStimulus* Value);
    [id(0x00000715)]
    HRESULT _stdcall DeleteSendingStimulus([in] long Index);
    [id(0x00000716)]
    HRESULT _stdcall IndexOfSendingStimulus([in] IUMLStimulus* Value, [out, retval] long* Index);
    [id(0x00000717)]
    HRESULT _stdcall GetSendingStimulusCount([out, retval] long* Value);
    [id(0x00000718)]
    HRESULT _stdcall GetSendingStimulusAt([in] long Index, [out, retval] IUMLStimulus** Value);
    [propget, id(0x00000719)]
    HRESULT _stdcall ComponentInstance([out, retval] IUMLComponentInstance** Value);
    [propput, id(0x00000719)]
    HRESULT _stdcall ComponentInstance([in] IUMLComponentInstance* Value);
    [id(0x0000071A)]
    HRESULT _stdcall AddReceivingStimulus([in] IUMLStimulus* Value);
    [id(0x0000071B)]
    HRESULT _stdcall RemoveReceivingStimulus([in] IUMLStimulus* Value);
    [id(0x0000071C)]
    HRESULT _stdcall InsertReceivingStimulus([in] long Index, [in] IUMLStimulus* Value);
    [id(0x0000071D)]
    HRESULT _stdcall DeleteReceivingStimulus([in] long Index);
    [id(0x0000071E)]
    HRESULT _stdcall IndexOfReceivingStimulus([in] IUMLStimulus* Value, [out, retval] long* Index);
    [id(0x0000071F)]
    HRESULT _stdcall GetReceivingStimulusCount([out, retval] long* Value);
    [id(0x00000720)]
    HRESULT _stdcall GetReceivingStimulusAt([in] long Index, [out, retval] IUMLStimulus** Value);
    [propget, id(0x00000721)]
    HRESULT _stdcall Owner([out, retval] IUMLInstance** Value);
    [id(0x00000722)]
    HRESULT _stdcall GetOwnedInstanceCount([out, retval] long* Value);
    [id(0x00000723)]
    HRESULT _stdcall GetOwnedInstanceAt([in] long Index, [out, retval] IUMLInstance** Value);
    [id(0x00000724)]
    HRESULT _stdcall GetOwnedLinkCount([out, retval] long* Value);
    [id(0x00000725)]
    HRESULT _stdcall GetOwnedLinkAt([in] long Index, [out, retval] IUMLLink** Value);
    [id(0x00000726)]
    HRESULT _stdcall AddPlayedRole([in] IUMLClassifierRole* Value);
    [id(0x00000727)]
    HRESULT _stdcall RemovePlayedRole([in] IUMLClassifierRole* Value);
    [id(0x00000728)]
    HRESULT _stdcall InsertPlayedRole([in] long Index, [in] IUMLClassifierRole* Value);
    [id(0x00000729)]
    HRESULT _stdcall DeletePlayedRole([in] long Index);
    [id(0x0000072A)]
    HRESULT _stdcall IndexOfPlayedRole([in] IUMLClassifierRole* Value, [out, retval] long* Index);
    [id(0x0000072B)]
    HRESULT _stdcall GetPlayedRoleCount([out, retval] long* Value);
    [id(0x0000072C)]
    HRESULT _stdcall GetPlayedRoleAt([in] long Index, [out, retval] IUMLClassifierRole** Value);
    [propget, id(0x0000072D)]
    HRESULT _stdcall CollaborationInstanceSet([out, retval] IUMLCollaborationInstanceSet** Value);
  };

  [
    uuid(D9A0B25A-8AFC-4859-886A-49E13A141A7D),
    version(1.0),
    helpstring("Dispatch interface for UMLAttributeLink Object"),
    dual,
    oleautomation
  ]
  interface IUMLAttributeLink: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall ValueExpression([out, retval] BSTR* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall ValueExpression([in] BSTR Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall Attribute([out, retval] IUMLAttribute** Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall Attribute([in] IUMLAttribute* Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall Value_([out, retval] IUMLInstance** Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall Value_([in] IUMLInstance* Value);
    [propget, id(0x00000703)]
    HRESULT _stdcall Instance([out, retval] IUMLInstance** Value);
    [propget, id(0x00000704)]
    HRESULT _stdcall LinkEnd([out, retval] IUMLLinkEnd** Value);
  };

  [
    uuid(7B1583DC-5828-478E-B858-C29B8C757C73),
    version(1.0),
    helpstring("Dispatch interface for UMLStructuralFeature Object"),
    dual,
    oleautomation
  ]
  interface IUMLStructuralFeature: IUMLFeature
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Multiplicity([out, retval] BSTR* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Multiplicity([in] BSTR Value);
    [propget, id(0x00000801)]
    HRESULT _stdcall Changeability([out, retval] UMLChangeableKind* Value);
    [propput, id(0x00000801)]
    HRESULT _stdcall Changeability([in] UMLChangeableKind Value);
    [propget, id(0x00000802)]
    HRESULT _stdcall TargetScope([out, retval] UMLScopeKind* Value);
    [propput, id(0x00000802)]
    HRESULT _stdcall TargetScope([in] UMLScopeKind Value);
    [propget, id(0x00000803)]
    HRESULT _stdcall Ordering([out, retval] UMLOrderingKind* Value);
    [propput, id(0x00000803)]
    HRESULT _stdcall Ordering([in] UMLOrderingKind Value);
    [propget, id(0x00000804)]
    HRESULT _stdcall TypeExpression([out, retval] BSTR* Value);
    [propput, id(0x00000804)]
    HRESULT _stdcall TypeExpression([in] BSTR Value);
    [propget, id(0x00000805)]
    HRESULT _stdcall Type_([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000805)]
    HRESULT _stdcall Type_([in] IUMLClassifier* Value);
    [id(0x00000806)]
    HRESULT _stdcall SetType([in] IUMLClassifier* Value);
    [id(0x00000807)]
    HRESULT _stdcall SetType2([in] BSTR Value);
  };

  [
    uuid(643383DF-A403-4302-9E25-7C87345BFC15),
    version(1.0),
    helpstring("Dispatch interface for UMLAttribute Object"),
    dual,
    oleautomation
  ]
  interface IUMLAttribute: IUMLStructuralFeature
  {
    [propget, id(0x00000900)]
    HRESULT _stdcall InitialValue([out, retval] BSTR* Value);
    [propput, id(0x00000900)]
    HRESULT _stdcall InitialValue([in] BSTR Value);
    [propget, id(0x00000901)]
    HRESULT _stdcall AssociationEnd([out, retval] IUMLAssociationEnd** Value);
    [propget, id(0x00000902)]
    HRESULT _stdcall Owner([out, retval] IUMLClassifier** Value);
    [id(0x00000903)]
    HRESULT _stdcall AddAttributeLink([in] IUMLAttributeLink* Value);
    [id(0x00000904)]
    HRESULT _stdcall RemoveAttributeLink([in] IUMLAttributeLink* Value);
    [id(0x00000905)]
    HRESULT _stdcall InsertAttributeLink([in] long Index, [in] IUMLAttributeLink* Value);
    [id(0x00000906)]
    HRESULT _stdcall DeleteAttributeLink([in] long Index);
    [id(0x00000907)]
    HRESULT _stdcall IndexOfAttributeLink([in] IUMLAttributeLink* Value, [out, retval] long* Index);
    [id(0x00000908)]
    HRESULT _stdcall GetAttributeLinkCount([out, retval] long* Value);
    [id(0x00000909)]
    HRESULT _stdcall GetAttributeLinkAt([in] long Index, [out, retval] IUMLAttributeLink** Value);
    [id(0x0000090A)]
    HRESULT _stdcall AddAssociationEndRole([in] IUMLAssociationEndRole* Value);
    [id(0x0000090B)]
    HRESULT _stdcall RemoveAssociationEndRole([in] IUMLAssociationEndRole* Value);
    [id(0x0000090C)]
    HRESULT _stdcall InsertAssociationEndRole([in] long Index, [in] IUMLAssociationEndRole* Value);
    [id(0x0000090D)]
    HRESULT _stdcall DeleteAssociationEndRole([in] long Index);
    [id(0x0000090E)]
    HRESULT _stdcall IndexOfAssociationEndRole([in] IUMLAssociationEndRole* Value, [out, retval] long* Index);
    [id(0x0000090F)]
    HRESULT _stdcall GetAssociationEndRoleCount([out, retval] long* Value);
    [id(0x00000910)]
    HRESULT _stdcall GetAssociationEndRoleAt([in] long Index, [out, retval] IUMLAssociationEndRole** Value);
  };

  [
    uuid(4E8DD247-A056-4E45-93DD-A7C6B690FDDE),
    version(1.0),
    helpstring("Dispatch interface for UMLAssociationEnd Object"),
    dual,
    oleautomation
  ]
  interface IUMLAssociationEnd: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall IsNavigable([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall IsNavigable([in] VARIANT_BOOL Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall Ordering([out, retval] UMLOrderingKind* Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall Ordering([in] UMLOrderingKind Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall Aggregation([out, retval] UMLAggregationKind* Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall Aggregation([in] UMLAggregationKind Value);
    [propget, id(0x00000703)]
    HRESULT _stdcall TargetScope([out, retval] UMLScopeKind* Value);
    [propput, id(0x00000703)]
    HRESULT _stdcall TargetScope([in] UMLScopeKind Value);
    [propget, id(0x00000704)]
    HRESULT _stdcall Multiplicity([out, retval] BSTR* Value);
    [propput, id(0x00000704)]
    HRESULT _stdcall Multiplicity([in] BSTR Value);
    [propget, id(0x00000705)]
    HRESULT _stdcall Changeability([out, retval] UMLChangeableKind* Value);
    [propput, id(0x00000705)]
    HRESULT _stdcall Changeability([in] UMLChangeableKind Value);
    [propget, id(0x00000706)]
    HRESULT _stdcall Association([out, retval] IUMLAssociation** Value);
    [id(0x00000707)]
    HRESULT _stdcall GetQualifierCount([out, retval] long* Value);
    [id(0x00000708)]
    HRESULT _stdcall GetQualifierAt([in] long Index, [out, retval] IUMLAttribute** Value);
    [propget, id(0x00000709)]
    HRESULT _stdcall Participant([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000709)]
    HRESULT _stdcall Participant([in] IUMLClassifier* Value);
    [id(0x0000070A)]
    HRESULT _stdcall AddLinkEnd([in] IUMLLinkEnd* Value);
    [id(0x0000070B)]
    HRESULT _stdcall RemoveLinkEnd([in] IUMLLinkEnd* Value);
    [id(0x0000070C)]
    HRESULT _stdcall InsertLinkEnd([in] long Index, [in] IUMLLinkEnd* Value);
    [id(0x0000070D)]
    HRESULT _stdcall DeleteLinkEnd([in] long Index);
    [id(0x0000070E)]
    HRESULT _stdcall IndexOfLinkEnd([in] IUMLLinkEnd* Value, [out, retval] long* Index);
    [id(0x0000070F)]
    HRESULT _stdcall GetLinkEndCount([out, retval] long* Value);
    [id(0x00000710)]
    HRESULT _stdcall GetLinkEndAt([in] long Index, [out, retval] IUMLLinkEnd** Value);
    [id(0x00000711)]
    HRESULT _stdcall AddAssociationEndRole([in] IUMLAssociationEndRole* Value);
    [id(0x00000712)]
    HRESULT _stdcall RemoveAssociationEndRole([in] IUMLAssociationEndRole* Value);
    [id(0x00000713)]
    HRESULT _stdcall InsertAssociationEndRole([in] long Index, [in] IUMLAssociationEndRole* Value);
    [id(0x00000714)]
    HRESULT _stdcall DeleteAssociationEndRole([in] long Index);
    [id(0x00000715)]
    HRESULT _stdcall IndexOfAssociationEndRole([in] IUMLAssociationEndRole* Value, [out, retval] long* Index);
    [id(0x00000716)]
    HRESULT _stdcall GetAssociationEndRoleCount([out, retval] long* Value);
    [id(0x00000717)]
    HRESULT _stdcall GetAssociationEndRoleAt([in] long Index, [out, retval] IUMLAssociationEndRole** Value);
    [id(0x00000718)]
    HRESULT _stdcall GetOtherSide([out, retval] IUMLAssociationEnd** ReturnValue);
  };

  [
    uuid(773D89C5-95B9-462F-90AF-664034D5FE6B),
    version(1.0),
    helpstring("Dispatch interface for UMLRelationship Object"),
    dual,
    oleautomation
  ]
  interface IUMLRelationship: IUMLModelElement
  {
  };

  [
    uuid(C03687D2-3FAA-410A-BD9D-9EB885B27DC3),
    version(1.0),
    helpstring("Dispatch interface for UMLAssociation Object"),
    dual,
    oleautomation
  ]
  interface IUMLAssociation: IUMLRelationship
  {
    [id(0x00000800)]
    HRESULT _stdcall GetConnectionCount([out, retval] long* Value);
    [id(0x00000801)]
    HRESULT _stdcall GetConnectionAt([in] long Index, [out, retval] IUMLAssociationEnd** Value);
    [propget, id(0x00000802)]
    HRESULT _stdcall AssociationClass([out, retval] IUMLAssociationClass** Value);
    [propput, id(0x00000802)]
    HRESULT _stdcall AssociationClass([in] IUMLAssociationClass* Value);
    [id(0x00000803)]
    HRESULT _stdcall AddLink([in] IUMLLink* Value);
    [id(0x00000804)]
    HRESULT _stdcall RemoveLink([in] IUMLLink* Value);
    [id(0x00000805)]
    HRESULT _stdcall InsertLink([in] long Index, [in] IUMLLink* Value);
    [id(0x00000806)]
    HRESULT _stdcall DeleteLink([in] long Index);
    [id(0x00000807)]
    HRESULT _stdcall IndexOfLink([in] IUMLLink* Value, [out, retval] long* Index);
    [id(0x00000808)]
    HRESULT _stdcall GetLinkCount([out, retval] long* Value);
    [id(0x00000809)]
    HRESULT _stdcall GetLinkAt([in] long Index, [out, retval] IUMLLink** Value);
    [id(0x0000080A)]
    HRESULT _stdcall AddAssociationRole([in] IUMLAssociationRole* Value);
    [id(0x0000080B)]
    HRESULT _stdcall RemoveAssociationRole([in] IUMLAssociationRole* Value);
    [id(0x0000080C)]
    HRESULT _stdcall InsertAssociationRole([in] long Index, [in] IUMLAssociationRole* Value);
    [id(0x0000080D)]
    HRESULT _stdcall DeleteAssociationRole([in] long Index);
    [id(0x0000080E)]
    HRESULT _stdcall IndexOfAssociationRole([in] IUMLAssociationRole* Value, [out, retval] long* Index);
    [id(0x0000080F)]
    HRESULT _stdcall GetAssociationRoleCount([out, retval] long* Value);
    [id(0x00000810)]
    HRESULT _stdcall GetAssociationRoleAt([in] long Index, [out, retval] IUMLAssociationRole** Value);
  };

  [
    uuid(DB772E46-B35C-4DAA-B63D-FD941ED2A45A),
    version(1.0),
    helpstring("Dispatch interface for UMLAssociationClass Object"),
    dual,
    oleautomation
  ]
  interface IUMLAssociationClass: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall ClassSide([out, retval] IUMLClass** Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall ClassSide([in] IUMLClass* Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall AssociationSide([out, retval] IUMLAssociation** Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall AssociationSide([in] IUMLAssociation* Value);
  };

  [
    uuid(431370B2-5084-4DF9-A195-A45B140CA708),
    version(1.0),
    helpstring("Dispatch interface for UMLClass Object"),
    dual,
    oleautomation
  ]
  interface IUMLClass: IUMLClassifier
  {
    [propget, id(0x00000A00)]
    HRESULT _stdcall IsActive([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000A00)]
    HRESULT _stdcall IsActive([in] VARIANT_BOOL Value);
    [propget, id(0x00000A01)]
    HRESULT _stdcall AssociationClass([out, retval] IUMLAssociationClass** Value);
    [propput, id(0x00000A01)]
    HRESULT _stdcall AssociationClass([in] IUMLAssociationClass* Value);
  };

  [
    uuid(9136547D-454B-4D41-9C19-EDBC5EB125B9),
    version(1.0),
    helpstring("Dispatch interface for UMLLink Object"),
    dual,
    oleautomation
  ]
  interface IUMLLink: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Association([out, retval] IUMLAssociation** Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall Association([in] IUMLAssociation* Value);
    [id(0x00000701)]
    HRESULT _stdcall GetConnectionCount([out, retval] long* Value);
    [id(0x00000702)]
    HRESULT _stdcall GetConnectionAt([in] long Index, [out, retval] IUMLLinkEnd** Value);
    [id(0x00000703)]
    HRESULT _stdcall AddStimulus([in] IUMLStimulus* Value);
    [id(0x00000704)]
    HRESULT _stdcall RemoveStimulus([in] IUMLStimulus* Value);
    [id(0x00000705)]
    HRESULT _stdcall InsertStimulus([in] long Index, [in] IUMLStimulus* Value);
    [id(0x00000706)]
    HRESULT _stdcall DeleteStimulus([in] long Index);
    [id(0x00000707)]
    HRESULT _stdcall IndexOfStimulus([in] IUMLStimulus* Value, [out, retval] long* Index);
    [id(0x00000708)]
    HRESULT _stdcall GetStimulusCount([out, retval] long* Value);
    [id(0x00000709)]
    HRESULT _stdcall GetStimulusAt([in] long Index, [out, retval] IUMLStimulus** Value);
    [propget, id(0x0000070A)]
    HRESULT _stdcall Owner([out, retval] IUMLInstance** Value);
    [propget, id(0x0000070B)]
    HRESULT _stdcall LinkObject([out, retval] IUMLLinkObject** Value);
    [propput, id(0x0000070B)]
    HRESULT _stdcall LinkObject([in] IUMLLinkObject* Value);
    [id(0x0000070C)]
    HRESULT _stdcall AddPlayedRole([in] IUMLAssociationRole* Value);
    [id(0x0000070D)]
    HRESULT _stdcall RemovePlayedRole([in] IUMLAssociationRole* Value);
    [id(0x0000070E)]
    HRESULT _stdcall InsertPlayedRole([in] long Index, [in] IUMLAssociationRole* Value);
    [id(0x0000070F)]
    HRESULT _stdcall DeletePlayedRole([in] long Index);
    [id(0x00000710)]
    HRESULT _stdcall IndexOfPlayedRole([in] IUMLAssociationRole* Value, [out, retval] long* Index);
    [id(0x00000711)]
    HRESULT _stdcall GetPlayedRoleCount([out, retval] long* Value);
    [id(0x00000712)]
    HRESULT _stdcall GetPlayedRoleAt([in] long Index, [out, retval] IUMLAssociationRole** Value);
    [propget, id(0x00000713)]
    HRESULT _stdcall CollaborationInstanceSet([out, retval] IUMLCollaborationInstanceSet** Value);
  };

  [
    uuid(BCC69267-5D2C-4D7D-8179-C7836838B9F4),
    version(1.0),
    helpstring("Dispatch interface for UMLLinkEnd Object"),
    dual,
    oleautomation
  ]
  interface IUMLLinkEnd: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Instance([out, retval] IUMLInstance** Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall Instance([in] IUMLInstance* Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall Link([out, retval] IUMLLink** Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall AssociationEnd([out, retval] IUMLAssociationEnd** Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall AssociationEnd([in] IUMLAssociationEnd* Value);
    [id(0x00000703)]
    HRESULT _stdcall GetQualifiedValueCount([out, retval] long* Value);
    [id(0x00000704)]
    HRESULT _stdcall GetQualifiedValueAt([in] long Index, [out, retval] IUMLAttributeLink** Value);
    [id(0x00000705)]
    HRESULT _stdcall GetOtherSide([out, retval] IUMLLinkEnd** ReturnValue);
  };

  [
    uuid(51AE8518-0614-4110-9642-0A37B514A033),
    version(1.0),
    helpstring("Dispatch interface for UMLLinkObject Object"),
    dual,
    oleautomation
  ]
  interface IUMLLinkObject: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall LinkSide([out, retval] IUMLLink** Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall LinkSide([in] IUMLLink* Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall ObjectSide([out, retval] IUMLObject** Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall ObjectSide([in] IUMLObject* Value);
  };

  [
    uuid(7CB0F94B-B944-4E35-85EF-AFDD1EB501D2),
    version(1.0),
    helpstring("Dispatch interface for UMLObject Object"),
    dual,
    oleautomation
  ]
  interface IUMLObject: IUMLInstance
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall LinkObject([out, retval] IUMLLinkObject** Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall LinkObject([in] IUMLLinkObject* Value);
  };

  [
    uuid(A832AAB4-48F6-4FC8-965C-9919092F14AB),
    version(1.0),
    helpstring("Dispatch interface for UMLAssociationRole Object"),
    dual,
    oleautomation
  ]
  interface IUMLAssociationRole: IUMLAssociation
  {
    [propget, id(0x00000900)]
    HRESULT _stdcall Multiplicity([out, retval] BSTR* Value);
    [propput, id(0x00000900)]
    HRESULT _stdcall Multiplicity([in] BSTR Value);
    [propget, id(0x00000901)]
    HRESULT _stdcall Base([out, retval] IUMLAssociation** Value);
    [propput, id(0x00000901)]
    HRESULT _stdcall Base([in] IUMLAssociation* Value);
    [id(0x00000902)]
    HRESULT _stdcall AddMessage([in] IUMLMessage* Value);
    [id(0x00000903)]
    HRESULT _stdcall RemoveMessage([in] IUMLMessage* Value);
    [id(0x00000904)]
    HRESULT _stdcall InsertMessage([in] long Index, [in] IUMLMessage* Value);
    [id(0x00000905)]
    HRESULT _stdcall DeleteMessage([in] long Index);
    [id(0x00000906)]
    HRESULT _stdcall IndexOfMessage([in] IUMLMessage* Value, [out, retval] long* Index);
    [id(0x00000907)]
    HRESULT _stdcall GetMessageCount([out, retval] long* Value);
    [id(0x00000908)]
    HRESULT _stdcall GetMessageAt([in] long Index, [out, retval] IUMLMessage** Value);
    [id(0x00000909)]
    HRESULT _stdcall AddConformingLink([in] IUMLLink* Value);
    [id(0x0000090A)]
    HRESULT _stdcall RemoveConformingLink([in] IUMLLink* Value);
    [id(0x0000090B)]
    HRESULT _stdcall InsertConformingLink([in] long Index, [in] IUMLLink* Value);
    [id(0x0000090C)]
    HRESULT _stdcall DeleteConformingLink([in] long Index);
    [id(0x0000090D)]
    HRESULT _stdcall IndexOfConformingLink([in] IUMLLink* Value, [out, retval] long* Index);
    [id(0x0000090E)]
    HRESULT _stdcall GetConformingLinkCount([out, retval] long* Value);
    [id(0x0000090F)]
    HRESULT _stdcall GetConformingLinkAt([in] long Index, [out, retval] IUMLLink** Value);
  };

  [
    uuid(46C497C3-8F19-4DEB-8EBA-45E6A6BAF521),
    version(1.0),
    helpstring("Dispatch interface for UMLAssociationEndRole Object"),
    dual,
    oleautomation
  ]
  interface IUMLAssociationEndRole: IUMLAssociationEnd
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall CollaborationMultiplicity([out, retval] BSTR* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall CollaborationMultiplicity([in] BSTR Value);
    [propget, id(0x00000801)]
    HRESULT _stdcall Base([out, retval] IUMLAssociationEnd** Value);
    [propput, id(0x00000801)]
    HRESULT _stdcall Base([in] IUMLAssociationEnd* Value);
    [id(0x00000802)]
    HRESULT _stdcall AddAvailableQualifier([in] IUMLAttribute* Value);
    [id(0x00000803)]
    HRESULT _stdcall RemoveAvailableQualifier([in] IUMLAttribute* Value);
    [id(0x00000804)]
    HRESULT _stdcall InsertAvailableQualifier([in] long Index, [in] IUMLAttribute* Value);
    [id(0x00000805)]
    HRESULT _stdcall DeleteAvailableQualifier([in] long Index);
    [id(0x00000806)]
    HRESULT _stdcall IndexOfAvailableQualifier([in] IUMLAttribute* Value, [out, retval] long* Index);
    [id(0x00000807)]
    HRESULT _stdcall GetAvailableQualifierCount([out, retval] long* Value);
    [id(0x00000808)]
    HRESULT _stdcall GetAvailableQualifierAt([in] long Index, [out, retval] IUMLAttribute** Value);
  };

  [
    uuid(A7F78782-5579-496A-8024-97F3F7958176),
    version(1.0),
    helpstring("Dispatch interface for UMLComponentInstance Object"),
    dual,
    oleautomation
  ]
  interface IUMLComponentInstance: IUMLInstance
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall NodeInstance([out, retval] IUMLNodeInstance** Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall NodeInstance([in] IUMLNodeInstance* Value);
    [id(0x00000801)]
    HRESULT _stdcall AddResident([in] IUMLInstance* Value);
    [id(0x00000802)]
    HRESULT _stdcall RemoveResident([in] IUMLInstance* Value);
    [id(0x00000803)]
    HRESULT _stdcall InsertResident([in] long Index, [in] IUMLInstance* Value);
    [id(0x00000804)]
    HRESULT _stdcall DeleteResident([in] long Index);
    [id(0x00000805)]
    HRESULT _stdcall IndexOfResident([in] IUMLInstance* Value, [out, retval] long* Index);
    [id(0x00000806)]
    HRESULT _stdcall GetResidentCount([out, retval] long* Value);
    [id(0x00000807)]
    HRESULT _stdcall GetResidentAt([in] long Index, [out, retval] IUMLInstance** Value);
  };

  [
    uuid(B3CF8528-8D11-4099-818C-7C40B71F96B2),
    version(1.0),
    helpstring("Dispatch interface for UMLNodeInstance Object"),
    dual,
    oleautomation
  ]
  interface IUMLNodeInstance: IUMLInstance
  {
    [id(0x00000800)]
    HRESULT _stdcall AddResident([in] IUMLComponentInstance* Value);
    [id(0x00000801)]
    HRESULT _stdcall RemoveResident([in] IUMLComponentInstance* Value);
    [id(0x00000802)]
    HRESULT _stdcall InsertResident([in] long Index, [in] IUMLComponentInstance* Value);
    [id(0x00000803)]
    HRESULT _stdcall DeleteResident([in] long Index);
    [id(0x00000804)]
    HRESULT _stdcall IndexOfResident([in] IUMLComponentInstance* Value, [out, retval] long* Index);
    [id(0x00000805)]
    HRESULT _stdcall GetResidentCount([out, retval] long* Value);
    [id(0x00000806)]
    HRESULT _stdcall GetResidentAt([in] long Index, [out, retval] IUMLComponentInstance** Value);
  };

  [
    uuid(0C6181AF-6079-4AFB-B615-2E46F95BA12D),
    version(1.0),
    helpstring("Dispatch interface for UMLAction Object"),
    dual,
    oleautomation
  ]
  interface IUMLAction: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Recurrence([out, retval] BSTR* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall Recurrence([in] BSTR Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall Target([out, retval] BSTR* Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall Target([in] BSTR Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall IsAsynchronous([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall IsAsynchronous([in] VARIANT_BOOL Value);
    [propget, id(0x00000703)]
    HRESULT _stdcall Script([out, retval] BSTR* Value);
    [propput, id(0x00000703)]
    HRESULT _stdcall Script([in] BSTR Value);
    [id(0x00000704)]
    HRESULT _stdcall GetActualArgumentCount([out, retval] long* Value);
    [id(0x00000705)]
    HRESULT _stdcall GetActualArgumentAt([in] long Index, [out, retval] IUMLArgument** Value);
    [propget, id(0x00000706)]
    HRESULT _stdcall ActionSequence([out, retval] IUMLActionSequence** Value);
    [propget, id(0x00000707)]
    HRESULT _stdcall Stimulus([out, retval] IUMLStimulus** Value);
    [propget, id(0x00000708)]
    HRESULT _stdcall EntryState([out, retval] IUMLState** Value);
    [propget, id(0x00000709)]
    HRESULT _stdcall ExitState([out, retval] IUMLState** Value);
    [propget, id(0x0000070A)]
    HRESULT _stdcall Transition([out, retval] IUMLTransition** Value);
    [propget, id(0x0000070B)]
    HRESULT _stdcall DoActivityState([out, retval] IUMLState** Value);
    [propget, id(0x0000070C)]
    HRESULT _stdcall Message([out, retval] IUMLMessage** Value);
  };

  [
    uuid(77275B26-6D9A-4CAD-839F-77F9AF3687BE),
    version(1.0),
    helpstring("Dispatch interface for UMLArgument Object"),
    dual,
    oleautomation
  ]
  interface IUMLArgument: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Value([out, retval] BSTR* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall Value([in] BSTR Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall Action([out, retval] IUMLAction** Value);
  };

  [
    uuid(ABECC17C-64A1-435D-BB5C-7928B9D1CB27),
    version(1.0),
    helpstring("Dispatch interface for UMLActionSequence Object"),
    dual,
    oleautomation
  ]
  interface IUMLActionSequence: IUMLAction
  {
    [id(0x00000800)]
    HRESULT _stdcall GetActionCount([out, retval] long* Value);
    [id(0x00000801)]
    HRESULT _stdcall GetActionAt([in] long Index, [out, retval] IUMLAction** Value);
  };

  [
    uuid(20599819-F8BA-4B33-B730-2FDA7C90BA82),
    version(1.0),
    helpstring("Dispatch interface for UMLStateVertex Object"),
    dual,
    oleautomation
  ]
  interface IUMLStateVertex: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall ContainerState([out, retval] IUMLCompositeState** Value);
    [id(0x00000701)]
    HRESULT _stdcall AddOutgoing([in] IUMLTransition* Value);
    [id(0x00000702)]
    HRESULT _stdcall RemoveOutgoing([in] IUMLTransition* Value);
    [id(0x00000703)]
    HRESULT _stdcall InsertOutgoing([in] long Index, [in] IUMLTransition* Value);
    [id(0x00000704)]
    HRESULT _stdcall DeleteOutgoing([in] long Index);
    [id(0x00000705)]
    HRESULT _stdcall IndexOfOutgoing([in] IUMLTransition* Value, [out, retval] long* Index);
    [id(0x00000706)]
    HRESULT _stdcall GetOutgoingCount([out, retval] long* Value);
    [id(0x00000707)]
    HRESULT _stdcall GetOutgoingAt([in] long Index, [out, retval] IUMLTransition** Value);
    [id(0x00000708)]
    HRESULT _stdcall AddIncoming([in] IUMLTransition* Value);
    [id(0x00000709)]
    HRESULT _stdcall RemoveIncoming([in] IUMLTransition* Value);
    [id(0x0000070A)]
    HRESULT _stdcall InsertIncoming([in] long Index, [in] IUMLTransition* Value);
    [id(0x0000070B)]
    HRESULT _stdcall DeleteIncoming([in] long Index);
    [id(0x0000070C)]
    HRESULT _stdcall IndexOfIncoming([in] IUMLTransition* Value, [out, retval] long* Index);
    [id(0x0000070D)]
    HRESULT _stdcall GetIncomingCount([out, retval] long* Value);
    [id(0x0000070E)]
    HRESULT _stdcall GetIncomingAt([in] long Index, [out, retval] IUMLTransition** Value);
  };

  [
    uuid(70E2E0F6-6213-4B92-8403-85C2B42D2A71),
    version(1.0),
    helpstring("Dispatch interface for UMLState Object"),
    dual,
    oleautomation
  ]
  interface IUMLState: IUMLStateVertex
  {
    [id(0x00000800)]
    HRESULT _stdcall GetEntryActionCount([out, retval] long* Value);
    [id(0x00000801)]
    HRESULT _stdcall GetEntryActionAt([in] long Index, [out, retval] IUMLAction** Value);
    [id(0x00000802)]
    HRESULT _stdcall GetExitActionCount([out, retval] long* Value);
    [id(0x00000803)]
    HRESULT _stdcall GetExitActionAt([in] long Index, [out, retval] IUMLAction** Value);
    [propget, id(0x00000804)]
    HRESULT _stdcall StateMachine([out, retval] IUMLStateMachine** Value);
    [id(0x00000805)]
    HRESULT _stdcall AddDeferrableEvent([in] IUMLEvent* Value);
    [id(0x00000806)]
    HRESULT _stdcall RemoveDeferrableEvent([in] IUMLEvent* Value);
    [id(0x00000807)]
    HRESULT _stdcall InsertDeferrableEvent([in] long Index, [in] IUMLEvent* Value);
    [id(0x00000808)]
    HRESULT _stdcall DeleteDeferrableEvent([in] long Index);
    [id(0x00000809)]
    HRESULT _stdcall IndexOfDeferrableEvent([in] IUMLEvent* Value, [out, retval] long* Index);
    [id(0x0000080A)]
    HRESULT _stdcall GetDeferrableEventCount([out, retval] long* Value);
    [id(0x0000080B)]
    HRESULT _stdcall GetDeferrableEventAt([in] long Index, [out, retval] IUMLEvent** Value);
    [id(0x0000080C)]
    HRESULT _stdcall GetInternalTransitionCount([out, retval] long* Value);
    [id(0x0000080D)]
    HRESULT _stdcall GetInternalTransitionAt([in] long Index, [out, retval] IUMLTransition** Value);
    [id(0x0000080E)]
    HRESULT _stdcall GetDoActivityCount([out, retval] long* Value);
    [id(0x0000080F)]
    HRESULT _stdcall GetDoActivityAt([in] long Index, [out, retval] IUMLAction** Value);
    [id(0x00000810)]
    HRESULT _stdcall AddClassifierState([in] IUMLClassifierInState* Value);
    [id(0x00000811)]
    HRESULT _stdcall RemoveClassifierState([in] IUMLClassifierInState* Value);
    [id(0x00000812)]
    HRESULT _stdcall InsertClassifierState([in] long Index, [in] IUMLClassifierInState* Value);
    [id(0x00000813)]
    HRESULT _stdcall DeleteClassifierState([in] long Index);
    [id(0x00000814)]
    HRESULT _stdcall IndexOfClassifierState([in] IUMLClassifierInState* Value, [out, retval] long* Index);
    [id(0x00000815)]
    HRESULT _stdcall GetClassifierStateCount([out, retval] long* Value);
    [id(0x00000816)]
    HRESULT _stdcall GetClassifierStateAt([in] long Index, [out, retval] IUMLClassifierInState** Value);
  };

  [
    uuid(82AE9960-8719-4D2D-97FA-974A2AE989D4),
    version(1.0),
    helpstring("Dispatch interface for UMLCompositeState Object"),
    dual,
    oleautomation
  ]
  interface IUMLCompositeState: IUMLState
  {
    [propget, id(0x00000900)]
    HRESULT _stdcall IsConcurrent([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000900)]
    HRESULT _stdcall IsConcurrent([in] VARIANT_BOOL Value);
    [id(0x00000901)]
    HRESULT _stdcall GetSubvertexCount([out, retval] long* Value);
    [id(0x00000902)]
    HRESULT _stdcall GetSubvertexAt([in] long Index, [out, retval] IUMLStateVertex** Value);
  };

  [
    uuid(1501F2CE-B231-4FE8-938A-A976E9D35930),
    version(1.0),
    helpstring("Dispatch interface for UMLTransition Object"),
    dual,
    oleautomation
  ]
  interface IUMLTransition: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall GuardCondition([out, retval] BSTR* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall GuardCondition([in] BSTR Value);
    [id(0x00000701)]
    HRESULT _stdcall GetEffectCount([out, retval] long* Value);
    [id(0x00000702)]
    HRESULT _stdcall GetEffectAt([in] long Index, [out, retval] IUMLAction** Value);
    [propget, id(0x00000703)]
    HRESULT _stdcall State([out, retval] IUMLState** Value);
    [id(0x00000704)]
    HRESULT _stdcall GetTriggerCount([out, retval] long* Value);
    [id(0x00000705)]
    HRESULT _stdcall GetTriggerAt([in] long Index, [out, retval] IUMLEvent** Value);
    [propget, id(0x00000706)]
    HRESULT _stdcall StateMachine([out, retval] IUMLStateMachine** Value);
    [propget, id(0x00000707)]
    HRESULT _stdcall Source([out, retval] IUMLStateVertex** Value);
    [propput, id(0x00000707)]
    HRESULT _stdcall Source([in] IUMLStateVertex* Value);
    [propget, id(0x00000708)]
    HRESULT _stdcall Target([out, retval] IUMLStateVertex** Value);
    [propput, id(0x00000708)]
    HRESULT _stdcall Target([in] IUMLStateVertex* Value);
  };

  [
    uuid(1380ED56-E228-4758-BC25-4660679BBE38),
    version(1.0),
    helpstring("Dispatch interface for UMLEvent Object"),
    dual,
    oleautomation
  ]
  interface IUMLEvent: IUMLModelElement
  {
    [id(0x00000700)]
    HRESULT _stdcall GetParameterCount([out, retval] long* Value);
    [id(0x00000701)]
    HRESULT _stdcall GetParameterAt([in] long Index, [out, retval] IUMLParameter** Value);
    [id(0x00000702)]
    HRESULT _stdcall AddState([in] IUMLState* Value);
    [id(0x00000703)]
    HRESULT _stdcall RemoveState([in] IUMLState* Value);
    [id(0x00000704)]
    HRESULT _stdcall InsertState([in] long Index, [in] IUMLState* Value);
    [id(0x00000705)]
    HRESULT _stdcall DeleteState([in] long Index);
    [id(0x00000706)]
    HRESULT _stdcall IndexOfState([in] IUMLState* Value, [out, retval] long* Index);
    [id(0x00000707)]
    HRESULT _stdcall GetStateCount([out, retval] long* Value);
    [id(0x00000708)]
    HRESULT _stdcall GetStateAt([in] long Index, [out, retval] IUMLState** Value);
    [propget, id(0x00000709)]
    HRESULT _stdcall Transition([out, retval] IUMLTransition** Value);
  };

  [
    uuid(85014DB9-4743-4407-87C8-89A56D8E7950),
    version(1.0),
    helpstring("Dispatch interface for UMLParameter Object"),
    dual,
    oleautomation
  ]
  interface IUMLParameter: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall DefaultValue([out, retval] BSTR* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall DefaultValue([in] BSTR Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall DirectionKind([out, retval] UMLParameterDirectionKind* Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall DirectionKind([in] UMLParameterDirectionKind Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall TypeExpression([out, retval] BSTR* Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall TypeExpression([in] BSTR Value);
    [propget, id(0x00000703)]
    HRESULT _stdcall BehavioralFeature([out, retval] IUMLBehavioralFeature** Value);
    [propget, id(0x00000704)]
    HRESULT _stdcall Type_([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000704)]
    HRESULT _stdcall Type_([in] IUMLClassifier* Value);
    [propget, id(0x00000705)]
    HRESULT _stdcall Event([out, retval] IUMLEvent** Value);
    [id(0x00000706)]
    HRESULT _stdcall AddState([in] IUMLObjectFlowState* Value);
    [id(0x00000707)]
    HRESULT _stdcall RemoveState([in] IUMLObjectFlowState* Value);
    [id(0x00000708)]
    HRESULT _stdcall InsertState([in] long Index, [in] IUMLObjectFlowState* Value);
    [id(0x00000709)]
    HRESULT _stdcall DeleteState([in] long Index);
    [id(0x0000070A)]
    HRESULT _stdcall IndexOfState([in] IUMLObjectFlowState* Value, [out, retval] long* Index);
    [id(0x0000070B)]
    HRESULT _stdcall GetStateCount([out, retval] long* Value);
    [id(0x0000070C)]
    HRESULT _stdcall GetStateAt([in] long Index, [out, retval] IUMLObjectFlowState** Value);
    [id(0x0000070D)]
    HRESULT _stdcall SetType([in] IUMLClassifier* Value);
    [id(0x0000070E)]
    HRESULT _stdcall SetType2([in] BSTR Value);
  };

  [
    uuid(255FA2B2-F808-4DE1-9315-A36DBD85B44F),
    version(1.0),
    helpstring("Dispatch interface for UMLSimpleState Object"),
    dual,
    oleautomation
  ]
  interface IUMLSimpleState: IUMLState
  {
  };

  [
    uuid(4D77BEAB-BB54-4261-8FEE-E2386AC4E40B),
    version(1.0),
    helpstring("Dispatch interface for UMLObjectFlowState Object"),
    dual,
    oleautomation
  ]
  interface IUMLObjectFlowState: IUMLSimpleState
  {
    [propget, id(0x00000A00)]
    HRESULT _stdcall IsSynch([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000A00)]
    HRESULT _stdcall IsSynch([in] VARIANT_BOOL Value);
    [id(0x00000A01)]
    HRESULT _stdcall AddParameter([in] IUMLParameter* Value);
    [id(0x00000A02)]
    HRESULT _stdcall RemoveParameter([in] IUMLParameter* Value);
    [id(0x00000A03)]
    HRESULT _stdcall InsertParameter([in] long Index, [in] IUMLParameter* Value);
    [id(0x00000A04)]
    HRESULT _stdcall DeleteParameter([in] long Index);
    [id(0x00000A05)]
    HRESULT _stdcall IndexOfParameter([in] IUMLParameter* Value, [out, retval] long* Index);
    [id(0x00000A06)]
    HRESULT _stdcall GetParameterCount([out, retval] long* Value);
    [id(0x00000A07)]
    HRESULT _stdcall GetParameterAt([in] long Index, [out, retval] IUMLParameter** Value);
    [propget, id(0x00000A08)]
    HRESULT _stdcall Type_([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000A08)]
    HRESULT _stdcall Type_([in] IUMLClassifier* Value);
  };

  [
    uuid(A87F363C-03E7-4BCC-B9B5-596CA4A69732),
    version(1.0),
    helpstring("Dispatch interface for UMLStateMachine Object"),
    dual,
    oleautomation
  ]
  interface IUMLStateMachine: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Context([out, retval] IUMLModelElement** Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall Top([out, retval] IUMLState** Value);
    [id(0x00000702)]
    HRESULT _stdcall GetTransitionCount([out, retval] long* Value);
    [id(0x00000703)]
    HRESULT _stdcall GetTransitionAt([in] long Index, [out, retval] IUMLTransition** Value);
    [id(0x00000704)]
    HRESULT _stdcall AddSubmachineState([in] IUMLSubmachineState* Value);
    [id(0x00000705)]
    HRESULT _stdcall RemoveSubmachineState([in] IUMLSubmachineState* Value);
    [id(0x00000706)]
    HRESULT _stdcall InsertSubmachineState([in] long Index, [in] IUMLSubmachineState* Value);
    [id(0x00000707)]
    HRESULT _stdcall DeleteSubmachineState([in] long Index);
    [id(0x00000708)]
    HRESULT _stdcall IndexOfSubmachineState([in] IUMLSubmachineState* Value, [out, retval] long* Index);
    [id(0x00000709)]
    HRESULT _stdcall GetSubmachineStateCount([out, retval] long* Value);
    [id(0x0000070A)]
    HRESULT _stdcall GetSubmachineStateAt([in] long Index, [out, retval] IUMLSubmachineState** Value);
  };

  [
    uuid(EB1395AA-ED84-43B2-A19E-4DA00A7B4EAA),
    version(1.0),
    helpstring("Dispatch interface for UMLSubmachineState Object"),
    dual,
    oleautomation
  ]
  interface IUMLSubmachineState: IUMLCompositeState
  {
    [propget, id(0x00000A00)]
    HRESULT _stdcall Submachine([out, retval] IUMLStateMachine** Value);
    [propput, id(0x00000A00)]
    HRESULT _stdcall Submachine([in] IUMLStateMachine* Value);
  };

  [
    uuid(BC44B44D-8F14-402C-80DD-0F936DC60BC1),
    version(1.0),
    helpstring("Dispatch interface for UMLClassifierInState Object"),
    dual,
    oleautomation
  ]
  interface IUMLClassifierInState: IUMLClassifier
  {
    [propget, id(0x00000A00)]
    HRESULT _stdcall Type_([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000A00)]
    HRESULT _stdcall Type_([in] IUMLClassifier* Value);
    [id(0x00000A01)]
    HRESULT _stdcall AddInState([in] IUMLState* Value);
    [id(0x00000A02)]
    HRESULT _stdcall RemoveInState([in] IUMLState* Value);
    [id(0x00000A03)]
    HRESULT _stdcall InsertInState([in] long Index, [in] IUMLState* Value);
    [id(0x00000A04)]
    HRESULT _stdcall DeleteInState([in] long Index);
    [id(0x00000A05)]
    HRESULT _stdcall IndexOfInState([in] IUMLState* Value, [out, retval] long* Index);
    [id(0x00000A06)]
    HRESULT _stdcall GetInStateCount([out, retval] long* Value);
    [id(0x00000A07)]
    HRESULT _stdcall GetInStateAt([in] long Index, [out, retval] IUMLState** Value);
  };

  [
    uuid(7D010090-0FAA-40CF-8395-839767834C77),
    version(1.0),
    helpstring("Dispatch interface for UMLInteractionFragment Object"),
    dual,
    oleautomation
  ]
  interface IUMLInteractionFragment: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall EnclosingOperand([out, retval] IUMLInteractionOperand** Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall EnclosingOperand([in] IUMLInteractionOperand* Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall EnclosingInteraction([out, retval] IUMLInteraction** Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall EnclosingInteraction([in] IUMLInteraction* Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall EnclosingInteractionInstanceSet([out, retval] IUMLInteractionInstanceSet** Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall EnclosingInteractionInstanceSet([in] IUMLInteractionInstanceSet* Value);
  };

  [
    uuid(257B3B46-B74E-4316-8298-5902B9181EB5),
    version(1.0),
    helpstring("Dispatch interface for UMLInteractionOperand Object"),
    dual,
    oleautomation
  ]
  interface IUMLInteractionOperand: IUMLInteractionFragment
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Guard([out, retval] BSTR* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Guard([in] BSTR Value);
    [propget, id(0x00000801)]
    HRESULT _stdcall CombinedFragment([out, retval] IUMLCombinedFragment** Value);
    [propput, id(0x00000801)]
    HRESULT _stdcall CombinedFragment([in] IUMLCombinedFragment* Value);
    [id(0x00000802)]
    HRESULT _stdcall AddFragment([in] IUMLInteractionFragment* Value);
    [id(0x00000803)]
    HRESULT _stdcall RemoveFragment([in] IUMLInteractionFragment* Value);
    [id(0x00000804)]
    HRESULT _stdcall InsertFragment([in] long Index, [in] IUMLInteractionFragment* Value);
    [id(0x00000805)]
    HRESULT _stdcall DeleteFragment([in] long Index);
    [id(0x00000806)]
    HRESULT _stdcall IndexOfFragment([in] IUMLInteractionFragment* Value, [out, retval] long* Index);
    [id(0x00000807)]
    HRESULT _stdcall GetFragmentCount([out, retval] long* Value);
    [id(0x00000808)]
    HRESULT _stdcall GetFragmentAt([in] long Index, [out, retval] IUMLInteractionFragment** Value);
  };

  [
    uuid(F61418C9-FED0-4485-9FC6-B312532EA26F),
    version(1.0),
    helpstring("Dispatch interface for UMLCombinedFragment Object"),
    dual,
    oleautomation
  ]
  interface IUMLCombinedFragment: IUMLInteractionFragment
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall InteractionOperator([out, retval] UMLInteractionOperatorKind* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall InteractionOperator([in] UMLInteractionOperatorKind Value);
    [id(0x00000801)]
    HRESULT _stdcall AddOperand([in] IUMLInteractionOperand* Value);
    [id(0x00000802)]
    HRESULT _stdcall RemoveOperand([in] IUMLInteractionOperand* Value);
    [id(0x00000803)]
    HRESULT _stdcall InsertOperand([in] long Index, [in] IUMLInteractionOperand* Value);
    [id(0x00000804)]
    HRESULT _stdcall DeleteOperand([in] long Index);
    [id(0x00000805)]
    HRESULT _stdcall IndexOfOperand([in] IUMLInteractionOperand* Value, [out, retval] long* Index);
    [id(0x00000806)]
    HRESULT _stdcall GetOperandCount([out, retval] long* Value);
    [id(0x00000807)]
    HRESULT _stdcall GetOperandAt([in] long Index, [out, retval] IUMLInteractionOperand** Value);
  };

  [
    uuid(BD4E6A26-3410-46B4-A606-B53F2A0F2AB5),
    version(1.0),
    helpstring("Dispatch interface for UMLSignal Object"),
    dual,
    oleautomation
  ]
  interface IUMLSignal: IUMLClassifier
  {
    [id(0x00000A00)]
    HRESULT _stdcall AddReception([in] IUMLReception* Value);
    [id(0x00000A01)]
    HRESULT _stdcall RemoveReception([in] IUMLReception* Value);
    [id(0x00000A02)]
    HRESULT _stdcall InsertReception([in] long Index, [in] IUMLReception* Value);
    [id(0x00000A03)]
    HRESULT _stdcall DeleteReception([in] long Index);
    [id(0x00000A04)]
    HRESULT _stdcall IndexOfReception([in] IUMLReception* Value, [out, retval] long* Index);
    [id(0x00000A05)]
    HRESULT _stdcall GetReceptionCount([out, retval] long* Value);
    [id(0x00000A06)]
    HRESULT _stdcall GetReceptionAt([in] long Index, [out, retval] IUMLReception** Value);
    [id(0x00000A07)]
    HRESULT _stdcall AddContext([in] IUMLBehavioralFeature* Value);
    [id(0x00000A08)]
    HRESULT _stdcall RemoveContext([in] IUMLBehavioralFeature* Value);
    [id(0x00000A09)]
    HRESULT _stdcall InsertContext([in] long Index, [in] IUMLBehavioralFeature* Value);
    [id(0x00000A0A)]
    HRESULT _stdcall DeleteContext([in] long Index);
    [id(0x00000A0B)]
    HRESULT _stdcall IndexOfContext([in] IUMLBehavioralFeature* Value, [out, retval] long* Index);
    [id(0x00000A0C)]
    HRESULT _stdcall GetContextCount([out, retval] long* Value);
    [id(0x00000A0D)]
    HRESULT _stdcall GetContextAt([in] long Index, [out, retval] IUMLBehavioralFeature** Value);
    [id(0x00000A0E)]
    HRESULT _stdcall AddSendAction([in] IUMLSendAction* Value);
    [id(0x00000A0F)]
    HRESULT _stdcall RemoveSendAction([in] IUMLSendAction* Value);
    [id(0x00000A10)]
    HRESULT _stdcall InsertSendAction([in] long Index, [in] IUMLSendAction* Value);
    [id(0x00000A11)]
    HRESULT _stdcall DeleteSendAction([in] long Index);
    [id(0x00000A12)]
    HRESULT _stdcall IndexOfSendAction([in] IUMLSendAction* Value, [out, retval] long* Index);
    [id(0x00000A13)]
    HRESULT _stdcall GetSendActionCount([out, retval] long* Value);
    [id(0x00000A14)]
    HRESULT _stdcall GetSendActionAt([in] long Index, [out, retval] IUMLSendAction** Value);
    [id(0x00000A15)]
    HRESULT _stdcall AddOccurrence([in] IUMLSignalEvent* Value);
    [id(0x00000A16)]
    HRESULT _stdcall RemoveOccurrence([in] IUMLSignalEvent* Value);
    [id(0x00000A17)]
    HRESULT _stdcall InsertOccurrence([in] long Index, [in] IUMLSignalEvent* Value);
    [id(0x00000A18)]
    HRESULT _stdcall DeleteOccurrence([in] long Index);
    [id(0x00000A19)]
    HRESULT _stdcall IndexOfOccurrence([in] IUMLSignalEvent* Value, [out, retval] long* Index);
    [id(0x00000A1A)]
    HRESULT _stdcall GetOccurrenceCount([out, retval] long* Value);
    [id(0x00000A1B)]
    HRESULT _stdcall GetOccurrenceAt([in] long Index, [out, retval] IUMLSignalEvent** Value);
  };

  [
    uuid(FD66F18E-C5A3-4138-9D82-4A3B4A8E696F),
    version(1.0),
    helpstring("Dispatch interface for UMLReception Object"),
    dual,
    oleautomation
  ]
  interface IUMLReception: IUMLBehavioralFeature
  {
    [propget, id(0x00000900)]
    HRESULT _stdcall Specification([out, retval] BSTR* Value);
    [propput, id(0x00000900)]
    HRESULT _stdcall Specification([in] BSTR Value);
    [propget, id(0x00000901)]
    HRESULT _stdcall IsRoot([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000901)]
    HRESULT _stdcall IsRoot([in] VARIANT_BOOL Value);
    [propget, id(0x00000902)]
    HRESULT _stdcall IsLeaf([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000902)]
    HRESULT _stdcall IsLeaf([in] VARIANT_BOOL Value);
    [propget, id(0x00000903)]
    HRESULT _stdcall IsAbstract([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000903)]
    HRESULT _stdcall IsAbstract([in] VARIANT_BOOL Value);
    [propget, id(0x00000904)]
    HRESULT _stdcall Signal([out, retval] IUMLSignal** Value);
    [propput, id(0x00000904)]
    HRESULT _stdcall Signal([in] IUMLSignal* Value);
  };

  [
    uuid(0B98EDFA-BB54-42F2-A011-0E8E99AE0ACA),
    version(1.0),
    helpstring("Dispatch interface for UMLSendAction Object"),
    dual,
    oleautomation
  ]
  interface IUMLSendAction: IUMLAction
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Signal([out, retval] IUMLSignal** Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Signal([in] IUMLSignal* Value);
  };

  [
    uuid(9C3362FD-01D3-457D-968A-C31F12877E62),
    version(1.0),
    helpstring("Dispatch interface for UMLSignalEvent Object"),
    dual,
    oleautomation
  ]
  interface IUMLSignalEvent: IUMLEvent
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Signal([out, retval] IUMLSignal** Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Signal([in] IUMLSignal* Value);
  };

  [
    uuid(E95BC808-931D-40E1-ABBE-C812E22D3897),
    version(1.0),
    helpstring("Dispatch interface for UMLMethod Object"),
    dual,
    oleautomation
  ]
  interface IUMLMethod: IUMLBehavioralFeature
  {
    [propget, id(0x00000900)]
    HRESULT _stdcall Body([out, retval] BSTR* Value);
    [propput, id(0x00000900)]
    HRESULT _stdcall Body([in] BSTR Value);
    [propget, id(0x00000901)]
    HRESULT _stdcall Specification([out, retval] IUMLOperation** Value);
    [propput, id(0x00000901)]
    HRESULT _stdcall Specification([in] IUMLOperation* Value);
  };

  [
    uuid(7664ACBF-A8E1-4992-BC19-5C05CF5046DE),
    version(1.0),
    helpstring("Dispatch interface for UMLCallAction Object"),
    dual,
    oleautomation
  ]
  interface IUMLCallAction: IUMLAction
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Operation([out, retval] IUMLOperation** Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Operation([in] IUMLOperation* Value);
  };

  [
    uuid(7FBCE306-35A0-432A-BB7D-BEAD89D15D77),
    version(1.0),
    helpstring("Dispatch interface for UMLCallEvent Object"),
    dual,
    oleautomation
  ]
  interface IUMLCallEvent: IUMLEvent
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Operation([out, retval] IUMLOperation** Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Operation([in] IUMLOperation* Value);
  };

  [
    uuid(460F9540-6624-4834-92CF-A12ACF76043D),
    version(1.0),
    helpstring("Dispatch interface for UMLGeneralization Object"),
    dual,
    oleautomation
  ]
  interface IUMLGeneralization: IUMLRelationship
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Discriminator([out, retval] BSTR* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Discriminator([in] BSTR Value);
    [propget, id(0x00000801)]
    HRESULT _stdcall Child([out, retval] IUMLGeneralizableElement** Value);
    [propput, id(0x00000801)]
    HRESULT _stdcall Child([in] IUMLGeneralizableElement* Value);
    [propget, id(0x00000802)]
    HRESULT _stdcall Parent([out, retval] IUMLGeneralizableElement** Value);
    [propput, id(0x00000802)]
    HRESULT _stdcall Parent([in] IUMLGeneralizableElement* Value);
    [propget, id(0x00000803)]
    HRESULT _stdcall Powertype([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000803)]
    HRESULT _stdcall Powertype([in] IUMLClassifier* Value);
  };

  [
    uuid(41CA8B62-459D-4A72-AE2E-0E504A01A721),
    version(1.0),
    helpstring("Dispatch interface for UMLPort Object"),
    dual,
    oleautomation
  ]
  interface IUMLPort: IUMLStructuralFeature
  {
    [propget, id(0x00000900)]
    HRESULT _stdcall IsBehavior([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000900)]
    HRESULT _stdcall IsBehavior([in] VARIANT_BOOL Value);
    [propget, id(0x00000901)]
    HRESULT _stdcall IsService([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000901)]
    HRESULT _stdcall IsService([in] VARIANT_BOOL Value);
    [propget, id(0x00000902)]
    HRESULT _stdcall Owner([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000902)]
    HRESULT _stdcall Owner([in] IUMLClassifier* Value);
  };

  [
    uuid(0D648A4D-9E11-4379-B2B7-A8B1B2C59414),
    version(1.0),
    helpstring("Dispatch interface for UMLCreateAction Object"),
    dual,
    oleautomation
  ]
  interface IUMLCreateAction: IUMLAction
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Instantiation([out, retval] IUMLClassifier** Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Instantiation([in] IUMLClassifier* Value);
  };

  [
    uuid(5E22F30D-0FAC-4833-9A90-6CAEEAD115B1),
    version(1.0),
    helpstring("Dispatch interface for UMLDependency Object"),
    dual,
    oleautomation
  ]
  interface IUMLDependency: IUMLRelationship
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Mapping([out, retval] BSTR* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Mapping([in] BSTR Value);
    [propget, id(0x00000801)]
    HRESULT _stdcall Client([out, retval] IUMLModelElement** Value);
    [propput, id(0x00000801)]
    HRESULT _stdcall Client([in] IUMLModelElement* Value);
    [propget, id(0x00000802)]
    HRESULT _stdcall Supplier([out, retval] IUMLModelElement** Value);
    [propput, id(0x00000802)]
    HRESULT _stdcall Supplier([in] IUMLModelElement* Value);
  };

  [
    uuid(C3278B29-50AF-412A-8F1F-3B3B153BB29E),
    version(1.0),
    helpstring("Dispatch interface for UMLTemplateParameter Object"),
    dual,
    oleautomation
  ]
  interface IUMLTemplateParameter: IUMLElement
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall ParameterType([out, retval] BSTR* Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall ParameterType([in] BSTR Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall DefaultValue([out, retval] BSTR* Value);
    [propput, id(0x00000601)]
    HRESULT _stdcall DefaultValue([in] BSTR Value);
    [propget, id(0x00000602)]
    HRESULT _stdcall DefaultElement([out, retval] IUMLModelElement** Value);
    [propput, id(0x00000602)]
    HRESULT _stdcall DefaultElement([in] IUMLModelElement* Value);
    [propget, id(0x00000603)]
    HRESULT _stdcall Template([out, retval] IUMLModelElement** Value);
    [propget, id(0x00000604)]
    HRESULT _stdcall Parameter([out, retval] IUMLModelElement** Value);
  };

  [
    uuid(2374D4CA-67EF-409E-A922-47391351B911),
    version(1.0),
    helpstring("Dispatch interface for UMLComment Object"),
    dual,
    oleautomation
  ]
  interface IUMLComment: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Body([out, retval] BSTR* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall Body([in] BSTR Value);
    [id(0x00000701)]
    HRESULT _stdcall AddAnnotatedElement([in] IUMLModelElement* Value);
    [id(0x00000702)]
    HRESULT _stdcall RemoveAnnotatedElement([in] IUMLModelElement* Value);
    [id(0x00000703)]
    HRESULT _stdcall InsertAnnotatedElement([in] long Index, [in] IUMLModelElement* Value);
    [id(0x00000704)]
    HRESULT _stdcall DeleteAnnotatedElement([in] long Index);
    [id(0x00000705)]
    HRESULT _stdcall IndexOfAnnotatedElement([in] IUMLModelElement* Value, [out, retval] long* Index);
    [id(0x00000706)]
    HRESULT _stdcall GetAnnotatedElementCount([out, retval] long* Value);
    [id(0x00000707)]
    HRESULT _stdcall GetAnnotatedElementAt([in] long Index, [out, retval] IUMLModelElement** Value);
  };

  [
    uuid(A7DC0875-B168-4737-926B-2189774996FF),
    version(1.0),
    helpstring("Dispatch interface for UMLComponent Object"),
    dual,
    oleautomation
  ]
  interface IUMLComponent: IUMLClassifier
  {
    [id(0x00000A00)]
    HRESULT _stdcall AddDeploymentLocation([in] IUMLNode* Value);
    [id(0x00000A01)]
    HRESULT _stdcall RemoveDeploymentLocation([in] IUMLNode* Value);
    [id(0x00000A02)]
    HRESULT _stdcall InsertDeploymentLocation([in] long Index, [in] IUMLNode* Value);
    [id(0x00000A03)]
    HRESULT _stdcall DeleteDeploymentLocation([in] long Index);
    [id(0x00000A04)]
    HRESULT _stdcall IndexOfDeploymentLocation([in] IUMLNode* Value, [out, retval] long* Index);
    [id(0x00000A05)]
    HRESULT _stdcall GetDeploymentLocationCount([out, retval] long* Value);
    [id(0x00000A06)]
    HRESULT _stdcall GetDeploymentLocationAt([in] long Index, [out, retval] IUMLNode** Value);
    [id(0x00000A07)]
    HRESULT _stdcall AddResident([in] IUMLModelElement* Value);
    [id(0x00000A08)]
    HRESULT _stdcall RemoveResident([in] IUMLModelElement* Value);
    [id(0x00000A09)]
    HRESULT _stdcall InsertResident([in] long Index, [in] IUMLModelElement* Value);
    [id(0x00000A0A)]
    HRESULT _stdcall DeleteResident([in] long Index);
    [id(0x00000A0B)]
    HRESULT _stdcall IndexOfResident([in] IUMLModelElement* Value, [out, retval] long* Index);
    [id(0x00000A0C)]
    HRESULT _stdcall GetResidentCount([out, retval] long* Value);
    [id(0x00000A0D)]
    HRESULT _stdcall GetResidentAt([in] long Index, [out, retval] IUMLModelElement** Value);
    [id(0x00000A0E)]
    HRESULT _stdcall AddImplementation([in] IUMLArtifact* Value);
    [id(0x00000A0F)]
    HRESULT _stdcall RemoveImplementation([in] IUMLArtifact* Value);
    [id(0x00000A10)]
    HRESULT _stdcall InsertImplementation([in] long Index, [in] IUMLArtifact* Value);
    [id(0x00000A11)]
    HRESULT _stdcall DeleteImplementation([in] long Index);
    [id(0x00000A12)]
    HRESULT _stdcall IndexOfImplementation([in] IUMLArtifact* Value, [out, retval] long* Index);
    [id(0x00000A13)]
    HRESULT _stdcall GetImplementationCount([out, retval] long* Value);
    [id(0x00000A14)]
    HRESULT _stdcall GetImplementationAt([in] long Index, [out, retval] IUMLArtifact** Value);
  };

  [
    uuid(C95EE915-2020-4A2E-A64C-3864047582E0),
    version(1.0),
    helpstring("Dispatch interface for UMLNode Object"),
    dual,
    oleautomation
  ]
  interface IUMLNode: IUMLClassifier
  {
    [id(0x00000A00)]
    HRESULT _stdcall AddDeployedComponent([in] IUMLComponent* Value);
    [id(0x00000A01)]
    HRESULT _stdcall RemoveDeployedComponent([in] IUMLComponent* Value);
    [id(0x00000A02)]
    HRESULT _stdcall InsertDeployedComponent([in] long Index, [in] IUMLComponent* Value);
    [id(0x00000A03)]
    HRESULT _stdcall DeleteDeployedComponent([in] long Index);
    [id(0x00000A04)]
    HRESULT _stdcall IndexOfDeployedComponent([in] IUMLComponent* Value, [out, retval] long* Index);
    [id(0x00000A05)]
    HRESULT _stdcall GetDeployedComponentCount([out, retval] long* Value);
    [id(0x00000A06)]
    HRESULT _stdcall GetDeployedComponentAt([in] long Index, [out, retval] IUMLComponent** Value);
    [id(0x00000A07)]
    HRESULT _stdcall AddDeployedArtifact([in] IUMLArtifact* Value);
    [id(0x00000A08)]
    HRESULT _stdcall RemoveDeployedArtifact([in] IUMLArtifact* Value);
    [id(0x00000A09)]
    HRESULT _stdcall InsertDeployedArtifact([in] long Index, [in] IUMLArtifact* Value);
    [id(0x00000A0A)]
    HRESULT _stdcall DeleteDeployedArtifact([in] long Index);
    [id(0x00000A0B)]
    HRESULT _stdcall IndexOfDeployedArtifact([in] IUMLArtifact* Value, [out, retval] long* Index);
    [id(0x00000A0C)]
    HRESULT _stdcall GetDeployedArtifactCount([out, retval] long* Value);
    [id(0x00000A0D)]
    HRESULT _stdcall GetDeployedArtifactAt([in] long Index, [out, retval] IUMLArtifact** Value);
  };

  [
    uuid(99725A79-45E9-4FE9-BC4E-32007154B941),
    version(1.0),
    helpstring("Dispatch interface for UMLArtifact Object"),
    dual,
    oleautomation
  ]
  interface IUMLArtifact: IUMLClassifier
  {
    [id(0x00000A00)]
    HRESULT _stdcall AddImplementationLocation([in] IUMLComponent* Value);
    [id(0x00000A01)]
    HRESULT _stdcall RemoveImplementationLocation([in] IUMLComponent* Value);
    [id(0x00000A02)]
    HRESULT _stdcall InsertImplementationLocation([in] long Index, [in] IUMLComponent* Value);
    [id(0x00000A03)]
    HRESULT _stdcall DeleteImplementationLocation([in] long Index);
    [id(0x00000A04)]
    HRESULT _stdcall IndexOfImplementationLocation([in] IUMLComponent* Value, [out, retval] long* Index);
    [id(0x00000A05)]
    HRESULT _stdcall GetImplementationLocationCount([out, retval] long* Value);
    [id(0x00000A06)]
    HRESULT _stdcall GetImplementationLocationAt([in] long Index, [out, retval] IUMLComponent** Value);
    [id(0x00000A07)]
    HRESULT _stdcall AddDeploymentLocation([in] IUMLNode* Value);
    [id(0x00000A08)]
    HRESULT _stdcall RemoveDeploymentLocation([in] IUMLNode* Value);
    [id(0x00000A09)]
    HRESULT _stdcall InsertDeploymentLocation([in] long Index, [in] IUMLNode* Value);
    [id(0x00000A0A)]
    HRESULT _stdcall DeleteDeploymentLocation([in] long Index);
    [id(0x00000A0B)]
    HRESULT _stdcall IndexOfDeploymentLocation([in] IUMLNode* Value, [out, retval] long* Index);
    [id(0x00000A0C)]
    HRESULT _stdcall GetDeploymentLocationCount([out, retval] long* Value);
    [id(0x00000A0D)]
    HRESULT _stdcall GetDeploymentLocationAt([in] long Index, [out, retval] IUMLNode** Value);
  };

  [
    uuid(982CA266-1790-4411-8385-3F90F4E544A4),
    version(1.0),
    helpstring("Dispatch interface for UMLTemplateArgument Object"),
    dual,
    oleautomation
  ]
  interface IUMLTemplateArgument: IUMLElement
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall ModelElement([out, retval] IUMLModelElement** Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall ModelElement([in] IUMLModelElement* Value);
  };

  [
    uuid(97EB99FD-8F4D-4028-806E-75393ED3B924),
    version(1.0),
    helpstring("Dispatch interface for UMLPartition Object"),
    dual,
    oleautomation
  ]
  interface IUMLPartition: IUMLModelElement
  {
    [id(0x00000700)]
    HRESULT _stdcall AddContent([in] IUMLModelElement* Value);
    [id(0x00000701)]
    HRESULT _stdcall RemoveContent([in] IUMLModelElement* Value);
    [id(0x00000702)]
    HRESULT _stdcall InsertContent([in] long Index, [in] IUMLModelElement* Value);
    [id(0x00000703)]
    HRESULT _stdcall DeleteContent([in] long Index);
    [id(0x00000704)]
    HRESULT _stdcall IndexOfContent([in] IUMLModelElement* Value, [out, retval] long* Index);
    [id(0x00000705)]
    HRESULT _stdcall GetContentCount([out, retval] long* Value);
    [id(0x00000706)]
    HRESULT _stdcall GetContentAt([in] long Index, [out, retval] IUMLModelElement** Value);
    [propget, id(0x00000707)]
    HRESULT _stdcall ActivityGraph([out, retval] IUMLActivityGraph** Value);
  };

  [
    uuid(B75D3480-F635-4BBE-B9C9-D603A3E52217),
    version(1.0),
    helpstring("Dispatch interface for UMLActivityGraph Object"),
    dual,
    oleautomation
  ]
  interface IUMLActivityGraph: IUMLStateMachine
  {
    [id(0x00000800)]
    HRESULT _stdcall GetPartitionCount([out, retval] long* Value);
    [id(0x00000801)]
    HRESULT _stdcall GetPartitionAt([in] long Index, [out, retval] IUMLPartition** Value);
  };

  [
    uuid(D6FDDD80-92BF-4258-843E-BCEB8E459C7C),
    version(1.0),
    helpstring("Dispatch interface for UMLModel Object"),
    dual,
    oleautomation
  ]
  interface IUMLModel: IUMLPackage
  {
  };

  [
    uuid(32C56643-6609-4CD4-A5BC-33EEC84E85A7),
    version(1.0),
    helpstring("Dispatch interface for UMLSubsystem Object"),
    dual,
    oleautomation
  ]
  interface IUMLSubsystem: IUMLPackage
  {
    [propget, id(0x00000B00)]
    HRESULT _stdcall IsInstantiable([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000B00)]
    HRESULT _stdcall IsInstantiable([in] VARIANT_BOOL Value);
  };

  [
    uuid(C5E4E1BA-DB5E-4D44-8A0F-A8DDF9FA3E31),
    version(1.0),
    helpstring("Dispatch interface for UMLInterface Object"),
    dual,
    oleautomation
  ]
  interface IUMLInterface: IUMLClassifier
  {
  };

  [
    uuid(C970F1CD-49A0-407E-B678-C9B9FDE7B261),
    version(1.0),
    helpstring("Dispatch interface for UMLDataType Object"),
    dual,
    oleautomation
  ]
  interface IUMLDataType: IUMLClassifier
  {
  };

  [
    uuid(321B7E63-FD4A-4828-A5D6-9B986240E129),
    version(1.0),
    helpstring("Dispatch interface for UMLEnumeration Object"),
    dual,
    oleautomation
  ]
  interface IUMLEnumeration: IUMLDataType
  {
    [id(0x00000B00)]
    HRESULT _stdcall GetLiteralCount([out, retval] long* Value);
    [id(0x00000B01)]
    HRESULT _stdcall GetLiteralAt([in] long Index, [out, retval] IUMLEnumerationLiteral** Value);
  };

  [
    uuid(8CA5B43A-F0A7-479F-8E96-606FAA493380),
    version(1.0),
    helpstring("Dispatch interface for UMLEnumerationLiteral Object"),
    dual,
    oleautomation
  ]
  interface IUMLEnumerationLiteral: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Enumeration([out, retval] IUMLEnumeration** Value);
  };

  [
    uuid(592D17B9-9EC3-48C3-A604-1C91B55FA12F),
    version(1.0),
    helpstring("Dispatch interface for UMLException Object"),
    dual,
    oleautomation
  ]
  interface IUMLException: IUMLSignal
  {
  };

  [
    uuid(CD897DE7-61AC-4495-800F-85171E320D82),
    version(1.0),
    helpstring("Dispatch interface for UMLUseCase Object"),
    dual,
    oleautomation
  ]
  interface IUMLUseCase: IUMLClassifier
  {
    [id(0x00000A00)]
    HRESULT _stdcall AddExtender([in] IUMLExtend* Value);
    [id(0x00000A01)]
    HRESULT _stdcall RemoveExtender([in] IUMLExtend* Value);
    [id(0x00000A02)]
    HRESULT _stdcall InsertExtender([in] long Index, [in] IUMLExtend* Value);
    [id(0x00000A03)]
    HRESULT _stdcall DeleteExtender([in] long Index);
    [id(0x00000A04)]
    HRESULT _stdcall IndexOfExtender([in] IUMLExtend* Value, [out, retval] long* Index);
    [id(0x00000A05)]
    HRESULT _stdcall GetExtenderCount([out, retval] long* Value);
    [id(0x00000A06)]
    HRESULT _stdcall GetExtenderAt([in] long Index, [out, retval] IUMLExtend** Value);
    [id(0x00000A07)]
    HRESULT _stdcall AddExtend([in] IUMLExtend* Value);
    [id(0x00000A08)]
    HRESULT _stdcall RemoveExtend([in] IUMLExtend* Value);
    [id(0x00000A09)]
    HRESULT _stdcall InsertExtend([in] long Index, [in] IUMLExtend* Value);
    [id(0x00000A0A)]
    HRESULT _stdcall DeleteExtend([in] long Index);
    [id(0x00000A0B)]
    HRESULT _stdcall IndexOfExtend([in] IUMLExtend* Value, [out, retval] long* Index);
    [id(0x00000A0C)]
    HRESULT _stdcall GetExtendCount([out, retval] long* Value);
    [id(0x00000A0D)]
    HRESULT _stdcall GetExtendAt([in] long Index, [out, retval] IUMLExtend** Value);
    [id(0x00000A0E)]
    HRESULT _stdcall AddIncluder([in] IUMLInclude* Value);
    [id(0x00000A0F)]
    HRESULT _stdcall RemoveIncluder([in] IUMLInclude* Value);
    [id(0x00000A10)]
    HRESULT _stdcall InsertIncluder([in] long Index, [in] IUMLInclude* Value);
    [id(0x00000A11)]
    HRESULT _stdcall DeleteIncluder([in] long Index);
    [id(0x00000A12)]
    HRESULT _stdcall IndexOfIncluder([in] IUMLInclude* Value, [out, retval] long* Index);
    [id(0x00000A13)]
    HRESULT _stdcall GetIncluderCount([out, retval] long* Value);
    [id(0x00000A14)]
    HRESULT _stdcall GetIncluderAt([in] long Index, [out, retval] IUMLInclude** Value);
    [id(0x00000A15)]
    HRESULT _stdcall AddInclude([in] IUMLInclude* Value);
    [id(0x00000A16)]
    HRESULT _stdcall RemoveInclude([in] IUMLInclude* Value);
    [id(0x00000A17)]
    HRESULT _stdcall InsertInclude([in] long Index, [in] IUMLInclude* Value);
    [id(0x00000A18)]
    HRESULT _stdcall DeleteInclude([in] long Index);
    [id(0x00000A19)]
    HRESULT _stdcall IndexOfInclude([in] IUMLInclude* Value, [out, retval] long* Index);
    [id(0x00000A1A)]
    HRESULT _stdcall GetIncludeCount([out, retval] long* Value);
    [id(0x00000A1B)]
    HRESULT _stdcall GetIncludeAt([in] long Index, [out, retval] IUMLInclude** Value);
    [id(0x00000A1C)]
    HRESULT _stdcall GetExtensionPointCount([out, retval] long* Value);
    [id(0x00000A1D)]
    HRESULT _stdcall GetExtensionPointAt([in] long Index, [out, retval] IUMLExtensionPoint** Value);
  };

  [
    uuid(605077AF-BB57-4058-B09A-C9620AD24D10),
    version(1.0),
    helpstring("Dispatch interface for UMLExtend Object"),
    dual,
    oleautomation
  ]
  interface IUMLExtend: IUMLRelationship
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Condition([out, retval] BSTR* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Condition([in] BSTR Value);
    [propget, id(0x00000801)]
    HRESULT _stdcall Base([out, retval] IUMLUseCase** Value);
    [propput, id(0x00000801)]
    HRESULT _stdcall Base([in] IUMLUseCase* Value);
    [propget, id(0x00000802)]
    HRESULT _stdcall Extension([out, retval] IUMLUseCase** Value);
    [propput, id(0x00000802)]
    HRESULT _stdcall Extension([in] IUMLUseCase* Value);
    [id(0x00000803)]
    HRESULT _stdcall AddExtensionPoint([in] IUMLExtensionPoint* Value);
    [id(0x00000804)]
    HRESULT _stdcall RemoveExtensionPoint([in] IUMLExtensionPoint* Value);
    [id(0x00000805)]
    HRESULT _stdcall InsertExtensionPoint([in] long Index, [in] IUMLExtensionPoint* Value);
    [id(0x00000806)]
    HRESULT _stdcall DeleteExtensionPoint([in] long Index);
    [id(0x00000807)]
    HRESULT _stdcall IndexOfExtensionPoint([in] IUMLExtensionPoint* Value, [out, retval] long* Index);
    [id(0x00000808)]
    HRESULT _stdcall GetExtensionPointCount([out, retval] long* Value);
    [id(0x00000809)]
    HRESULT _stdcall GetExtensionPointAt([in] long Index, [out, retval] IUMLExtensionPoint** Value);
  };

  [
    uuid(DCD8C3D7-F2E9-4A96-A6BA-D350882E52FC),
    version(1.0),
    helpstring("Dispatch interface for UMLExtensionPoint Object"),
    dual,
    oleautomation
  ]
  interface IUMLExtensionPoint: IUMLModelElement
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Location([out, retval] BSTR* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall Location([in] BSTR Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall UseCase([out, retval] IUMLUseCase** Value);
    [id(0x00000702)]
    HRESULT _stdcall AddExtend([in] IUMLExtend* Value);
    [id(0x00000703)]
    HRESULT _stdcall RemoveExtend([in] IUMLExtend* Value);
    [id(0x00000704)]
    HRESULT _stdcall InsertExtend([in] long Index, [in] IUMLExtend* Value);
    [id(0x00000705)]
    HRESULT _stdcall DeleteExtend([in] long Index);
    [id(0x00000706)]
    HRESULT _stdcall IndexOfExtend([in] IUMLExtend* Value, [out, retval] long* Index);
    [id(0x00000707)]
    HRESULT _stdcall GetExtendCount([out, retval] long* Value);
    [id(0x00000708)]
    HRESULT _stdcall GetExtendAt([in] long Index, [out, retval] IUMLExtend** Value);
  };

  [
    uuid(C67F41D0-7FDE-4738-AB7C-128C6D13B19D),
    version(1.0),
    helpstring("Dispatch interface for UMLInclude Object"),
    dual,
    oleautomation
  ]
  interface IUMLInclude: IUMLRelationship
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Addition([out, retval] IUMLUseCase** Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Addition([in] IUMLUseCase* Value);
    [propget, id(0x00000801)]
    HRESULT _stdcall Base([out, retval] IUMLUseCase** Value);
    [propput, id(0x00000801)]
    HRESULT _stdcall Base([in] IUMLUseCase* Value);
  };

  [
    uuid(C1A691C9-C5DA-465E-A1B7-1FBBF93429A4),
    version(1.0),
    helpstring("Dispatch interface for UMLActor Object"),
    dual,
    oleautomation
  ]
  interface IUMLActor: IUMLClassifier
  {
  };

  [
    uuid(8B779E95-4691-43E3-AB1B-75D3E50B6194),
    version(1.0),
    helpstring("Dispatch interface for UMLActionState Object"),
    dual,
    oleautomation
  ]
  interface IUMLActionState: IUMLSimpleState
  {
    [propget, id(0x00000A00)]
    HRESULT _stdcall IsDynamic([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000A00)]
    HRESULT _stdcall IsDynamic([in] VARIANT_BOOL Value);
    [propget, id(0x00000A01)]
    HRESULT _stdcall DynamicArguments([out, retval] BSTR* Value);
    [propput, id(0x00000A01)]
    HRESULT _stdcall DynamicArguments([in] BSTR Value);
    [propget, id(0x00000A02)]
    HRESULT _stdcall DynamicMultiplicity([out, retval] BSTR* Value);
    [propput, id(0x00000A02)]
    HRESULT _stdcall DynamicMultiplicity([in] BSTR Value);
  };

  [
    uuid(4ACA0449-1731-46B5-9DD5-D743E45C08D9),
    version(1.0),
    helpstring("Dispatch interface for UMLSubactivityState Object"),
    dual,
    oleautomation
  ]
  interface IUMLSubactivityState: IUMLSubmachineState
  {
    [propget, id(0x00000B00)]
    HRESULT _stdcall IsDynamic([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000B00)]
    HRESULT _stdcall IsDynamic([in] VARIANT_BOOL Value);
    [propget, id(0x00000B01)]
    HRESULT _stdcall DynamicArguments([out, retval] BSTR* Value);
    [propput, id(0x00000B01)]
    HRESULT _stdcall DynamicArguments([in] BSTR Value);
    [propget, id(0x00000B02)]
    HRESULT _stdcall DynamicMultiplicity([out, retval] BSTR* Value);
    [propput, id(0x00000B02)]
    HRESULT _stdcall DynamicMultiplicity([in] BSTR Value);
  };

  [
    uuid(7DDE6B0B-E3F2-48DC-ADD4-365AB0B1F146),
    version(1.0),
    helpstring("Dispatch interface for UMLPseudostate Object"),
    dual,
    oleautomation
  ]
  interface IUMLPseudostate: IUMLStateVertex
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall PseudostateKind([out, retval] UMLPseudostateKind* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall PseudostateKind([in] UMLPseudostateKind Value);
  };

  [
    uuid(186475B9-E2BE-46C7-ABD9-3ED471C6064B),
    version(1.0),
    helpstring("Dispatch interface for UMLFinalState Object"),
    dual,
    oleautomation
  ]
  interface IUMLFinalState: IUMLState
  {
  };

  [
    uuid(855F3EA4-2D64-4E0E-8D72-01B67A6BA420),
    version(1.0),
    helpstring("Dispatch interface for UMLUninterpretedAction Object"),
    dual,
    oleautomation
  ]
  interface IUMLUninterpretedAction: IUMLAction
  {
  };

  [
    uuid(70EE6C02-8633-4CC8-899C-6AC330A961AC),
    version(1.0),
    helpstring("Dispatch interface for UMLTimeEvent Object"),
    dual,
    oleautomation
  ]
  interface IUMLTimeEvent: IUMLEvent
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall When([out, retval] BSTR* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall When([in] BSTR Value);
  };

  [
    uuid(E46AAB05-6C9F-4A6B-A30F-6D268FAC76B5),
    version(1.0),
    helpstring("Dispatch interface for UMLChangeEvent Object"),
    dual,
    oleautomation
  ]
  interface IUMLChangeEvent: IUMLEvent
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall ChangeExpression([out, retval] BSTR* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall ChangeExpression([in] BSTR Value);
  };

  [
    uuid(9876358A-5057-463F-BA20-77281F5545A7),
    version(1.0),
    helpstring("Dispatch interface for UMLRealization Object"),
    dual,
    oleautomation
  ]
  interface IUMLRealization: IUMLDependency
  {
  };

  [
    uuid(2B9CC497-A44C-426F-A77D-4FE7D6BCCB08),
    version(1.0),
    helpstring("Dispatch interface for UMLDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLDiagram: IDiagram
  {
  };

  [
    uuid(CA77C1FD-15FE-42E4-966E-3FCE78BA107A),
    version(1.0),
    helpstring("Dispatch interface for UMLClassDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLClassDiagram: IUMLDiagram
  {
  };

  [
    uuid(B07A1760-517B-4598-A671-4595C89DFB28),
    version(1.0),
    helpstring("Dispatch interface for UMLUseCaseDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLUseCaseDiagram: IUMLDiagram
  {
  };

  [
    uuid(502A2C70-D1AF-41D0-8BAA-6C112C3AD713),
    version(1.0),
    helpstring("Dispatch interface for UMLSequenceDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLSequenceDiagram: IUMLDiagram
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall ShowSequenceNumber([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall ShowSequenceNumber([in] VARIANT_BOOL Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall MessageSignature([out, retval] UMLMessageSignatureKind* Value);
    [propput, id(0x00000601)]
    HRESULT _stdcall MessageSignature([in] UMLMessageSignatureKind Value);
    [propget, id(0x00000602)]
    HRESULT _stdcall ShowActivation([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000602)]
    HRESULT _stdcall ShowActivation([in] VARIANT_BOOL Value);
  };

  [
    uuid(6D037C80-5266-45DC-905E-12F977CAFE9C),
    version(1.0),
    helpstring("Dispatch interface for UMLSequenceRoleDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLSequenceRoleDiagram: IUMLDiagram
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall ShowSequenceNumber([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall ShowSequenceNumber([in] VARIANT_BOOL Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall MessageSignature([out, retval] UMLMessageSignatureKind* Value);
    [propput, id(0x00000601)]
    HRESULT _stdcall MessageSignature([in] UMLMessageSignatureKind Value);
    [propget, id(0x00000602)]
    HRESULT _stdcall ShowActivation([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000602)]
    HRESULT _stdcall ShowActivation([in] VARIANT_BOOL Value);
  };

  [
    uuid(49455F9C-24E3-4F57-88F1-9BBB513F48E0),
    version(1.0),
    helpstring("Dispatch interface for UMLCollaborationDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLCollaborationDiagram: IUMLDiagram
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall ShowSequenceNumber([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall ShowSequenceNumber([in] VARIANT_BOOL Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall MessageSignature([out, retval] UMLMessageSignatureKind* Value);
    [propput, id(0x00000601)]
    HRESULT _stdcall MessageSignature([in] UMLMessageSignatureKind Value);
  };

  [
    uuid(933DEAAB-41B8-4878-BD29-F7AFCDBE3FF4),
    version(1.0),
    helpstring("Dispatch interface for UMLCollaborationRoleDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLCollaborationRoleDiagram: IUMLDiagram
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall ShowSequenceNumber([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall ShowSequenceNumber([in] VARIANT_BOOL Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall MessageSignature([out, retval] UMLMessageSignatureKind* Value);
    [propput, id(0x00000601)]
    HRESULT _stdcall MessageSignature([in] UMLMessageSignatureKind Value);
  };

  [
    uuid(398285B1-8C5B-4299-8F50-961C3CDC6B03),
    version(1.0),
    helpstring("Dispatch interface for UMLStatechartDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLStatechartDiagram: IUMLDiagram
  {
  };

  [
    uuid(311DD0BA-9DEB-458E-970D-C14B32A8DAB1),
    version(1.0),
    helpstring("Dispatch interface for UMLActivityDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLActivityDiagram: IUMLDiagram
  {
  };

  [
    uuid(F1AA36CE-52E6-4609-8140-10A2B8726B88),
    version(1.0),
    helpstring("Dispatch interface for UMLComponentDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLComponentDiagram: IUMLDiagram
  {
  };

  [
    uuid(53C5CBBF-7B1F-4E1E-8C47-996A37DFE8DB),
    version(1.0),
    helpstring("Dispatch interface for UMLDeploymentDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLDeploymentDiagram: IUMLDiagram
  {
  };

  [
    uuid(C7D78E4E-C16C-4AB4-B104-63749FA618C0),
    version(1.0),
    helpstring("Dispatch interface for NodeView Object"),
    dual,
    oleautomation
  ]
  interface INodeView: IView
  {
    [propget, id(0x00000400)]
    HRESULT _stdcall Left([out, retval] long* Value);
    [propput, id(0x00000400)]
    HRESULT _stdcall Left([in] long Value);
    [propget, id(0x00000401)]
    HRESULT _stdcall Top([out, retval] long* Value);
    [propput, id(0x00000401)]
    HRESULT _stdcall Top([in] long Value);
    [propget, id(0x00000402)]
    HRESULT _stdcall Width([out, retval] long* Value);
    [propput, id(0x00000402)]
    HRESULT _stdcall Width([in] long Value);
    [propget, id(0x00000403)]
    HRESULT _stdcall Height([out, retval] long* Value);
    [propput, id(0x00000403)]
    HRESULT _stdcall Height([in] long Value);
    [propget, id(0x00000404)]
    HRESULT _stdcall MinWidth([out, retval] long* Value);
    [propget, id(0x00000405)]
    HRESULT _stdcall MinHeight([out, retval] long* Value);
    [propget, id(0x00000406)]
    HRESULT _stdcall AutoResize([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000406)]
    HRESULT _stdcall AutoResize([in] VARIANT_BOOL Value);
  };

  [
    uuid(486A14B6-0BD2-4A0D-B9B7-F3E348D76E80),
    version(1.0),
    helpstring("Dispatch interface for UMLCustomTextView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCustomTextView: INodeView
  {
    [propget, id(0x00000500)]
    HRESULT _stdcall Text([out, retval] BSTR* Value);
    [propput, id(0x00000500)]
    HRESULT _stdcall Text([in] BSTR Value);
  };

  [
    uuid(68D058A9-4660-4760-AF61-0490301FD435),
    version(1.0),
    helpstring("Dispatch interface for UMLNoteView Object"),
    dual,
    oleautomation
  ]
  interface IUMLNoteView: IUMLCustomTextView
  {
  };

  [
    uuid(52A711DA-D714-48FB-AD09-FCB30BE90397),
    version(1.0),
    helpstring("Dispatch interface for EdgeView Object"),
    dual,
    oleautomation
  ]
  interface IEdgeView: IView
  {
    [propget, id(0x00000400)]
    HRESULT _stdcall LineStyle([out, retval] LineStyleKind* Value);
    [propput, id(0x00000400)]
    HRESULT _stdcall LineStyle([in] LineStyleKind Value);
    [propget, id(0x00000401)]
    HRESULT _stdcall Points([out, retval] IPoints** Value);
    [propget, id(0x00000402)]
    HRESULT _stdcall Tail([out, retval] IView** Value);
    [propget, id(0x00000403)]
    HRESULT _stdcall Head([out, retval] IView** Value);
  };

  [
    uuid(950FAFA7-3426-4E19-9CB4-2B835B0A61F2),
    version(1.0),
    helpstring("Dispatch interface for UMLNoteLinkView Object"),
    dual,
    oleautomation
  ]
  interface IUMLNoteLinkView: IEdgeView
  {
  };

  [
    uuid(126FD957-69D8-4491-845E-E4D11827A788),
    version(1.0),
    helpstring("Dispatch interface for Points Object"),
    dual,
    oleautomation
  ]
  interface IPoints: IDispatch
  {
    [id(0x00000200)]
    HRESULT _stdcall ClearPoints(void);
    [id(0x00000201)]
    HRESULT _stdcall AddPoint([in] long X, [in] long Y);
    [id(0x00000202)]
    HRESULT _stdcall InsertPoint([in] long Index, [in] long X, [in] long Y);
    [id(0x00000203)]
    HRESULT _stdcall DeletePoint([in] long Index);
    [id(0x00000204)]
    HRESULT _stdcall BeginUpdate(void);
    [id(0x00000205)]
    HRESULT _stdcall EndUpdate(void);
    [id(0x00000206)]
    HRESULT _stdcall GetPointX([in] long Index, [out, retval] long* ReturnValue);
    [id(0x00000207)]
    HRESULT _stdcall GetPointY([in] long Index, [out, retval] long* ReturnValue);
    [id(0x00000208)]
    HRESULT _stdcall GetPointCount([out, retval] long* ReturnValue);
  };

  [
    uuid(DDA85E7E-50DD-4DB4-97C2-637BCBF83A1C),
    version(1.0),
    helpstring("Dispatch interface for UMLTextView Object"),
    dual,
    oleautomation
  ]
  interface IUMLTextView: IUMLCustomTextView
  {
  };

  [
    uuid(B045C105-4F8A-4787-828E-784BFAF03ACC),
    version(1.0),
    helpstring("Dispatch interface for UMLGeneralNodeView Object"),
    dual,
    oleautomation
  ]
  interface IUMLGeneralNodeView: INodeView
  {
    [propget, id(0x00000500)]
    HRESULT _stdcall StereotypeDisplay([out, retval] UMLStereotypeDisplayKind* Value);
    [propput, id(0x00000500)]
    HRESULT _stdcall StereotypeDisplay([in] UMLStereotypeDisplayKind Value);
    [propget, id(0x00000501)]
    HRESULT _stdcall ShowParentName([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000501)]
    HRESULT _stdcall ShowParentName([in] VARIANT_BOOL Value);
    [propget, id(0x00000502)]
    HRESULT _stdcall NameCompartment([out, retval] IUMLNameCompartmentView** Value);
  };

  [
    uuid(57051984-95C5-4B2E-B496-78CB438F0AB3),
    version(1.0),
    helpstring("Dispatch interface for UMLPackageView Object"),
    dual,
    oleautomation
  ]
  interface IUMLPackageView: IUMLGeneralNodeView
  {
  };

  [
    uuid(F0DFD223-DFD3-49DE-918B-06C6A75891C0),
    version(1.0),
    helpstring("Dispatch interface for UMLModelView Object"),
    dual,
    oleautomation
  ]
  interface IUMLModelView: IUMLPackageView
  {
  };

  [
    uuid(9D391A60-F42E-4DF3-AD9C-C6FE6245935F),
    version(1.0),
    helpstring("Dispatch interface for UMLNameCompartmentView Object"),
    dual,
    oleautomation
  ]
  interface IUMLNameCompartmentView: INodeView
  {
    [propget, id(0x00000500)]
    HRESULT _stdcall NameLabel([out, retval] ILabelView** Value);
    [propget, id(0x00000501)]
    HRESULT _stdcall StereotypeLabel([out, retval] ILabelView** Value);
  };

  [
    uuid(0C755D7C-0C48-4E55-835D-304103090950),
    version(1.0),
    helpstring("Dispatch interface for LabelView Object"),
    dual,
    oleautomation
  ]
  interface ILabelView: INodeView
  {
    [propget, id(0x00000500)]
    HRESULT _stdcall Text([out, retval] BSTR* Value);
  };

  [
    uuid(C5FCC824-AFF3-4039-A903-3D90D67A70ED),
    version(1.0),
    helpstring("Dispatch interface for UMLSubsystemView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSubsystemView: IUMLPackageView
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall SuppressOperations([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000700)]
    HRESULT _stdcall SuppressOperations([in] VARIANT_BOOL Value);
    [propget, id(0x00000701)]
    HRESULT _stdcall ShowOperationSignature([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000701)]
    HRESULT _stdcall ShowOperationSignature([in] VARIANT_BOOL Value);
    [propget, id(0x00000702)]
    HRESULT _stdcall ShowCompartmentStereotype([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000702)]
    HRESULT _stdcall ShowCompartmentStereotype([in] VARIANT_BOOL Value);
    [propget, id(0x00000703)]
    HRESULT _stdcall ShowCompartmentVisibility([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000703)]
    HRESULT _stdcall ShowCompartmentVisibility([in] VARIANT_BOOL Value);
    [propget, id(0x00000704)]
    HRESULT _stdcall OperationCompartment([out, retval] IUMLOperationCompartmentView** Value);
  };

  [
    uuid(D02D2EB5-5F1B-4222-BF9F-4AF710E6FC61),
    version(1.0),
    helpstring("Dispatch interface for UMLListCompartmentView Object"),
    dual,
    oleautomation
  ]
  interface IUMLListCompartmentView: INodeView
  {
  };

  [
    uuid(BCD28A7F-3FBD-4597-BF81-789E7A300832),
    version(1.0),
    helpstring("Dispatch interface for UMLOperationCompartmentView Object"),
    dual,
    oleautomation
  ]
  interface IUMLOperationCompartmentView: IUMLListCompartmentView
  {
  };

  [
    uuid(2F620BE5-CD08-454E-8894-263827DF5A07),
    version(1.0),
    helpstring("Dispatch interface for UMLClassifierView Object"),
    dual,
    oleautomation
  ]
  interface IUMLClassifierView: IUMLGeneralNodeView
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall SuppressAttributes([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall SuppressAttributes([in] VARIANT_BOOL Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall SuppressOperations([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000601)]
    HRESULT _stdcall SuppressOperations([in] VARIANT_BOOL Value);
    [propget, id(0x00000602)]
    HRESULT _stdcall ShowOperationSignature([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000602)]
    HRESULT _stdcall ShowOperationSignature([in] VARIANT_BOOL Value);
    [propget, id(0x00000603)]
    HRESULT _stdcall ShowCompartmentStereotype([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000603)]
    HRESULT _stdcall ShowCompartmentStereotype([in] VARIANT_BOOL Value);
    [propget, id(0x00000604)]
    HRESULT _stdcall ShowCompartmentVisibility([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000604)]
    HRESULT _stdcall ShowCompartmentVisibility([in] VARIANT_BOOL Value);
    [propget, id(0x00000605)]
    HRESULT _stdcall OperationCompartment([out, retval] IUMLOperationCompartmentView** Value);
    [propget, id(0x00000606)]
    HRESULT _stdcall AttributeCompartment([out, retval] IUMLAttributeCompartmentView** Value);
  };

  [
    uuid(6FE2F2EC-12DE-4DAA-AE4F-AA8D26BFE805),
    version(1.0),
    helpstring("Dispatch interface for UMLClassView Object"),
    dual,
    oleautomation
  ]
  interface IUMLClassView: IUMLClassifierView
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall TemplateParameterCompartment([out, retval] IUMLTemplateParameterCompartmentView** Value);
  };

  [
    uuid(64705E84-9117-4CB6-AE1D-60A7A6FB19F5),
    version(1.0),
    helpstring("Dispatch interface for UMLAttributeCompartmentView Object"),
    dual,
    oleautomation
  ]
  interface IUMLAttributeCompartmentView: IUMLListCompartmentView
  {
  };

  [
    uuid(4DF037E5-ECD5-4BEA-9E13-0094C44AF164),
    version(1.0),
    helpstring("Dispatch interface for UMLTemplateParameterCompartmentView Object"),
    dual,
    oleautomation
  ]
  interface IUMLTemplateParameterCompartmentView: IUMLListCompartmentView
  {
  };

  [
    uuid(FB3A0DB3-4A94-4CE1-BDA6-D4D11A68723A),
    version(1.0),
    helpstring("Dispatch interface for UMLInterfaceView Object"),
    dual,
    oleautomation
  ]
  interface IUMLInterfaceView: IUMLClassifierView
  {
  };

  [
    uuid(DD624304-76F9-46DF-A34F-4C5418A1F7D5),
    version(1.0),
    helpstring("Dispatch interface for UMLEnumerationView Object"),
    dual,
    oleautomation
  ]
  interface IUMLEnumerationView: IUMLGeneralNodeView
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall SuppressLiterals([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall SuppressLiterals([in] VARIANT_BOOL Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall SuppressOperations([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000601)]
    HRESULT _stdcall SuppressOperations([in] VARIANT_BOOL Value);
    [propget, id(0x00000602)]
    HRESULT _stdcall ShowOperationSignature([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000602)]
    HRESULT _stdcall ShowOperationSignature([in] VARIANT_BOOL Value);
    [propget, id(0x00000603)]
    HRESULT _stdcall ShowCompartmentStereotype([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000603)]
    HRESULT _stdcall ShowCompartmentStereotype([in] VARIANT_BOOL Value);
    [propget, id(0x00000604)]
    HRESULT _stdcall ShowCompartmentVisibility([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000604)]
    HRESULT _stdcall ShowCompartmentVisibility([in] VARIANT_BOOL Value);
    [propget, id(0x00000605)]
    HRESULT _stdcall EnumerationLiteralCompartment([out, retval] IUMLEnumerationLiteralCompartmentView** Value);
    [propget, id(0x00000606)]
    HRESULT _stdcall OperationCompartment([out, retval] IUMLOperationCompartmentView** Value);
  };

  [
    uuid(D2CFC5BD-F486-4426-9FB4-A42BD9B55693),
    version(1.0),
    helpstring("Dispatch interface for UMLEnumerationLiteralCompartmentView Object"),
    dual,
    oleautomation
  ]
  interface IUMLEnumerationLiteralCompartmentView: IUMLListCompartmentView
  {
  };

  [
    uuid(0C873801-92C7-41EA-B028-9F77673124C0),
    version(1.0),
    helpstring("Dispatch interface for UMLSignalView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSignalView: IUMLClassifierView
  {
  };

  [
    uuid(E3671CB0-A740-4F7C-85C3-8FDCA2A259CE),
    version(1.0),
    helpstring("Dispatch interface for UMLExceptionView Object"),
    dual,
    oleautomation
  ]
  interface IUMLExceptionView: IUMLSignalView
  {
  };

  [
    uuid(DABA74F5-B17F-493E-A026-C910C6D03D9B),
    version(1.0),
    helpstring("Dispatch interface for UMLCustomComponentView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCustomComponentView: IUMLGeneralNodeView
  {
  };

  [
    uuid(FE3A8A08-3DBE-4398-BFD4-B1DAEA732A2F),
    version(1.0),
    helpstring("Dispatch interface for UMLComponentView Object"),
    dual,
    oleautomation
  ]
  interface IUMLComponentView: IUMLCustomComponentView
  {
  };

  [
    uuid(3836CB6B-38F9-4D61-90C5-5CD633892B85),
    version(1.0),
    helpstring("Dispatch interface for UMLComponentInstanceView Object"),
    dual,
    oleautomation
  ]
  interface IUMLComponentInstanceView: IUMLCustomComponentView
  {
  };

  [
    uuid(22684659-3327-491F-837C-D0F85E81948B),
    version(1.0),
    helpstring("Dispatch interface for UMLCustomNodeView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCustomNodeView: IUMLGeneralNodeView
  {
  };

  [
    uuid(5308B1D8-2616-439F-93D3-1F02A60CB9B7),
    version(1.0),
    helpstring("Dispatch interface for UMLNodeView Object"),
    dual,
    oleautomation
  ]
  interface IUMLNodeView: IUMLCustomNodeView
  {
  };

  [
    uuid(A5B6B755-FF51-4C43-B3BB-84598426E15C),
    version(1.0),
    helpstring("Dispatch interface for UMLNodeInstanceView Object"),
    dual,
    oleautomation
  ]
  interface IUMLNodeInstanceView: IUMLCustomNodeView
  {
  };

  [
    uuid(2109A6D0-4843-4D1B-B0FE-275A1B138FCE),
    version(1.0),
    helpstring("Dispatch interface for UMLActorView Object"),
    dual,
    oleautomation
  ]
  interface IUMLActorView: IUMLClassifierView
  {
  };

  [
    uuid(CB2CF2ED-865A-4D83-9ED1-450D754549F5),
    version(1.0),
    helpstring("Dispatch interface for UMLUseCaseView Object"),
    dual,
    oleautomation
  ]
  interface IUMLUseCaseView: IUMLClassifierView
  {
  };

  [
    uuid(C363EF95-BFC7-48A7-99F1-24330608B536),
    version(1.0),
    helpstring("Dispatch interface for UMLCollaborationView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCollaborationView: IUMLGeneralNodeView
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall TemplateParameterCompartment([out, retval] IUMLTemplateParameterCompartmentView** Value);
  };

  [
    uuid(6569588B-FEC5-4A19-A461-E67C81D39EEC),
    version(1.0),
    helpstring("Dispatch interface for UMLCollaborationInstanceSetView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCollaborationInstanceSetView: IUMLGeneralNodeView
  {
  };

  [
    uuid(1AAC9637-3A63-4371-AD7B-D405E4573F5E),
    version(1.0),
    helpstring("Dispatch interface for UMLGeneralEdgeView Object"),
    dual,
    oleautomation
  ]
  interface IUMLGeneralEdgeView: IEdgeView
  {
    [propget, id(0x00000500)]
    HRESULT _stdcall NameLabel([out, retval] IEdgeLabelView** Value);
    [propget, id(0x00000501)]
    HRESULT _stdcall StereotypeLabel([out, retval] IEdgeLabelView** Value);
  };

  [
    uuid(10E06392-85C9-47FC-8966-FCE94CE5C121),
    version(1.0),
    helpstring("Dispatch interface for UMLGeneralizationView Object"),
    dual,
    oleautomation
  ]
  interface IUMLGeneralizationView: IUMLGeneralEdgeView
  {
  };

  [
    uuid(06218FE6-D40E-4460-A3A5-CF8C33D591F1),
    version(1.0),
    helpstring("Dispatch interface for ParasiticView Object"),
    dual,
    oleautomation
  ]
  interface IParasiticView: INodeView
  {
    [propget, id(0x00000500)]
    HRESULT _stdcall Alpha([out, retval] double* Value);
    [propput, id(0x00000500)]
    HRESULT _stdcall Alpha([in] double Value);
    [propget, id(0x00000501)]
    HRESULT _stdcall Distance([out, retval] double* Value);
    [propput, id(0x00000501)]
    HRESULT _stdcall Distance([in] double Value);
  };

  [
    uuid(FE4C988B-5A54-449C-A1F7-32A39FDBBC63),
    version(1.0),
    helpstring("Dispatch interface for EdgeParasiticView Object"),
    dual,
    oleautomation
  ]
  interface IEdgeParasiticView: IParasiticView
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall EdgePosition([out, retval] EdgePositionKind* Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall HostEdge([out, retval] IEdgeView** Value);
  };

  [
    uuid(5278941B-618A-4A6B-9FA1-1845D9F99EB9),
    version(1.0),
    helpstring("Dispatch interface for EdgeLabelView Object"),
    dual,
    oleautomation
  ]
  interface IEdgeLabelView: IEdgeParasiticView
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Text([out, retval] BSTR* Value);
  };

  [
    uuid(F00A2103-3EAA-432A-8383-D09243F47D81),
    version(1.0),
    helpstring("Dispatch interface for UMLAssociationView Object"),
    dual,
    oleautomation
  ]
  interface IUMLAssociationView: IUMLGeneralEdgeView
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall ShowCompartmentStereotype([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000600)]
    HRESULT _stdcall ShowCompartmentStereotype([in] VARIANT_BOOL Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall ShowCompartmentVisibility([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000601)]
    HRESULT _stdcall ShowCompartmentVisibility([in] VARIANT_BOOL Value);
    [propget, id(0x00000602)]
    HRESULT _stdcall HeadRoleNameLabel([out, retval] IEdgeLabelView** Value);
    [propget, id(0x00000603)]
    HRESULT _stdcall TailRoleNameLabel([out, retval] IEdgeLabelView** Value);
    [propget, id(0x00000604)]
    HRESULT _stdcall HeadMultiplicityLabel([out, retval] IEdgeLabelView** Value);
    [propget, id(0x00000605)]
    HRESULT _stdcall TailMultiplicityLabel([out, retval] IEdgeLabelView** Value);
    [propget, id(0x00000606)]
    HRESULT _stdcall TailPropertyLabel([out, retval] IEdgeLabelView** Value);
    [propget, id(0x00000607)]
    HRESULT _stdcall HeadPropertyLabel([out, retval] IEdgeLabelView** Value);
    [propget, id(0x00000608)]
    HRESULT _stdcall HeadQualifierCompartment([out, retval] IUMLQualifierCompartmentView** Value);
    [propget, id(0x00000609)]
    HRESULT _stdcall TailQualifierCompartment([out, retval] IUMLQualifierCompartmentView** Value);
  };

  [
    uuid(F52E5AED-6522-4583-8C25-185C57532C9A),
    version(1.0),
    helpstring("Dispatch interface for UMLQualifierCompartmentView Object"),
    dual,
    oleautomation
  ]
  interface IUMLQualifierCompartmentView: IUMLListCompartmentView
  {
  };

  [
    uuid(A37D798D-99F1-4CF3-A5EF-22183097EF8F),
    version(1.0),
    helpstring("Dispatch interface for UMLAssociationClassView Object"),
    dual,
    oleautomation
  ]
  interface IUMLAssociationClassView: IEdgeView
  {
  };

  [
    uuid(CB2BF5BD-91A5-4D61-B84A-1C6C6B0E9558),
    version(1.0),
    helpstring("Dispatch interface for UMLDependencyView Object"),
    dual,
    oleautomation
  ]
  interface IUMLDependencyView: IUMLGeneralEdgeView
  {
  };

  [
    uuid(B05D874C-CEA9-496D-9356-69461615E86C),
    version(1.0),
    helpstring("Dispatch interface for UMLRealizationView Object"),
    dual,
    oleautomation
  ]
  interface IUMLRealizationView: IUMLGeneralEdgeView
  {
  };

  [
    uuid(0C1C5A82-D0BD-4328-90C5-AA8B1A221923),
    version(1.0),
    helpstring("Dispatch interface for UMLIncludeView Object"),
    dual,
    oleautomation
  ]
  interface IUMLIncludeView: IUMLGeneralEdgeView
  {
  };

  [
    uuid(38A73FC4-9B35-40F6-B475-E228C7B10436),
    version(1.0),
    helpstring("Dispatch interface for UMLExtendView Object"),
    dual,
    oleautomation
  ]
  interface IUMLExtendView: IUMLGeneralEdgeView
  {
  };

  [
    uuid(B22E45C0-E802-4D21-89D8-760FE1FBFD9E),
    version(1.0),
    helpstring("Dispatch interface for UMLCustomColObjectView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCustomColObjectView: IUMLGeneralNodeView
  {
  };

  [
    uuid(31F026B0-8BB5-4E95-A1CA-ADD9C25C2872),
    version(1.0),
    helpstring("Dispatch interface for UMLColObjectView Object"),
    dual,
    oleautomation
  ]
  interface IUMLColObjectView: IUMLCustomColObjectView
  {
  };

  [
    uuid(07D46F21-08E3-485D-B596-FA796510FC36),
    version(1.0),
    helpstring("Dispatch interface for UMLDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLDiagramView: IDiagramView
  {
  };

  [
    uuid(A219F10C-EA93-447F-B3D1-86B93E27C610),
    version(1.0),
    helpstring("Dispatch interface for UMLSequenceDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSequenceDiagramView: IUMLDiagramView
  {
  };

  [
    uuid(B86953E2-93B7-45D3-88C8-9FCB12187ADC),
    version(1.0),
    helpstring("Dispatch interface for UMLCustomSeqObjectView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCustomSeqObjectView: IUMLGeneralNodeView
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall LifeLine([out, retval] IUMLLifeLineView** Value);
  };

  [
    uuid(DBF0967F-1906-49A3-9480-6E9DB49F127A),
    version(1.0),
    helpstring("Dispatch interface for UMLSeqObjectView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSeqObjectView: IUMLCustomSeqObjectView
  {
  };

  [
    uuid(0E0C7F21-D022-4EA7-BABE-27E389BE38E9),
    version(1.0),
    helpstring("Dispatch interface for UMLLifeLineView Object"),
    dual,
    oleautomation
  ]
  interface IUMLLifeLineView: INodeView
  {
  };

  [
    uuid(E01827D5-F0A3-4683-8990-840E984A2673),
    version(1.0),
    helpstring("Dispatch interface for UMLColClassifierRoleView Object"),
    dual,
    oleautomation
  ]
  interface IUMLColClassifierRoleView: IUMLCustomColObjectView
  {
  };

  [
    uuid(0A033957-D701-49A6-86DC-875AE7FF5B90),
    version(1.0),
    helpstring("Dispatch interface for UMLSequenceRoleDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSequenceRoleDiagramView: IUMLDiagramView
  {
  };

  [
    uuid(22EC10E5-34DF-4AA4-AECB-F6E1BCF82F25),
    version(1.0),
    helpstring("Dispatch interface for UMLSeqClassifierRoleView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSeqClassifierRoleView: IUMLCustomSeqObjectView
  {
  };

  [
    uuid(971EBD61-0B8C-48A0-8C85-F08B63FD31E7),
    version(1.0),
    helpstring("Dispatch interface for UMLLinkView Object"),
    dual,
    oleautomation
  ]
  interface IUMLLinkView: IUMLGeneralEdgeView
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall HeadEndLabel([out, retval] IEdgeLabelView** Value);
    [propget, id(0x00000601)]
    HRESULT _stdcall TailEndLabel([out, retval] IEdgeLabelView** Value);
  };

  [
    uuid(A7CD8BF8-B276-4649-BCFA-3387F16FA00E),
    version(1.0),
    helpstring("Dispatch interface for UMLAssociationRoleView Object"),
    dual,
    oleautomation
  ]
  interface IUMLAssociationRoleView: IUMLAssociationView
  {
  };

  [
    uuid(93FC66C7-3238-480A-B10D-8B0818B2A8C2),
    version(1.0),
    helpstring("Dispatch interface for UMLCollaborationDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCollaborationDiagramView: IUMLDiagramView
  {
  };

  [
    uuid(7E85AB07-F320-4598-8215-D2B816B4AC6E),
    version(1.0),
    helpstring("Dispatch interface for EdgeNodeView Object"),
    dual,
    oleautomation
  ]
  interface IEdgeNodeView: IEdgeParasiticView
  {
  };

  [
    uuid(518798B6-F785-42E5-AB6C-AE0957B2BBB7),
    version(1.0),
    helpstring("Dispatch interface for UMLCustomColMessageView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCustomColMessageView: IEdgeNodeView
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall NameLabel([out, retval] INodeLabelView** Value);
    [propget, id(0x00000801)]
    HRESULT _stdcall StereotypeLabel([out, retval] INodeLabelView** Value);
  };

  [
    uuid(B90CFBFC-9B75-4A88-9E42-D7D2BF9D88F2),
    version(1.0),
    helpstring("Dispatch interface for UMLColStimulusView Object"),
    dual,
    oleautomation
  ]
  interface IUMLColStimulusView: IUMLCustomColMessageView
  {
  };

  [
    uuid(95D114FC-57F9-41AA-9483-8ABF4A795A51),
    version(1.0),
    helpstring("Dispatch interface for NodeParasiticView Object"),
    dual,
    oleautomation
  ]
  interface INodeParasiticView: IParasiticView
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall HostNode([out, retval] INodeView** Value);
  };

  [
    uuid(52B76932-06A2-4BE4-9180-BE77B02B3710),
    version(1.0),
    helpstring("Dispatch interface for NodeLabelView Object"),
    dual,
    oleautomation
  ]
  interface INodeLabelView: INodeParasiticView
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall Text([out, retval] BSTR* Value);
  };

  [
    uuid(A3A848D6-36BC-4120-A8C5-C3E0F514010A),
    version(1.0),
    helpstring("Dispatch interface for UMLCustomSeqMessageView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCustomSeqMessageView: IEdgeView
  {
    [propget, id(0x00000500)]
    HRESULT _stdcall Activation([out, retval] IUMLActivationView** Value);
    [propget, id(0x00000501)]
    HRESULT _stdcall NameLabel([out, retval] IEdgeLabelView** Value);
    [propget, id(0x00000502)]
    HRESULT _stdcall StereotypeLabel([out, retval] IEdgeLabelView** Value);
  };

  [
    uuid(5665D900-DB3D-4A22-99ED-B2F731555DCE),
    version(1.0),
    helpstring("Dispatch interface for UMLSeqStimulusView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSeqStimulusView: IUMLCustomSeqMessageView
  {
  };

  [
    uuid(C72B6CBF-199E-49D0-B06C-63BD2062C21D),
    version(1.0),
    helpstring("Dispatch interface for UMLActivationView Object"),
    dual,
    oleautomation
  ]
  interface IUMLActivationView: INodeView
  {
  };

  [
    uuid(A30AE46D-0AFE-4AD8-967C-F7DA4D509C31),
    version(1.0),
    helpstring("Dispatch interface for UMLCollaborationRoleDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCollaborationRoleDiagramView: IUMLDiagramView
  {
  };

  [
    uuid(C5617B4B-56B5-42D7-AD89-037DB39579F8),
    version(1.0),
    helpstring("Dispatch interface for UMLColMessageView Object"),
    dual,
    oleautomation
  ]
  interface IUMLColMessageView: IUMLCustomColMessageView
  {
  };

  [
    uuid(95830989-53EC-42C6-83E8-7A130904D171),
    version(1.0),
    helpstring("Dispatch interface for UMLSeqMessageView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSeqMessageView: IUMLCustomSeqMessageView
  {
  };

  [
    uuid(BEBE4753-AD9B-4C1D-B82D-DE94BA3C9D5B),
    version(1.0),
    helpstring("Dispatch interface for UMLStatechartDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLStatechartDiagramView: IUMLDiagramView
  {
  };

  [
    uuid(0BE1FC45-BA96-4F0C-8DE5-8E842D7F29EE),
    version(1.0),
    helpstring("Dispatch interface for UMLCustomStateView Object"),
    dual,
    oleautomation
  ]
  interface IUMLCustomStateView: IUMLGeneralNodeView
  {
    [propget, id(0x00000600)]
    HRESULT _stdcall InternalTransitionCompartment([out, retval] IUMLInternalTransitionCompartmentView** Value);
  };

  [
    uuid(F0601041-17EC-450C-BD2D-229DEE32FEAC),
    version(1.0),
    helpstring("Dispatch interface for UMLStateView Object"),
    dual,
    oleautomation
  ]
  interface IUMLStateView: IUMLCustomStateView
  {
  };

  [
    uuid(4D2E49F0-AF47-4EE0-A7E2-BBAA0CED0376),
    version(1.0),
    helpstring("Dispatch interface for UMLInternalTransitionCompartmentView Object"),
    dual,
    oleautomation
  ]
  interface IUMLInternalTransitionCompartmentView: IUMLListCompartmentView
  {
  };

  [
    uuid(1411A64F-8CE3-41AA-B2C8-E2CA0CD75953),
    version(1.0),
    helpstring("Dispatch interface for UMLSubmachineStateView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSubmachineStateView: IUMLCustomStateView
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall IncludeLabel([out, retval] ILabelView** Value);
  };

  [
    uuid(152D3A04-2300-4AC5-9C95-307B2841FB71),
    version(1.0),
    helpstring("Dispatch interface for UMLPseudostateView Object"),
    dual,
    oleautomation
  ]
  interface IUMLPseudostateView: INodeView
  {
  };

  [
    uuid(0D795CEF-FC50-4156-AC44-8892B32F9E92),
    version(1.0),
    helpstring("Dispatch interface for UMLFinalStateView Object"),
    dual,
    oleautomation
  ]
  interface IUMLFinalStateView: INodeView
  {
  };

  [
    uuid(1F98E949-33CC-4810-A15F-F16247B67946),
    version(1.0),
    helpstring("Dispatch interface for UMLActivityDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLActivityDiagramView: IUMLDiagramView
  {
  };

  [
    uuid(C55A4A15-5AAE-460C-95F9-BA08D2EECDD0),
    version(1.0),
    helpstring("Dispatch interface for UMLActionStateView Object"),
    dual,
    oleautomation
  ]
  interface IUMLActionStateView: IUMLGeneralNodeView
  {
  };

  [
    uuid(CBD743CB-8318-4358-8869-0E6A4606E46E),
    version(1.0),
    helpstring("Dispatch interface for UMLSubactivityStateView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSubactivityStateView: IUMLActionStateView
  {
    [propget, id(0x00000700)]
    HRESULT _stdcall IncludeLabel([out, retval] ILabelView** Value);
  };

  [
    uuid(404051FB-AAC3-46A5-A783-9DF40E848DCD),
    version(1.0),
    helpstring("Dispatch interface for UMLSwimlaneView Object"),
    dual,
    oleautomation
  ]
  interface IUMLSwimlaneView: INodeView
  {
  };

  [
    uuid(EF173B12-C59D-4CDA-858B-A7A7CC4BFDC9),
    version(1.0),
    helpstring("Dispatch interface for UMLTransitionView Object"),
    dual,
    oleautomation
  ]
  interface IUMLTransitionView: IUMLGeneralEdgeView
  {
  };

  [
    uuid(51D0E4E0-68D9-4982-B8A4-72BD97FBAC3A),
    version(1.0),
    helpstring("Dispatch interface for ProjectManager Object"),
    dual,
    oleautomation
  ]
  interface IProjectManager: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall FileName([out, retval] BSTR* Value);
    [propget, id(0x00000201)]
    HRESULT _stdcall Modified([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000202)]
    HRESULT _stdcall UnitsModified([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000203)]
    HRESULT _stdcall Project([out, retval] IUMLProject** Value);
    [id(0x00000204)]
    HRESULT _stdcall GetUnitDocumentCount([out, retval] long* Value);
    [id(0x00000205)]
    HRESULT _stdcall GetUnitDocumentAt([in] long Index, [out, retval] IUMLUnitDocument** Value);
    [propget, id(0x00000206)]
    HRESULT _stdcall ProjectDocument([out, retval] IUMLProjectDocument** Value);
    [id(0x00000207)]
    HRESULT _stdcall NewProject(void);
    [id(0x00000208)]
    HRESULT _stdcall NewProjectByApproach([in] BSTR ApproachName);
    [id(0x00000209)]
    HRESULT _stdcall OpenProject([in] BSTR FileName);
    [id(0x0000020A)]
    HRESULT _stdcall SaveProject(void);
    [id(0x0000020B)]
    HRESULT _stdcall SaveProjectAs([in] BSTR FileName);
    [id(0x0000020C)]
    HRESULT _stdcall SaveAllUnits(void);
    [id(0x0000020D)]
    HRESULT _stdcall CloseProject(void);
    [id(0x0000020E)]
    HRESULT _stdcall ImportFramework([in] IUMLPackage* OwnerPackage, [in] BSTR FrameworkName);
    [id(0x0000020F)]
    HRESULT _stdcall ImportModelFragment([in] IUMLPackage* OwnerPackage, [in] BSTR FileName);
    [id(0x00000210)]
    HRESULT _stdcall ExportModelFragment([in] IUMLPackage* APackage, [in] BSTR FileName);
    [id(0x00000211)]
    HRESULT _stdcall SeparateUnit([in] IUMLPackage* APackage, [in] BSTR FileName, [out, retval] IUMLUnitDocument** ReturnValue);
    [id(0x00000212)]
    HRESULT _stdcall MergeUnit([in] IUMLPackage* APackage);
    [id(0x00000213)]
    HRESULT _stdcall OpenUnit([in] IUMLPackage* ABasePackage, [in] BSTR FileName, [out, retval] IUMLUnitDocument** ReturnValue);
    [id(0x00000214)]
    HRESULT _stdcall DeleteUnit([in] IUMLPackage* APackage);
    [id(0x00000215)]
    HRESULT _stdcall UpdateDocuments(void);
    [id(0x00000216)]
    HRESULT _stdcall GetAvailableFrameworkAt([in] long Index, [out, retval] BSTR* ReturnValue);
    [id(0x00000217)]
    HRESULT _stdcall GetAvailableFrameworkCount([out, retval] long* ReturnValue);
    [id(0x00000218)]
    HRESULT _stdcall GetAvailableApproachAt([in] long Index, [out, retval] BSTR* ReturnValue);
    [id(0x00000219)]
    HRESULT _stdcall GetAvailableApproachCount([out, retval] long* ReturnValue);
  };

  [
    uuid(67DB81F5-D533-440B-AB73-90B5016771A3),
    version(1.0),
    helpstring("Dispatch interface for UMLProject Object"),
    dual,
    oleautomation
  ]
  interface IUMLProject: IUMLPackage
  {
    [propget, id(0x00000B00)]
    HRESULT _stdcall Title([out, retval] BSTR* Value);
    [propput, id(0x00000B00)]
    HRESULT _stdcall Title([in] BSTR Value);
    [propget, id(0x00000B01)]
    HRESULT _stdcall Author([out, retval] BSTR* Value);
    [propput, id(0x00000B01)]
    HRESULT _stdcall Author([in] BSTR Value);
    [propget, id(0x00000B02)]
    HRESULT _stdcall Company([out, retval] BSTR* Value);
    [propput, id(0x00000B02)]
    HRESULT _stdcall Company([in] BSTR Value);
    [propget, id(0x00000B03)]
    HRESULT _stdcall Copyright([out, retval] BSTR* Value);
    [propput, id(0x00000B03)]
    HRESULT _stdcall Copyright([in] BSTR Value);
  };

  [
    uuid(032B5C5C-7DBC-4D79-9824-F7964993B2E8),
    version(1.0),
    helpstring("Dispatch interface for UMLDocument Object"),
    dual,
    oleautomation
  ]
  interface IUMLDocument: IDocument
  {
  };

  [
    uuid(B152C58C-9891-4482-BA45-4C68AADD3CEE),
    version(1.0),
    helpstring("Dispatch interface for UMLUnitDocument Object"),
    dual,
    oleautomation
  ]
  interface IUMLUnitDocument: IUMLDocument
  {
    [propget, id(0x00000400)]
    HRESULT _stdcall ParentUnitDocument([out, retval] IUMLUnitDocument** Value);
    [id(0x00000401)]
    HRESULT _stdcall GetSubUnitDocumentCount([out, retval] long* Value);
    [id(0x00000402)]
    HRESULT _stdcall GetSubUnitDocumentAt([in] long Index, [out, retval] IUMLUnitDocument** Value);
  };

  [
    uuid(A46A8EA6-B4A0-47EC-9600-AA3B04287026),
    version(1.0),
    helpstring("Dispatch interface for UMLProjectDocument Object"),
    dual,
    oleautomation
  ]
  interface IUMLProjectDocument: IUMLUnitDocument
  {
  };

  [
    uuid(06AA1D89-25DC-4C70-B35D-507ABDF79CB5),
    version(1.0),
    helpstring("Dispatch interface for SelectionManager Object"),
    dual,
    oleautomation
  ]
  interface ISelectionManager: IDispatch
  {
    [id(0x00000200)]
    HRESULT _stdcall GetSelectedModelCount([out, retval] long* Value);
    [id(0x00000201)]
    HRESULT _stdcall GetSelectedModelAt([in] long Index, [out, retval] IModel** Value);
    [id(0x00000202)]
    HRESULT _stdcall GetSelectedViewCount([out, retval] long* Value);
    [id(0x00000203)]
    HRESULT _stdcall GetSelectedViewAt([in] long Index, [out, retval] IView** Value);
    [propget, id(0x00000204)]
    HRESULT _stdcall ActiveDiagram([out, retval] IDiagram** Value);
    [propget, id(0x00000205)]
    HRESULT _stdcall ActiveDiagramView([out, retval] IDiagramView** Value);
    [id(0x00000206)]
    HRESULT _stdcall SelectAll(void);
    [id(0x00000207)]
    HRESULT _stdcall DeselectAll(void);
    [id(0x00000208)]
    HRESULT _stdcall SelectModel([in] IModel* AModel);
    [id(0x00000209)]
    HRESULT _stdcall SelectView([in] IView* AView);
    [id(0x0000020A)]
    HRESULT _stdcall SelectAdditionalModel([in] IModel* AModel);
    [id(0x0000020B)]
    HRESULT _stdcall SelectAdditionalView([in] IView* AView);
    [id(0x0000020C)]
    HRESULT _stdcall SelectArea([in] long X1, [in] long Y1, [in] long X2, [in] long Y2);
    [id(0x0000020D)]
    HRESULT _stdcall SelectAdditionalArea([in] long X1, [in] long Y1, [in] long X2, [in] long Y2);
    [id(0x0000020E)]
    HRESULT _stdcall DeselectModel([in] IModel* AModel);
    [id(0x0000020F)]
    HRESULT _stdcall DeselectView([in] IView* AView);
    [id(0x00000210)]
    HRESULT _stdcall DeselectAllModels(void);
    [id(0x00000211)]
    HRESULT _stdcall DeselectAllViews(void);
  };

  [
    uuid(02133590-EBC6-4DD0-87F6-0D3236B1CDE0),
    version(1.0),
    helpstring("Dispatch interface for ElementSelector Object"),
    dual,
    oleautomation
  ]
  interface IElementSelector: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall AllowNull([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000200)]
    HRESULT _stdcall AllowNull([in] VARIANT_BOOL Value);
    [id(0x00000201)]
    HRESULT _stdcall Filter([in] ElementFilteringKind Filtering);
    [id(0x00000202)]
    HRESULT _stdcall ClearSelectableModels(void);
    [id(0x00000203)]
    HRESULT _stdcall AddSelectableModel([in] BSTR ClassName);
    [id(0x00000204)]
    HRESULT _stdcall RemoveSelectableModel([in] BSTR ClassName);
    [id(0x00000205)]
    HRESULT _stdcall Execute([in] BSTR Title, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000206)]
    HRESULT _stdcall GetSelectedModel([out, retval] IModel** ReturnValue);
  };

  [
    uuid(23E67360-A1DB-42B6-8DB1-37544A49700D),
    version(1.0),
    helpstring("Dispatch interface for MetaModel Object"),
    dual,
    oleautomation
  ]
  interface IMetaModel: IMetaElement
  {
    [id(0x00000300)]
    HRESULT _stdcall GetMetaClassCount([out, retval] long* Value);
    [id(0x00000301)]
    HRESULT _stdcall GetMetaClassAt([in] long Index, [out, retval] IMetaClass** Value);
    [id(0x00000302)]
    HRESULT _stdcall GetMetaEnumerationCount([out, retval] long* Value);
    [id(0x00000303)]
    HRESULT _stdcall GetMetaEnumerationAt([in] long Index, [out, retval] IMetaEnumeration** Value);
    [id(0x00000304)]
    HRESULT _stdcall GetMetaDataTypeCount([out, retval] long* Value);
    [id(0x00000305)]
    HRESULT _stdcall GetMetaDataTypeAt([in] long Index, [out, retval] IMetaDataType** Value);
    [id(0x00000306)]
    HRESULT _stdcall GetMetaPrimitiveTypeCount([out, retval] long* Value);
    [id(0x00000307)]
    HRESULT _stdcall GetMetaPrimitiveTypeAt([in] long Index, [out, retval] IMetaPrimitiveType** Value);
    [id(0x00000308)]
    HRESULT _stdcall FindInstanceByGuid([in] BSTR Guid, [out, retval] IElement** ReturnValue);
    [id(0x00000309)]
    HRESULT _stdcall FindMetaClassifier([in] BSTR Name, [out, retval] IMetaClassifier** ReturnValue);
    [id(0x0000030A)]
    HRESULT _stdcall FindMetaClass([in] BSTR Name, [out, retval] IMetaClass** ReturnValue);
    [id(0x0000030B)]
    HRESULT _stdcall FindMetaEnumeration([in] BSTR Name, [out, retval] IMetaEnumeration** ReturnValue);
    [id(0x0000030C)]
    HRESULT _stdcall FindMetaDataType([in] BSTR Name, [out, retval] IMetaDataType** ReturnValue);
    [id(0x0000030D)]
    HRESULT _stdcall FindPrimitiveType([in] BSTR Name, [out, retval] IMetaPrimitiveType** ReturnValue);
  };

  [
    uuid(F1C9F998-AEF2-41C1-B8F9-DD0D062D3D9F),
    version(1.0),
    helpstring("Dispatch interface for MetaEnumeration Object"),
    dual,
    oleautomation
  ]
  interface IMetaEnumeration: IMetaClassifier
  {
    [id(0x00000400)]
    HRESULT _stdcall GetMetaLiteralCount([out, retval] long* Value);
    [id(0x00000401)]
    HRESULT _stdcall GetMetaLiteralAt([in] long Index, [out, retval] IMetaLiteral** Value);
  };

  [
    uuid(874A5952-FC22-40EF-AE15-716B721ACFDC),
    version(1.0),
    helpstring("Dispatch interface for MetaLiteral Object"),
    dual,
    oleautomation
  ]
  interface IMetaLiteral: IMetaElement
  {
  };

  [
    uuid(AAFA9E9F-B4E6-432A-9AEB-A4940C8C9170),
    version(1.0),
    helpstring("Dispatch interface for MetaDataType Object"),
    dual,
    oleautomation
  ]
  interface IMetaDataType: IMetaClassifier
  {
  };

  [
    uuid(BABD74BD-8212-4EFD-AEC1-C7AB42247416),
    version(1.0),
    helpstring("Dispatch interface for MetaPrimitiveType Object"),
    dual,
    oleautomation
  ]
  interface IMetaPrimitiveType: IMetaClassifier
  {
  };

  [
    uuid(71FA146F-DE8F-433E-B613-351E958BC4BF),
    version(1.0),
    helpstring("Dispatch interface for ExtensionManager Object"),
    dual,
    oleautomation
  ]
  interface IExtensionManager: IDispatch
  {
    [id(0x00000200)]
    HRESULT _stdcall GetIncludedProfileCount([out, retval] long* Value);
    [id(0x00000201)]
    HRESULT _stdcall GetIncludedProfileAt([in] long Index, [out, retval] IProfile** Value);
    [id(0x00000202)]
    HRESULT _stdcall GetAvailableProfileCount([out, retval] long* Value);
    [id(0x00000203)]
    HRESULT _stdcall GetAvailableProfileAt([in] long Index, [out, retval] IProfile** Value);
    [id(0x00000204)]
    HRESULT _stdcall ClearIncludedProfiles(void);
    [id(0x00000205)]
    HRESULT _stdcall IncludeProfile([in] BSTR Profile);
    [id(0x00000206)]
    HRESULT _stdcall ExcludeProfile([in] BSTR Profile);
    [id(0x00000207)]
    HRESULT _stdcall FindAvailableProfile([in] BSTR Name, [out, retval] IProfile** ReturnValue);
    [id(0x00000208)]
    HRESULT _stdcall FindIncludedProfile([in] BSTR Name, [out, retval] IProfile** ReturnValue);
    [id(0x00000209)]
    HRESULT _stdcall FindStereotype([in] BSTR Profile, [in] BSTR Name, [in] BSTR BaseClass, [out, retval] IStereotype** ReturnValue);
    [id(0x0000020A)]
    HRESULT _stdcall FindFirstStereotype([in] BSTR Name, [in] BSTR BaseClass, [out, retval] IStereotype** ReturnValue);
    [id(0x0000020B)]
    HRESULT _stdcall FindTagDefinition([in] BSTR Profile, [in] BSTR TagDefinitionSet, [in] BSTR Name, [out, retval] ITagDefinition** ReturnValue);
    [id(0x0000020C)]
    HRESULT _stdcall FindTagDefinitionSet([in] BSTR Profile, [in] BSTR Name, [out, retval] ITagDefinitionSet** ReturnValue);
  };

  [
    uuid(A8C4080F-1731-4F02-81AC-B3DCA65C46C3),
    version(1.0),
    helpstring("Dispatch interface for ElementListSelector Object"),
    dual,
    oleautomation
  ]
  interface IElementListSelector: IDispatch
  {
    [propget, id(0x00000200)]
    HRESULT _stdcall AllowNull([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000200)]
    HRESULT _stdcall AllowNull([in] VARIANT_BOOL Value);
    [id(0x00000201)]
    HRESULT _stdcall ClearListElements(void);
    [id(0x00000202)]
    HRESULT _stdcall AddListElement([in] IModel* AModel);
    [id(0x00000203)]
    HRESULT _stdcall AddListElementsByCollection([in] IModel* AModel, [in] BSTR CollectionName, [in] VARIANT_BOOL ShowInherited);
    [id(0x00000204)]
    HRESULT _stdcall AddListElementsByClass([in] BSTR MetaClassName, [in] VARIANT_BOOL IncludeChildInstances);
    [id(0x00000205)]
    HRESULT _stdcall Execute([in] BSTR Title, [out, retval] VARIANT_BOOL* ReturnValue);
    [id(0x00000206)]
    HRESULT _stdcall GetSelectedModel([out, retval] IModel** ReturnValue);
  };

  [
    uuid(DBD4FF57-4477-41F6-9046-77C1F3643A8A),
    version(1.0),
    helpstring("Dispatch interface for EventPublisher Object"),
    dual,
    oleautomation
  ]
  interface IEventPublisher: IDispatch
  {
    [id(0x00000200)]
    HRESULT _stdcall Subscribe([in] IEventSubscriber* ASubscriber, [in] EventKind AEvent);
    [id(0x00000201)]
    HRESULT _stdcall SubscribeAll([in] IEventSubscriber* ASubscriber);
    [id(0x00000202)]
    HRESULT _stdcall Unsubscribe([in] IEventSubscriber* ASubscriber, [in] EventKind AEvent);
    [id(0x00000203)]
    HRESULT _stdcall UnsubscribeAll([in] IEventSubscriber* ASubscriber);
    [id(0x00000204)]
    HRESULT _stdcall GetEventArgModelAt([in] long Index, [out, retval] IModel** ReturnValue);
    [id(0x00000205)]
    HRESULT _stdcall GetEventArgModelCount([out, retval] long* ReturnValue);
    [id(0x00000206)]
    HRESULT _stdcall GetEventArgViewAt([in] long Index, [out, retval] IView** ReturnValue);
    [id(0x00000207)]
    HRESULT _stdcall GetEventArgViewCount([out, retval] long* ReturnValue);
    [id(0x00000208)]
    HRESULT _stdcall GetEventArgDocument([out, retval] IDocument** ReturnValue);
    [id(0x00000209)]
    HRESULT _stdcall GetEventArgUnit([out, retval] IUMLUnitDocument** ReturnValue);
  };

  [
    uuid(CF0852B3-22FF-4EE9-A3E0-8FA299C689DA),
    version(1.0),
    helpstring("Interface for EventSubscriber Object"),
    oleautomation
  ]
  interface IEventSubscriber: IUnknown
  {
    [id(0x00000200)]
    HRESULT _stdcall NotifyEvent([in] EventKind AEvent);
  };

  [
    uuid(30DFD772-7B09-4EEE-9705-C13EE93D2A44),
    version(1.0),
    helpstring("Dispatch interface for UMLClassDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLClassDiagramView: IUMLDiagramView
  {
  };

  [
    uuid(64FD0840-68E0-4ADF-A30A-F9D62E2DFC4C),
    version(1.0),
    helpstring("Dispatch interface for UMLDeploymentDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLDeploymentDiagramView: IUMLDiagramView
  {
  };

  [
    uuid(A6101CC7-50F0-490A-B18F-6F21C30EFA85),
    version(1.0),
    helpstring("Dispatch interface for UMLComponentDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLComponentDiagramView: IUMLDiagramView
  {
  };

  [
    uuid(8BAD4803-8AA1-49E4-9F0F-36CC2EF617F1),
    version(1.0),
    helpstring("Dispatch interface for UMLUseCaseDiagramView Object"),
    dual,
    oleautomation
  ]
  interface IUMLUseCaseDiagramView: IUMLDiagramView
  {
  };

  [
    uuid(22CCD7E9-C8AE-41C9-B7E0-00E42DE57D31),
    version(1.0),
    helpstring("Dispatch interface for NodeNodeView Object"),
    dual,
    oleautomation
  ]
  interface INodeNodeView: INodeParasiticView
  {
  };

  [
    uuid(73E2074C-E519-4598-BD8C-DFFD53EFE5AB),
    version(1.0),
    helpstring("Dispatch interface for UMLDataValue Object"),
    dual,
    oleautomation
  ]
  interface IUMLDataValue: IUMLInstance
  {
  };

  [
    uuid(3A87707E-9080-47EA-9E96-2D75A9D153BA),
    version(1.0),
    helpstring("Dispatch interface for UMLSubsystemInstance Object"),
    dual,
    oleautomation
  ]
  interface IUMLSubsystemInstance: IUMLInstance
  {
  };

  [
    uuid(0BAC9770-BD34-49C9-89F9-F58DFFBAF1B4),
    version(1.0),
    helpstring("Dispatch interface for UMLUseCaseInstance Object"),
    dual,
    oleautomation
  ]
  interface IUMLUseCaseInstance: IUMLInstance
  {
  };

  [
    uuid(ABACE03E-25C3-471D-99AF-0DDE0FD9F733),
    version(1.0),
    helpstring("Dispatch interface for UMLSynchState Object"),
    dual,
    oleautomation
  ]
  interface IUMLSynchState: IUMLStateVertex
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall Bound([out, retval] long* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall Bound([in] long Value);
  };

  [
    uuid(D2341FB1-F55B-4043-A524-D219430DA27D),
    version(1.0),
    helpstring("Dispatch interface for UMLStubState Object"),
    dual,
    oleautomation
  ]
  interface IUMLStubState: IUMLStateVertex
  {
    [propget, id(0x00000800)]
    HRESULT _stdcall ReferenceState([out, retval] BSTR* Value);
    [propput, id(0x00000800)]
    HRESULT _stdcall ReferenceState([in] BSTR Value);
  };

  [
    uuid(70F0A224-BE87-4D4B-8C53-1F17E79EAC1C),
    version(1.0),
    helpstring("Dispatch interface for UMLSignalAcceptState Object"),
    dual,
    oleautomation
  ]
  interface IUMLSignalAcceptState: IUMLActionState
  {
  };

  [
    uuid(564C7539-033C-4D11-BD1F-E984A320785B),
    version(1.0),
    helpstring("Dispatch interface for UMLCallState Object"),
    dual,
    oleautomation
  ]
  interface IUMLCallState: IUMLActionState
  {
  };

  [
    uuid(EAD0853A-1746-453C-9B64-11AC3586ACD6),
    version(1.0),
    helpstring("Dispatch interface for UMLSignalSendState Object"),
    dual,
    oleautomation
  ]
  interface IUMLSignalSendState: IUMLActionState
  {
  };

  [
    uuid(48BA99AC-0B8B-47AA-8C9E-0E3BE932E7F8),
    version(1.0),
    helpstring("Dispatch interface for UMLFlowFinalState Object"),
    dual,
    oleautomation
  ]
  interface IUMLFlowFinalState: IUMLFinalState
  {
  };

  [
    uuid(D5EB8A2E-7154-40F9-A33E-E83B940807F8),
    version(1.0),
    helpstring("Dispatch interface for UMLProgrammingLanguageDataType Object"),
    dual,
    oleautomation
  ]
  interface IUMLProgrammingLanguageDataType: IUMLDataType
  {
    [propget, id(0x00000B00)]
    HRESULT _stdcall Expression([out, retval] BSTR* Value);
    [propput, id(0x00000B00)]
    HRESULT _stdcall Expression([in] BSTR Value);
  };

  [
    uuid(7C84E1B8-A335-4E69-9230-A2BEC9F9509A),
    version(1.0),
    helpstring("Dispatch interface for UMLPrimitive Object"),
    dual,
    oleautomation
  ]
  interface IUMLPrimitive: IUMLDataType
  {
  };

  [
    uuid(655B6830-178F-4632-B7D2-1DF518F4599F),
    version(1.0),
    helpstring("Dispatch interface for UMLTerminateAction Object"),
    dual,
    oleautomation
  ]
  interface IUMLTerminateAction: IUMLAction
  {
  };

  [
    uuid(E88B8D27-000F-4108-A2EF-00E5031F095B),
    version(1.0),
    helpstring("Dispatch interface for UMLDestroyAction Object"),
    dual,
    oleautomation
  ]
  interface IUMLDestroyAction: IUMLAction
  {
  };

  [
    uuid(18C78FBA-D71B-4221-A34A-253338D864CB),
    version(1.0),
    helpstring("Dispatch interface for UMLReturnAction Object"),
    dual,
    oleautomation
  ]
  interface IUMLReturnAction: IUMLAction
  {
  };

  [
    uuid(793DE345-9E62-4AAF-AB25-F035B55F8CEB),
    version(1.0),
    helpstring("Dispatch interface for UMLCompositeStructureDiagram Object"),
    dual,
    oleautomation
  ]
  interface IUMLCompositeStructureDiagram: IUMLDiagram
  {
  };

  [
    uuid(0F84CF65-8944-4ED4-8C57-49C96616FEBA),
    version(1.0),
    helpstring("Interface for StarUMLAddIn Object"),
    oleautomation
  ]
  interface IStarUMLAddIn: IUnknown
  {
    [id(0x00000200)]
    HRESULT _stdcall InitializeAddIn(void);
    [id(0x00000201)]
    HRESULT _stdcall FinalizeAddIn(void);
    [id(0x00000202)]
    HRESULT _stdcall DoMenuAction([in] long ActionID);
  };

  [
    uuid(414633E5-89AA-440F-8B07-F8EFD4B6F539),
    helpstring("Interface to build a TNX expression"),
    hidden
  ]
  interface IExprBuilder: IUnknown
  {
    [id(0x00000069)]
    HRESULT _stdcall NewNotationOperation([in] BSTR Filepath, [in] int Pos);
    [id(0x00000066)]
    HRESULT _stdcall NewOperation([in] BSTR Oper, [in] int Pos);
    [id(0x00000067)]
    HRESULT _stdcall EndOperation(void);
    [id(0x00000068)]
    HRESULT _stdcall PrimExpr([in] VARIANT Value, [in] int Pos);
    [id(0x0000006A)]
    HRESULT _stdcall IdentExpr([in] BSTR Id, [in] int Pos);
    [id(0x0000006B)]
    HRESULT _stdcall NewDrawBitmapOperation([in] BSTR FilePath, [in] int Pos);
  };

  [
    uuid(E155F938-9A1D-4555-9831-7E3C18B27F83),
    version(1.0),
    helpstring("WhiteStarUMLApplication Object")
  ]
  coclass WhiteStarUMLApplication
  {
    [default] interface IStarUMLApplication;
  };

  [
    uuid(E5833835-D56A-4973-8547-7255208BF164),
    helpstring("TExprBuilder"),
    noncreatable,
    hidden
  ]
  coclass TExprBuilder
  {
    [default] interface IExprBuilder;
  };

};
