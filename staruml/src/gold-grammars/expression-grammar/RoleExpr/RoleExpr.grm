"Start Symbol" = <classifier_role_expression>
"Case Sensitive" = False                
               
! -------------------------------------------------
! Character Sets
! -------------------------------------------------

{Visibility Chars} = [+-#~]
{Restricted Chars} = {All Space} + {Visibility Chars} ! Restricted Chars should not start or end an indentifier as they may collide with other symbols                   
{Boundary String Chars} = {All Letters} +  {Number} + {Euro Sign} + [_,;/\.&@$%*"`’'']
{String Chars} = {Boundary String Chars} + {Restricted Chars}
               
! -------------------------------------------------
! Terminals
! -------------------------------------------------
id = {Boundary String Chars}+ ( {Restricted Chars}+ {Boundary String Chars}+ )*

stereotypeStart = '<<'
! Spaces to avoid collision with close angle bracket
stereotypeEnd = {All Space}* '>>' 

openParen = {All Space}* '(' {All Space}*
closeParen = {All Space}* ')'
openSquareBracket = {All Space}* '[' {All Space}*
closeSquareBracket = {All Space}* ']'
openAngleBracket = {All Space}* '<' {All Space}*
closeAngleBracket = {All Space}* '>'
                  

! -------------------------------------------------
! Rules
! -------------------------------------------------

! The grammar starts below
<classifier_role_expression> ::= <stereotype_part> <classifier_role_name_part> <classifier_name_part>
                                                
<stereotype_part> ::= stereotypeStart <stereotype> stereotypeEnd
                   |  <>

<stereotype> ::= id
 
<classifier_role_name_part> ::= '/' <visibility> <classifier_role_name>
                             | <visibility> <classifier_role_name>
                             | <>

<visibility> ::= '+' | '#' | '-' | '~'
              | <> 

<classifier_role_name> ::= <id_expr>

<classifier_name_part> ::= ':' <classifier_name>
                            | <>

<classifier_name> ::= <id_expr>
       
<nullable_id_expr> ::= <id_expr> | <>

<id_expr> ::= id
      | id openParen <nullable_id_expr> closeParen
      | id openSquareBracket <nullable_id_expr> closeSquareBracket
      | id openAngleBracket <nullable_id_expr> closeAngleBracket        

