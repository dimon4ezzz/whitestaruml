"Start Symbol" = <operation_expression>
"Case Sensitive" = False                
               
! -------------------------------------------------
! Character Sets
! -------------------------------------------------
{Boundary String Chars} = {All Letters} + {Number} + {Euro Sign} + [_/\.@$%*`’'']
! Restricted Chars should not start or end an indentifier as they may collide with other symbols 
{Restricted Chars} = [+#-~]
{All Accepted Chars} = {Boundary String Chars} + {Restricted Chars}

! -------------------------------------------------
! Terminals
! -------------------------------------------------
id = {Boundary String Chars}+ ( {Restricted Chars}+ {Boundary String Chars}+ )*

stereotypeStart = '<<'
! Spaces to avoid collision with close angle bracket
stereotypeEnd = {All Space}* '>>' 

openSquareBracket = {All Space}* '[' {All Space}*
closeSquareBracket = {All Space}* ']'
openAngleBracket = {All Space}* '<' {All Space}*
closeAngleBracket = {All Space}* '>'
                  
! -------------------------------------------------
! Rules
! -------------------------------------------------

! The grammar starts below
<operation_expression> ::= <stereotype_part> <visibility> <operation_name> <parameter_list_part> <return_type_expression_part>
                                                
<stereotype_part> ::= stereotypeStart <stereotype> stereotypeEnd
                   |  <>

<stereotype> ::= id

<visibility> ::= '+' | '#' | '-' | '~'
              | <> 

<operation_name> ::= <id_expr>
                  

<parameter_list_part> ::= '(' <parameter_list> ')'
                        | <>

<parameter_list> ::= <parameter_list> ',' <parameter>
                  | <parameter>
                  | <>

<parameter> ::= <parameter_kind> <parameter_name> <parameter_type_expression> <parameter_default_value>

<parameter_kind> ::= 'in' | 'out' | 'inout' | <>


<parameter_name> ::= <id_expr>

<parameter_type_expression> ::= <type_expression>

<parameter_default_value> ::= '=' <parameter_default_value_literal> | <>
                           

<return_type_expression_part> ::= <return_type_expression>

<return_type_expression> ::= <type_expression>
<type_expression> ::=  ':' <type_id> | <>

<type_id> ::= <id_expr>
<parameter_default_value_literal> ::= <id_expr>

<nullable_id_expr> ::= <id_expr> | <>
                    
<id_expr> ::= id
      | id openParen <nullable_id_expr> closeParen
      | id openSquareBracket <nullable_id_expr> closeSquareBracket
      | id openAngleBracket <nullable_id_expr> closeAngleBracket
             

