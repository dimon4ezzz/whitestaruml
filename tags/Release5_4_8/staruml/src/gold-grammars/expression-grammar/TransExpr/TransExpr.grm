"Start Symbol" = <transition_expression>
"Case Sensitive" = False                
               
! -------------------------------------------------
! Character Sets
! -------------------------------------------------

{Visibility Chars} = [+-#~]
{Restricted Chars} = {All Space} + {Visibility Chars} ! Restricted Chars should not start or end an indentifier as they may collide with other symbols                   
{Boundary String Chars} = {All Letters} +  {Number} + {Euro Sign} + [_,;/\.&@$%*"`’'']
{String Chars} = {Boundary String Chars} + {Restricted Chars}
! -------------------------------------------------
! Terminals
! -------------------------------------------------
id = {Boundary String Chars}+ ( {Restricted Chars}+ {Boundary String Chars}+ )*

openAngleBracket = {All Space}* '<' {All Space}*
closeAngleBracket = {All Space}* '>'

! -------------------------------------------------
! Rules
! -------------------------------------------------

! The grammar starts below
<transition_expression> ::= <event_signature> <guard_condition> <action_expression>
                                                
<event_signature> ::= <event_name> 
                   | <event_name> '(' <parameter_list> ')'
                   | <>

<event_name> ::= <id_expr>
             
<parameter_list> ::= <parameter_list> ',' <parameter>
                  | <parameter>

<parameter> ::= <parameter_name> ':' <type_expression>
             | <parameter_name>

<parameter_name> ::= <id_expr>

<type_expression> ::= <id_expr>

<guard_condition> ::= '[' <id_expr> ']' 
                   | <>
                   
<action_expression> ::= '/' <id_expr> 
                     | <>
                     
<nullable_id_expr> ::= <id_expr> | <>

<id_expr> ::= id
      | id openAngleBracket <nullable_id_expr> closeAngleBracket
        

